{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/nav-bar/nav-bar.component.ts","./src/app/shared/nav-bar/nav-bar.component.html","./src/environments/environment.ts","./src/app/pages/reportes/reportes.component.ts","./src/app/pages/reportes/reportes.component.html","./src/app/services/ply.service.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material/material.module.ts","./src/app/pages/analisis/analisis.component.ts","./src/app/pages/analisis/analisis.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEAAuB;QACnB,2EAAU;QACN,kFAAiB;QACf,iFAAgB;QAAA,4EAAiB;QAAA,4DAAiB;QAClD,oFAAmB;QAAA,qEAAU;QAAA,4DAAoB;QACnD,4DAAkB;QAClB,mFAAkB;QAChB,oEAAG;QACD,umBAMF;QAAA,4DAAI;QAEJ,4EAAU;QACR,mFAAiB;QACb,qEAAwD;QACxD,kFAAgB;QAAA,2EAAe;QAAA,4DAAiB;QAChD,qFAAmB;QAAA,2GAA+C;QAAA,4DAAoB;QAC1F,4DAAkB;QAClB,oFAAkB;QACd,+EAAsB;QAClB,oFAA+B;QAAA,wEAAM;QAAA,qEAAG;QAAA,wEAAO;QAAA,4DAAI;QAAC,sEAAS;QAAA,4DAAO;QAAA,4DAAgB;QAIxF,4DAAW;QACf,4DAAmB;QAEnB,oFAAkB;QACd,wEAIC;QAAA,kEAAM;QAAA,4DAAI;QACf,4DAAmB;QACrB,4DAAW;QACb,4DAAmB;QAEvB,4DAAW;QACf,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBC,MAAM,eAAe;IAE1B;QADA,eAAU,GAAG,KAAK,CAAC;IACH,CAAC;;8EAFN,eAAe;+FAAf,eAAe;;QCzB5B,2FAAkC;QAC9B,oFAAkC;QAC9B,8EAAa;QACT,uEAAM;QAAA,+DAAI;QAAA,4DAAO;QACjB,4EAEC;QADG,mRAAS,YAAgB,IAAC;QAE9B,2EAAU;QAAA,+DAAI;QAAA,4DAAW;QAC7B,4DAAS;QACT,4DAAc;QAEd,+EAAc;QACV,wEAGC;QADE,+QAAS,YAAgB,IAAC;QAEzB,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAI;QACJ,wEAGC;QADE,+QAAS,YAAgB,IAAC;QAEzB,wEAAM;QAAA,yEAAQ;QAAA,4DAAO;QACzB,4DAAI;QAEJ,wEAGC;QADE,+QAAS,YAAgB,IAAC;QAEzB,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QACzB,4DAAI;QACR,4DAAe;QAEnB,4DAAc;QAEd,+EAAc;QACV,6EAEC;QADO,oRAAS,YAAgB,IAAC;QAE9B,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC7B,4DAAS;QAET,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QAEjB,sEAAoC;QACpC,wEAAyF;QACrF,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QACzB,yEACJ;QAAA,4DAAI;QAER,4DAAc;QAEd,4EAA+B;QAGnC,4DAAwB;;;;;;;;;;;;;;ACxDxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,aAAa,EAAE,sCAAsC;CACtD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;;;;AAOzD,MAAM,iBAAiB;IAI5B;QAFQ,SAAI,GAAY,qEAAW,CAAC,aAAa;IAEjC,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFAPU,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEAAuB;QAEnB,2EAAU;QACN,kFAAiB;QACb,iFAAgB;QAAA,kGAA6B;QAAA,4DAAiB;QAC9D,oFAAmB;QAAA,sHAAsD;QAAA,4DAAoB;QACjG,4DAAkB;QAElB,mFAAkB;QACd,gEAAI;QACJ,yEAA0B;QACtB,wEAGC;QACC,gFACF;QAAA,4DAAI;QAEJ,wEAGC;QACG,+FACJ;QAAA,4DAAI;QAEJ,wEAGC;QACG,iEACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAmB;QAEvB,4DAAW;QAGf,4DAAM;;;;;;;;;;;;;;ACnCN;AAAA;AAAA;AAAA;AAAA;AAA2D;;;AAOpD,MAAM,UAAU;IAIrB,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFrC,aAAQ,GAAW,wEAAW,CAAC,aAAa,CAAC;IAEJ,CAAC;IAE1C,QAAQ,CAAC,IAAa;QACpB,IAAI,GAAG,GAAiB;YACtB,IAAI,EAAG,IAAI;SACZ;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,GAAG,IAAI,CAAC,QAAQ,WAAW,EAAE,GAAG,CAAC,CAAC;IACxE,CAAC;;oEAbU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEc;AACC;AACL;;AAkBlD,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBATd;YACP,4DAAY;YACZ,oEAAgB;YAChB,wEAAc;SACf;mIAKU,YAAY,mBAXrB,0EAAe,aAGf,4DAAY;QACZ,oEAAgB;QAChB,wEAAc,aAGd,0EAAe;;;;;;;;;;;;;;;;;;;ACbZ,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAA2B;;;;;;;;;;;;;;ACC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACX;AAEW;AACT;AAGgC;AAEnB;AACN;AACM;AACY;AACA;AAChB;;AAsBjD,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YAVJ;YACP,oEAAgB;YAChB,qEAAgB;YAChB,4FAAuB;YACvB,uEAAa;YACb,sEAAgB;YAChB,0DAAW;YACX,wEAAc;YACd,kEAAY;SACb;oIAIU,SAAS,mBAlBlB,2DAAY;QACZ,wEAAa;QACb,oFAAiB;QACjB,qFAAiB,aAGjB,oEAAgB;QAChB,qEAAgB;QAChB,4FAAuB;QACvB,uEAAa;QACb,sEAAgB;QAChB,0DAAW;QACX,wEAAc;QACd,kEAAY;;;;;;;;;;;;;AChChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEU;AACJ;AACM;AACN;AACA;AACM;AACN;AACM;;AAkBpD,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAdhB;YACP,4DAAY;SACb,EAEC,0EAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,wEAAe;QACf,0EAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,0EAAgB;mIAGP,cAAc,cAbvB,4DAAY,aAGZ,0EAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,wEAAe;QACf,0EAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,0EAAgB;;;;;;;;;;;;;ACvBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;;;;;;;;AAO7B,MAAM,iBAAiB;IAW5B,YAAqB,UAAuB;QAAvB,eAAU,GAAV,UAAU,CAAa;QAT5C,YAAO,GAAI;YACT,YAAY,EAAE,KAAK;YACnB,WAAW,EAAE,IAAI;YACjB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,cAAc;SACrB;QACD,YAAO,GAAY,+BAA+B;QAClD,YAAO,GAAY,EAAE;QAGnB,IAAI,CAAC,OAAO,GAAG,EAAE;IACnB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;;kFAhCU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEAAuB;QACnB,yEAAmB;QACf,yEAAQ;QACJ,yEAA0B;QACtB,2EAAU;QAAA,mEAAQ;QAAA,4DAAW;QAC7B,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAClB,4DAAM;QACV,4DAAS;QACT,oFAKC;QAHG,+LAAqB;QAGxB,4DAAiB;QAClB,gEAAI;QACJ,0EAA0B;QACtB,6EAGC;QADG,0IAAS,cAAU,IAAC;QAEpB,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QAChC,sEACJ;QAAA,4DAAS;QACT,6EAGC;QADO,0IAAS,oBAAgB,IAAC;QAE9B,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QACtB,qEACR;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QACN,iEAAI;QAEJ,0EAAmB;QACf,0EAAQ;QACJ,0EAA0B;QACtB,4EAAU;QAAA,qEAAS;QAAA,4DAAW;QAC9B,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAM;QACV,4DAAS;QACT,qFAQC;QAPG,gMAAqB;QAOxB,4DAAiB;QAClB,iEAAI;QACJ,0EAA0B;QACtB,6EAGC;QADO,0IAAS,oBAAgB,IAAC;QAElC,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QACtB,qEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnDM,0DAAqB;QAArB,gFAAqB;QAgCrB,2DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;ACzCjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;AACY;AACA;;;AAExE,MAAM,MAAM,GAAW;IACnB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAE,wEAAa;KACzB;IACD;QACE,IAAI,EAAC,UAAU;QACf,SAAS,EAAE,oFAAiB;KAC7B;IACD;QACE,IAAI,EAAC,UAAU;QACf,SAAS,EAAE,oFAAiB;KAC7B;CAEJ,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;ACxBuB;AAGF;AACY;AAEV;AACJ;AAE3C,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACdpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <mat-card>\n        <mat-card-header>\n          <mat-card-title>Bienvenido a JOLC</mat-card-title>\n          <mat-card-subtitle>Proyecto 1</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <p>\n            Julia es un lenguaje de programación reciente que le interesa a científicos de datos,\n            estadísticos y analistas financieros. Este cuenta con distintas características atractivas para\n            los programadores. Aun así, Julia al ser un lenguaje de programación reciente, hay pocos\n            lugares donde se pueda probar su sintaxis y ejecución de manera sencilla. Es por eso por lo\n            que se le solicita el desarrollo de JOLC, un lenguaje de programación basado en Julia que\n            se podrá programar y ejecutar desde cualquier navegador.\n          </p>\n\n          <mat-card>\n            <mat-card-header>\n                <div mat-card-avatar class=\"example-header-image\"></div>\n                <mat-card-title>Erick Villatoro</mat-card-title>\n                <mat-card-subtitle>Estudiante de ingenieria en ciencias y sistemas</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-list role=\"list\">\n                    <mat-list-item role=\"listitem\"><span><b>Carné: </b> 201900907</span></mat-list-item>\n                    \n                    \n                    \n                </mat-list>\n            </mat-card-content>\n    \n            <mat-card-actions>\n                <a  mat-raised-button\n                    color=\"accent\"\n                    href=\"https://github.com/Villa01/\"\n                    target=\"_blank\"\n                >Github</a>\n            </mat-card-actions>\n          </mat-card>\n        </mat-card-content>\n\n    </mat-card>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styles: [\n    `\n    .example-container {\n      width: 500px;\n      height: 300px;\n      border: 1px solid rgba(0, 0, 0, 0.5);\n    }\n\n    .example-sidenav-content {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .example-sidenav {\n      padding: 20px;\n    }\n    `\n  ]\n})\nexport class NavBarComponent {\n  showFiller = false;\n  constructor() { }\n\n}\n","\n<mat-sidenav-container fullscreen>\n    <mat-sidenav #sidenav mode=\"push\">\n        <mat-toolbar>\n            <span>Menu</span>\n            <button mat-icon-button\n                (click)=\"sidenav.toggle()\"\n            >\n            <mat-icon>menu</mat-icon>\n        </button>\n        </mat-toolbar>\n\n        <mat-nav-list>\n            <a routerLink=\"/\"\n               mat-list-item\n               (click)=\"sidenav.toggle()\"\n            >\n                <span>Home</span>\n            </a>\n            <a routerLink=\"analizar\"\n               mat-list-item\n               (click)=\"sidenav.toggle()\"\n            >\n                <span>Análisis</span>\n            </a>\n\n            <a routerLink=\"reportes\"\n               mat-list-item\n               (click)=\"sidenav.toggle()\"\n            >\n                <span>Reportes</span>\n            </a>\n        </mat-nav-list>\n        \n    </mat-sidenav>\n\n    <mat-toolbar >\n        <button mat-icon-button\n                (click)=\"sidenav.toggle()\"\n        >\n            <mat-icon>menu</mat-icon>\n        </button>\n\n        <span>JOLC</span>\n        \n        <span class=\"example-spacer\"></span>\n        <a mat-raised-button href=\"https://github.com/Villa01/OLC2_201900907_P1\" target=\"_blank\">\n            <mat-icon>code</mat-icon>\n            Repositorio\n        </a>\n    \n    </mat-toolbar>\n\n    <router-outlet></router-outlet>\n    \n\n</mat-sidenav-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  flaskEndpoint: 'https://jolc-201900907.herokuapp.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-reportes',\n  templateUrl: './reportes.component.html',\n  styleUrls: ['./reportes.component.css']\n})\nexport class ReportesComponent implements OnInit {\n\n  private path : string = environment.flaskEndpoint\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container\">\n\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Resultado del último análisis</mat-card-title>\n            <mat-card-subtitle>A continuación puede encontrar los reportes generados.</mat-card-subtitle>\n        </mat-card-header>\n\n        <mat-card-content>\n            <br>\n            <div class=\"bt-container\">\n                <a mat-raised-button color=\"accent\"\n                    href=\"https://jolc-201900907.herokuapp.com/static/assets/err.html\"\n                    download=\"err.html\"\n                >\n                  Reporte de errores  \n                </a>\n        \n                <a mat-raised-button color=\"accent\"\n                    href=\"https://jolc-201900907.herokuapp.com/static/assets/ts.html\"\n                    download=\"ts.html\"\n                >\n                    Reporte de tabla de símbolos\n                </a>\n        \n                <a mat-raised-button color=\"accent\"\n                    href=\"https://jolc-201900907.herokuapp.com/static/assets/ast.svg\"\n                    download=\"ts.html\"\n                >\n                    AST\n                </a>\n            </div>\n        </mat-card-content>\n        \n    </mat-card>\n    \n    \n</div>\n\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { textRequest, textResponse } from '../interfaces/flask.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlyService {\n\n  flaskUrl: string = environment.flaskEndpoint;\n\n  constructor( private http: HttpClient) { }\n\n  analizar(text : string):Observable<textResponse>{\n    let req : textRequest = {\n      text : text\n    }\n\n    console.log(JSON.stringify(req));\n    return this.http.post<textResponse>(`${this.flaskUrl}/analizar`, req);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from '../material/material.module';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { AppRoutingModule } from '../app-routing.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    NavBarComponent,\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    MaterialModule\n  ],\n  exports: [\n    NavBarComponent,\n  ]\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'JOLC';\n}\n","<app-nav-bar></app-nav-bar>\r\n\r\n\r\n  ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from './material/material.module';\nimport { SharedModule } from './shared/shared.module';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AnalisisComponent } from './pages/analisis/analisis.component';\nimport { ReportesComponent } from './pages/reportes/reportes.component';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AnalisisComponent,\n    ReportesComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    CodemirrorModule,\n    FormsModule,\n    MaterialModule,\n    SharedModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';  \nimport {MatSidenavModule} from '@angular/material/sidenav'; \nimport {MatTabsModule} from '@angular/material/tabs'; \nimport {MatListModule} from '@angular/material/list'; \nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatCardModule} from '@angular/material/card'; \nimport {MatDividerModule} from '@angular/material/divider'; \n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatDividerModule\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PlyService } from 'src/app/services/ply.service';\nimport 'codemirror/mode/julia/julia'\n\n@Component({\n  selector: 'app-analisis',\n  templateUrl: './analisis.component.html',\n  styleUrls: ['./analisis.component.css']\n})\nexport class AnalisisComponent implements OnInit {\n\n  options  = {\n    lineWrapping: false,\n    lineNumbers: true,\n    theme: 'yonce',\n    mode: \"text/x-julia\"\n  }\n  entrada : string = `println(\"Bienvenido a JOLC\");`\n  consola : string = \"\"\n\n  constructor( private plyService : PlyService ) { \n    this.consola = \"\"\n  }\n\n  ngOnInit(): void {\n  }\n\n  ejecutar(){\n    this.plyService.analizar(this.entrada).subscribe(\n      resp => {\n        this.consola = resp.text\n      }\n    );\n  }\n\n  limpiarEntrada(){\n    this.entrada = \"\";\n  }\n\n  limpiarConsola(){\n    this.consola = \"\";\n  }\n\n}\n","<div class=\"container\">\r\n    <div class=\"input\">\r\n        <header>\r\n            <div class=\"ti-container\">\r\n                <mat-icon>keyboard</mat-icon>\r\n                <h1>Input</h1>\r\n            </div>\r\n        </header>\r\n        <ngx-codemirror\r\n\r\n            [(ngModel)]=\"entrada\"\r\n            [options]=\"options\"\r\n        class = \"entrada\"\r\n        ></ngx-codemirror>\r\n        <br>\r\n        <div class=\"bt-container\">\r\n            <button mat-raised-button\r\n                color=\"accent\"\r\n                (click)=\"ejecutar()\"\r\n            >\r\n                <mat-icon>data_object</mat-icon>\r\n                Ejecutar\r\n            </button>\r\n            <button mat-raised-button\r\n                    color=\"warn\"\r\n                    (click)=\"limpiarEntrada()\"\r\n            >\r\n                <mat-icon>clear</mat-icon>\r\n                    Limpiar\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <br>\r\n\r\n    <div class=\"input\">\r\n        <header>\r\n            <div class=\"ti-container\">\r\n                <mat-icon>summarize</mat-icon>\r\n                <h1>Output</h1>\r\n            </div>\r\n        </header>\r\n        <ngx-codemirror\r\n            [(ngModel)]=\"consola\"\r\n            [options]=\"{\r\n            theme: 'yonce',\r\n            lineWrapping: true,\r\n            mode: 'null',\r\n            readOnly :'nocursor'\r\n            }\"\r\n        ></ngx-codemirror>\r\n        <br>\r\n        <div class=\"bt-container\">\r\n            <button mat-raised-button\r\n                    color=\"warn\"\r\n                    (click)=\"limpiarConsola()\"\r\n            >\r\n            <mat-icon>clear</mat-icon>\r\n                Limpiar\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AnalisisComponent } from './pages/analisis/analisis.component';\nimport { ReportesComponent } from './pages/reportes/reportes.component';\n\nconst routes: Routes = [\n    {\n      path:'',\n      component: HomeComponent,\n    },\n    {\n      path:'analizar',\n      component: AnalisisComponent\n    }, \n    {\n      path:'reportes',\n      component: ReportesComponent\n    }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}