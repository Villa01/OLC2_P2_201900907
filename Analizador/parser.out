Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion PYC
Rule 3     instrucciones -> instrucciones instruccion
Rule 4     instrucciones -> instruccion PYC
Rule 5     instrucciones -> instruccion
Rule 6     instruccion -> print
Rule 7     instruccion -> println
Rule 8     instruccion -> asignacion
Rule 9     instruccion -> declaracion
Rule 10    instruccion -> sent_if
Rule 11    instruccion -> sent_while
Rule 12    instruccion -> sent_for
Rule 13    instruccion -> sent_break
Rule 14    instruccion -> sent_continue
Rule 15    instruccion -> asignacion_vect
Rule 16    instruccion -> sent_function
Rule 17    instruccion -> sent_llamada
Rule 18    instruccion -> sent_return
Rule 19    instruccion -> sent_push
Rule 20    instruccion -> sent_pop
Rule 21    instruccion -> expresion
Rule 22    sent_pop -> POP NOT PARA expresion PARC
Rule 23    sent_push -> PUSH NOT PARA expresion COMA expresion PARC
Rule 24    sent_return -> RETURN
Rule 25    sent_return -> RETURN expresion
Rule 26    sent_llamada -> ID PARA PARC
Rule 27    sent_llamada -> ID PARA lista_expr PARC
Rule 28    sent_function -> FUNCTION ID PARA parametros PARC instrucciones END
Rule 29    sent_function -> FUNCTION ID PARA PARC instrucciones END
Rule 30    parametros -> parametros COMA ID
Rule 31    parametros -> parametros COMA ID DOSPTS DOSPTS tipo
Rule 32    parametros -> ID
Rule 33    parametros -> ID DOSPTS DOSPTS tipo
Rule 34    declaracion -> GLOBAL ID
Rule 35    declaracion -> LOCAL ID
Rule 36    asignacion_vect -> ID list_vector IGUAL expresion
Rule 37    sent_break -> BREAK
Rule 38    sent_continue -> CONTINUE
Rule 39    sent_for -> FOR ID IN expresion instrucciones END
Rule 40    sent_while -> WHILE expresion instrucciones END
Rule 41    sent_while -> WHILE PARA expresion PARC instrucciones END
Rule 42    sent_if -> IF expresion instrucciones END
Rule 43    sent_if -> IF PARA expresion PARC instrucciones END
Rule 44    sent_if -> IF expresion instrucciones ELSE instrucciones END
Rule 45    sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END
Rule 46    sent_if -> IF expresion instrucciones else_if
Rule 47    sent_if -> IF PARA expresion PARC instrucciones else_if
Rule 48    else_if -> ELSEIF expresion instrucciones END
Rule 49    else_if -> ELSEIF PARA expresion PARC instrucciones END
Rule 50    else_if -> ELSEIF expresion instrucciones else_if
Rule 51    else_if -> ELSEIF PARA expresion PARC instrucciones else_if
Rule 52    else_if -> ELSEIF expresion instrucciones ELSE instrucciones END
Rule 53    else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END
Rule 54    asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo
Rule 55    asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
Rule 56    asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
Rule 57    asignacion -> ID IGUAL expresion
Rule 58    asignacion -> GLOBAL ID IGUAL expresion
Rule 59    asignacion -> LOCAL ID IGUAL expresion
Rule 60    tipo -> INT64
Rule 61    tipo -> FLOAT64
Rule 62    tipo -> STRING
Rule 63    tipo -> NOTHING
Rule 64    tipo -> BOOL
Rule 65    tipo -> CHAR
Rule 66    print -> PRINT PARA lista_expr PARC
Rule 67    println -> PRINT PARA PARC
Rule 68    println -> PRINTLN PARA PARC
Rule 69    println -> PRINTLN PARA lista_expr PARC
Rule 70    lista_expr -> lista_expr COMA expresion
Rule 71    lista_expr -> expresion
Rule 72    expresion -> expresion MAS expresion
Rule 73    expresion -> expresion MENOS expresion
Rule 74    expresion -> expresion POR expresion
Rule 75    expresion -> expresion DIVIDIDO expresion
Rule 76    expresion -> expresion MOD expresion
Rule 77    expresion -> expresion POT expresion
Rule 78    expresion -> ID list_vector
Rule 79    list_vector -> list_vector CORA expresion CORC
Rule 80    list_vector -> CORA expresion CORC
Rule 81    expresion -> MENOS expresion
Rule 82    expresion -> expresion MENORIGUAL expresion
Rule 83    expresion -> expresion MAYORIGUAL expresion
Rule 84    expresion -> expresion MENORQUE expresion
Rule 85    expresion -> expresion MAYORQUE expresion
Rule 86    expresion -> expresion DIFF expresion
Rule 87    expresion -> expresion IGUALIGUAL expresion
Rule 88    expresion -> expresion AND expresion
Rule 89    expresion -> expresion OR expresion
Rule 90    expresion -> NOT expresion
Rule 91    expresion -> PARA expresion PARC
Rule 92    expresion -> ENTERO
Rule 93    expresion -> DECIMAL
Rule 94    expresion -> CADENA
Rule 95    expresion -> TRUE
Rule 96    expresion -> FALSE
Rule 97    expresion -> CORA lista_expr CORC
Rule 98    expresion -> expresion DOSPTS expresion
Rule 99    expresion -> sent_llamada
Rule 100   expresion -> ID
Rule 101   expresion -> LOG10 PARA expresion PARC
Rule 102   expresion -> LOG PARA expresion COMA expresion PARC
Rule 103   expresion -> SENO PARA expresion PARC
Rule 104   expresion -> COS PARA expresion PARC
Rule 105   expresion -> TAN PARA expresion PARC
Rule 106   expresion -> SQRT PARA expresion PARC
Rule 107   expresion -> LOWERCASE PARA expresion PARC
Rule 108   expresion -> UPPERCASE PARA expresion PARC
Rule 109   expresion -> TRUNC PARA expresion PARC
Rule 110   expresion -> FLOAT PARA expresion PARC
Rule 111   expresion -> FSTRING PARA expresion PARC
Rule 112   expresion -> TYPEOF PARA expresion PARC
Rule 113   expresion -> PARSE PARA tipo COMA expresion PARC
Rule 114   expresion -> LENGTH PARA expresion PARC
Rule 115   expresion -> POP NOT PARA expresion PARC

Terminals, with rules where they appear

AND                  : 88
BOOL                 : 64
BREAK                : 37
CADENA               : 94
CHAR                 : 65
COMA                 : 23 30 31 70 102 113
CONTINUE             : 38
CORA                 : 79 80 97
CORC                 : 79 80 97
COS                  : 104
DECIMAL              : 93
DIFF                 : 86
DIVIDIDO             : 75
DOSPTS               : 31 31 33 33 54 54 55 55 56 56 98
ELSE                 : 44 45 52 53
ELSEIF               : 48 49 50 51 52 53
END                  : 28 29 39 40 41 42 43 44 45 48 49 52 53
ENTERO               : 92
FALSE                : 96
FLOAT                : 110
FLOAT64              : 61
FOR                  : 39
FSTRING              : 111
FUNCTION             : 28 29
GLOBAL               : 34 55 58
ID                   : 26 27 28 29 30 31 32 33 34 35 36 39 54 55 56 57 58 59 78 100
IF                   : 42 43 44 45 46 47
IGUAL                : 36 54 55 56 57 58 59
IGUALIGUAL           : 87
IN                   : 39
INT64                : 60
LENGTH               : 114
LOCAL                : 35 56 59
LOG                  : 102
LOG10                : 101
LOWERCASE            : 107
MAS                  : 72
MAYORIGUAL           : 83
MAYORQUE             : 85
MENORIGUAL           : 82
MENORQUE             : 84
MENOS                : 73 81
MOD                  : 76
NOT                  : 22 23 90 115
NOTHING              : 63
OR                   : 89
PARA                 : 22 23 26 27 28 29 41 43 45 47 49 51 53 66 67 68 69 91 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
PARC                 : 22 23 26 27 28 29 41 43 45 47 49 51 53 66 67 68 69 91 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
PARSE                : 113
POP                  : 22 115
POR                  : 74
POT                  : 77
PRINT                : 66 67
PRINTLN              : 68 69
PUSH                 : 23
PYC                  : 2 4
RETURN               : 24 25
SENO                 : 103
SQRT                 : 106
STRING               : 62
TAN                  : 105
TRUE                 : 95
TRUNC                : 109
TYPEOF               : 112
UPPERCASE            : 108
WHILE                : 40 41
error                : 

Nonterminals, with rules where they appear

asignacion           : 8
asignacion_vect      : 15
declaracion          : 9
else_if              : 46 47 50 51
expresion            : 21 22 23 23 25 36 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 70 71 72 72 73 73 74 74 75 75 76 76 77 77 79 80 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 91 98 98 101 102 102 103 104 105 106 107 108 109 110 111 112 113 114 115
init                 : 0
instruccion          : 2 3 4 5
instrucciones        : 1 2 3 28 29 39 40 41 42 43 44 44 45 45 46 47 48 49 50 51 52 52 53 53
list_vector          : 36 78 79
lista_expr           : 27 66 69 70 97
parametros           : 28 30 31
print                : 6
println              : 7
sent_break           : 13
sent_continue        : 14
sent_for             : 12
sent_function        : 16
sent_if              : 10
sent_llamada         : 17 99
sent_pop             : 20
sent_push            : 19
sent_return          : 18
sent_while           : 11
tipo                 : 31 33 54 55 56 113

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18
    expresion                      shift and go to state 19

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18
    expresion                      shift and go to state 19

state 3

    (4) instrucciones -> instruccion . PYC
    (5) instrucciones -> instruccion .

    PYC             shift and go to state 58
    PRINT           reduce using rule 5 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 5 (instrucciones -> instruccion .)
    ID              reduce using rule 5 (instrucciones -> instruccion .)
    GLOBAL          reduce using rule 5 (instrucciones -> instruccion .)
    LOCAL           reduce using rule 5 (instrucciones -> instruccion .)
    IF              reduce using rule 5 (instrucciones -> instruccion .)
    WHILE           reduce using rule 5 (instrucciones -> instruccion .)
    FOR             reduce using rule 5 (instrucciones -> instruccion .)
    BREAK           reduce using rule 5 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 5 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 5 (instrucciones -> instruccion .)
    RETURN          reduce using rule 5 (instrucciones -> instruccion .)
    PUSH            reduce using rule 5 (instrucciones -> instruccion .)
    POP             reduce using rule 5 (instrucciones -> instruccion .)
    MENOS           reduce using rule 5 (instrucciones -> instruccion .)
    NOT             reduce using rule 5 (instrucciones -> instruccion .)
    PARA            reduce using rule 5 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 5 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 5 (instrucciones -> instruccion .)
    CADENA          reduce using rule 5 (instrucciones -> instruccion .)
    TRUE            reduce using rule 5 (instrucciones -> instruccion .)
    FALSE           reduce using rule 5 (instrucciones -> instruccion .)
    CORA            reduce using rule 5 (instrucciones -> instruccion .)
    LOG10           reduce using rule 5 (instrucciones -> instruccion .)
    LOG             reduce using rule 5 (instrucciones -> instruccion .)
    SENO            reduce using rule 5 (instrucciones -> instruccion .)
    COS             reduce using rule 5 (instrucciones -> instruccion .)
    TAN             reduce using rule 5 (instrucciones -> instruccion .)
    SQRT            reduce using rule 5 (instrucciones -> instruccion .)
    LOWERCASE       reduce using rule 5 (instrucciones -> instruccion .)
    UPPERCASE       reduce using rule 5 (instrucciones -> instruccion .)
    TRUNC           reduce using rule 5 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 5 (instrucciones -> instruccion .)
    FSTRING         reduce using rule 5 (instrucciones -> instruccion .)
    TYPEOF          reduce using rule 5 (instrucciones -> instruccion .)
    PARSE           reduce using rule 5 (instrucciones -> instruccion .)
    LENGTH          reduce using rule 5 (instrucciones -> instruccion .)
    $end            reduce using rule 5 (instrucciones -> instruccion .)
    END             reduce using rule 5 (instrucciones -> instruccion .)
    ELSE            reduce using rule 5 (instrucciones -> instruccion .)
    ELSEIF          reduce using rule 5 (instrucciones -> instruccion .)


state 4

    (6) instruccion -> print .

    PYC             reduce using rule 6 (instruccion -> print .)
    PRINT           reduce using rule 6 (instruccion -> print .)
    PRINTLN         reduce using rule 6 (instruccion -> print .)
    ID              reduce using rule 6 (instruccion -> print .)
    GLOBAL          reduce using rule 6 (instruccion -> print .)
    LOCAL           reduce using rule 6 (instruccion -> print .)
    IF              reduce using rule 6 (instruccion -> print .)
    WHILE           reduce using rule 6 (instruccion -> print .)
    FOR             reduce using rule 6 (instruccion -> print .)
    BREAK           reduce using rule 6 (instruccion -> print .)
    CONTINUE        reduce using rule 6 (instruccion -> print .)
    FUNCTION        reduce using rule 6 (instruccion -> print .)
    RETURN          reduce using rule 6 (instruccion -> print .)
    PUSH            reduce using rule 6 (instruccion -> print .)
    POP             reduce using rule 6 (instruccion -> print .)
    MENOS           reduce using rule 6 (instruccion -> print .)
    NOT             reduce using rule 6 (instruccion -> print .)
    PARA            reduce using rule 6 (instruccion -> print .)
    ENTERO          reduce using rule 6 (instruccion -> print .)
    DECIMAL         reduce using rule 6 (instruccion -> print .)
    CADENA          reduce using rule 6 (instruccion -> print .)
    TRUE            reduce using rule 6 (instruccion -> print .)
    FALSE           reduce using rule 6 (instruccion -> print .)
    CORA            reduce using rule 6 (instruccion -> print .)
    LOG10           reduce using rule 6 (instruccion -> print .)
    LOG             reduce using rule 6 (instruccion -> print .)
    SENO            reduce using rule 6 (instruccion -> print .)
    COS             reduce using rule 6 (instruccion -> print .)
    TAN             reduce using rule 6 (instruccion -> print .)
    SQRT            reduce using rule 6 (instruccion -> print .)
    LOWERCASE       reduce using rule 6 (instruccion -> print .)
    UPPERCASE       reduce using rule 6 (instruccion -> print .)
    TRUNC           reduce using rule 6 (instruccion -> print .)
    FLOAT           reduce using rule 6 (instruccion -> print .)
    FSTRING         reduce using rule 6 (instruccion -> print .)
    TYPEOF          reduce using rule 6 (instruccion -> print .)
    PARSE           reduce using rule 6 (instruccion -> print .)
    LENGTH          reduce using rule 6 (instruccion -> print .)
    $end            reduce using rule 6 (instruccion -> print .)
    END             reduce using rule 6 (instruccion -> print .)
    ELSE            reduce using rule 6 (instruccion -> print .)
    ELSEIF          reduce using rule 6 (instruccion -> print .)


state 5

    (7) instruccion -> println .

    PYC             reduce using rule 7 (instruccion -> println .)
    PRINT           reduce using rule 7 (instruccion -> println .)
    PRINTLN         reduce using rule 7 (instruccion -> println .)
    ID              reduce using rule 7 (instruccion -> println .)
    GLOBAL          reduce using rule 7 (instruccion -> println .)
    LOCAL           reduce using rule 7 (instruccion -> println .)
    IF              reduce using rule 7 (instruccion -> println .)
    WHILE           reduce using rule 7 (instruccion -> println .)
    FOR             reduce using rule 7 (instruccion -> println .)
    BREAK           reduce using rule 7 (instruccion -> println .)
    CONTINUE        reduce using rule 7 (instruccion -> println .)
    FUNCTION        reduce using rule 7 (instruccion -> println .)
    RETURN          reduce using rule 7 (instruccion -> println .)
    PUSH            reduce using rule 7 (instruccion -> println .)
    POP             reduce using rule 7 (instruccion -> println .)
    MENOS           reduce using rule 7 (instruccion -> println .)
    NOT             reduce using rule 7 (instruccion -> println .)
    PARA            reduce using rule 7 (instruccion -> println .)
    ENTERO          reduce using rule 7 (instruccion -> println .)
    DECIMAL         reduce using rule 7 (instruccion -> println .)
    CADENA          reduce using rule 7 (instruccion -> println .)
    TRUE            reduce using rule 7 (instruccion -> println .)
    FALSE           reduce using rule 7 (instruccion -> println .)
    CORA            reduce using rule 7 (instruccion -> println .)
    LOG10           reduce using rule 7 (instruccion -> println .)
    LOG             reduce using rule 7 (instruccion -> println .)
    SENO            reduce using rule 7 (instruccion -> println .)
    COS             reduce using rule 7 (instruccion -> println .)
    TAN             reduce using rule 7 (instruccion -> println .)
    SQRT            reduce using rule 7 (instruccion -> println .)
    LOWERCASE       reduce using rule 7 (instruccion -> println .)
    UPPERCASE       reduce using rule 7 (instruccion -> println .)
    TRUNC           reduce using rule 7 (instruccion -> println .)
    FLOAT           reduce using rule 7 (instruccion -> println .)
    FSTRING         reduce using rule 7 (instruccion -> println .)
    TYPEOF          reduce using rule 7 (instruccion -> println .)
    PARSE           reduce using rule 7 (instruccion -> println .)
    LENGTH          reduce using rule 7 (instruccion -> println .)
    $end            reduce using rule 7 (instruccion -> println .)
    END             reduce using rule 7 (instruccion -> println .)
    ELSE            reduce using rule 7 (instruccion -> println .)
    ELSEIF          reduce using rule 7 (instruccion -> println .)


state 6

    (8) instruccion -> asignacion .

    PYC             reduce using rule 8 (instruccion -> asignacion .)
    PRINT           reduce using rule 8 (instruccion -> asignacion .)
    PRINTLN         reduce using rule 8 (instruccion -> asignacion .)
    ID              reduce using rule 8 (instruccion -> asignacion .)
    GLOBAL          reduce using rule 8 (instruccion -> asignacion .)
    LOCAL           reduce using rule 8 (instruccion -> asignacion .)
    IF              reduce using rule 8 (instruccion -> asignacion .)
    WHILE           reduce using rule 8 (instruccion -> asignacion .)
    FOR             reduce using rule 8 (instruccion -> asignacion .)
    BREAK           reduce using rule 8 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 8 (instruccion -> asignacion .)
    FUNCTION        reduce using rule 8 (instruccion -> asignacion .)
    RETURN          reduce using rule 8 (instruccion -> asignacion .)
    PUSH            reduce using rule 8 (instruccion -> asignacion .)
    POP             reduce using rule 8 (instruccion -> asignacion .)
    MENOS           reduce using rule 8 (instruccion -> asignacion .)
    NOT             reduce using rule 8 (instruccion -> asignacion .)
    PARA            reduce using rule 8 (instruccion -> asignacion .)
    ENTERO          reduce using rule 8 (instruccion -> asignacion .)
    DECIMAL         reduce using rule 8 (instruccion -> asignacion .)
    CADENA          reduce using rule 8 (instruccion -> asignacion .)
    TRUE            reduce using rule 8 (instruccion -> asignacion .)
    FALSE           reduce using rule 8 (instruccion -> asignacion .)
    CORA            reduce using rule 8 (instruccion -> asignacion .)
    LOG10           reduce using rule 8 (instruccion -> asignacion .)
    LOG             reduce using rule 8 (instruccion -> asignacion .)
    SENO            reduce using rule 8 (instruccion -> asignacion .)
    COS             reduce using rule 8 (instruccion -> asignacion .)
    TAN             reduce using rule 8 (instruccion -> asignacion .)
    SQRT            reduce using rule 8 (instruccion -> asignacion .)
    LOWERCASE       reduce using rule 8 (instruccion -> asignacion .)
    UPPERCASE       reduce using rule 8 (instruccion -> asignacion .)
    TRUNC           reduce using rule 8 (instruccion -> asignacion .)
    FLOAT           reduce using rule 8 (instruccion -> asignacion .)
    FSTRING         reduce using rule 8 (instruccion -> asignacion .)
    TYPEOF          reduce using rule 8 (instruccion -> asignacion .)
    PARSE           reduce using rule 8 (instruccion -> asignacion .)
    LENGTH          reduce using rule 8 (instruccion -> asignacion .)
    $end            reduce using rule 8 (instruccion -> asignacion .)
    END             reduce using rule 8 (instruccion -> asignacion .)
    ELSE            reduce using rule 8 (instruccion -> asignacion .)
    ELSEIF          reduce using rule 8 (instruccion -> asignacion .)


state 7

    (9) instruccion -> declaracion .

    PYC             reduce using rule 9 (instruccion -> declaracion .)
    PRINT           reduce using rule 9 (instruccion -> declaracion .)
    PRINTLN         reduce using rule 9 (instruccion -> declaracion .)
    ID              reduce using rule 9 (instruccion -> declaracion .)
    GLOBAL          reduce using rule 9 (instruccion -> declaracion .)
    LOCAL           reduce using rule 9 (instruccion -> declaracion .)
    IF              reduce using rule 9 (instruccion -> declaracion .)
    WHILE           reduce using rule 9 (instruccion -> declaracion .)
    FOR             reduce using rule 9 (instruccion -> declaracion .)
    BREAK           reduce using rule 9 (instruccion -> declaracion .)
    CONTINUE        reduce using rule 9 (instruccion -> declaracion .)
    FUNCTION        reduce using rule 9 (instruccion -> declaracion .)
    RETURN          reduce using rule 9 (instruccion -> declaracion .)
    PUSH            reduce using rule 9 (instruccion -> declaracion .)
    POP             reduce using rule 9 (instruccion -> declaracion .)
    MENOS           reduce using rule 9 (instruccion -> declaracion .)
    NOT             reduce using rule 9 (instruccion -> declaracion .)
    PARA            reduce using rule 9 (instruccion -> declaracion .)
    ENTERO          reduce using rule 9 (instruccion -> declaracion .)
    DECIMAL         reduce using rule 9 (instruccion -> declaracion .)
    CADENA          reduce using rule 9 (instruccion -> declaracion .)
    TRUE            reduce using rule 9 (instruccion -> declaracion .)
    FALSE           reduce using rule 9 (instruccion -> declaracion .)
    CORA            reduce using rule 9 (instruccion -> declaracion .)
    LOG10           reduce using rule 9 (instruccion -> declaracion .)
    LOG             reduce using rule 9 (instruccion -> declaracion .)
    SENO            reduce using rule 9 (instruccion -> declaracion .)
    COS             reduce using rule 9 (instruccion -> declaracion .)
    TAN             reduce using rule 9 (instruccion -> declaracion .)
    SQRT            reduce using rule 9 (instruccion -> declaracion .)
    LOWERCASE       reduce using rule 9 (instruccion -> declaracion .)
    UPPERCASE       reduce using rule 9 (instruccion -> declaracion .)
    TRUNC           reduce using rule 9 (instruccion -> declaracion .)
    FLOAT           reduce using rule 9 (instruccion -> declaracion .)
    FSTRING         reduce using rule 9 (instruccion -> declaracion .)
    TYPEOF          reduce using rule 9 (instruccion -> declaracion .)
    PARSE           reduce using rule 9 (instruccion -> declaracion .)
    LENGTH          reduce using rule 9 (instruccion -> declaracion .)
    $end            reduce using rule 9 (instruccion -> declaracion .)
    END             reduce using rule 9 (instruccion -> declaracion .)
    ELSE            reduce using rule 9 (instruccion -> declaracion .)
    ELSEIF          reduce using rule 9 (instruccion -> declaracion .)


state 8

    (10) instruccion -> sent_if .

    PYC             reduce using rule 10 (instruccion -> sent_if .)
    PRINT           reduce using rule 10 (instruccion -> sent_if .)
    PRINTLN         reduce using rule 10 (instruccion -> sent_if .)
    ID              reduce using rule 10 (instruccion -> sent_if .)
    GLOBAL          reduce using rule 10 (instruccion -> sent_if .)
    LOCAL           reduce using rule 10 (instruccion -> sent_if .)
    IF              reduce using rule 10 (instruccion -> sent_if .)
    WHILE           reduce using rule 10 (instruccion -> sent_if .)
    FOR             reduce using rule 10 (instruccion -> sent_if .)
    BREAK           reduce using rule 10 (instruccion -> sent_if .)
    CONTINUE        reduce using rule 10 (instruccion -> sent_if .)
    FUNCTION        reduce using rule 10 (instruccion -> sent_if .)
    RETURN          reduce using rule 10 (instruccion -> sent_if .)
    PUSH            reduce using rule 10 (instruccion -> sent_if .)
    POP             reduce using rule 10 (instruccion -> sent_if .)
    MENOS           reduce using rule 10 (instruccion -> sent_if .)
    NOT             reduce using rule 10 (instruccion -> sent_if .)
    PARA            reduce using rule 10 (instruccion -> sent_if .)
    ENTERO          reduce using rule 10 (instruccion -> sent_if .)
    DECIMAL         reduce using rule 10 (instruccion -> sent_if .)
    CADENA          reduce using rule 10 (instruccion -> sent_if .)
    TRUE            reduce using rule 10 (instruccion -> sent_if .)
    FALSE           reduce using rule 10 (instruccion -> sent_if .)
    CORA            reduce using rule 10 (instruccion -> sent_if .)
    LOG10           reduce using rule 10 (instruccion -> sent_if .)
    LOG             reduce using rule 10 (instruccion -> sent_if .)
    SENO            reduce using rule 10 (instruccion -> sent_if .)
    COS             reduce using rule 10 (instruccion -> sent_if .)
    TAN             reduce using rule 10 (instruccion -> sent_if .)
    SQRT            reduce using rule 10 (instruccion -> sent_if .)
    LOWERCASE       reduce using rule 10 (instruccion -> sent_if .)
    UPPERCASE       reduce using rule 10 (instruccion -> sent_if .)
    TRUNC           reduce using rule 10 (instruccion -> sent_if .)
    FLOAT           reduce using rule 10 (instruccion -> sent_if .)
    FSTRING         reduce using rule 10 (instruccion -> sent_if .)
    TYPEOF          reduce using rule 10 (instruccion -> sent_if .)
    PARSE           reduce using rule 10 (instruccion -> sent_if .)
    LENGTH          reduce using rule 10 (instruccion -> sent_if .)
    $end            reduce using rule 10 (instruccion -> sent_if .)
    END             reduce using rule 10 (instruccion -> sent_if .)
    ELSE            reduce using rule 10 (instruccion -> sent_if .)
    ELSEIF          reduce using rule 10 (instruccion -> sent_if .)


state 9

    (11) instruccion -> sent_while .

    PYC             reduce using rule 11 (instruccion -> sent_while .)
    PRINT           reduce using rule 11 (instruccion -> sent_while .)
    PRINTLN         reduce using rule 11 (instruccion -> sent_while .)
    ID              reduce using rule 11 (instruccion -> sent_while .)
    GLOBAL          reduce using rule 11 (instruccion -> sent_while .)
    LOCAL           reduce using rule 11 (instruccion -> sent_while .)
    IF              reduce using rule 11 (instruccion -> sent_while .)
    WHILE           reduce using rule 11 (instruccion -> sent_while .)
    FOR             reduce using rule 11 (instruccion -> sent_while .)
    BREAK           reduce using rule 11 (instruccion -> sent_while .)
    CONTINUE        reduce using rule 11 (instruccion -> sent_while .)
    FUNCTION        reduce using rule 11 (instruccion -> sent_while .)
    RETURN          reduce using rule 11 (instruccion -> sent_while .)
    PUSH            reduce using rule 11 (instruccion -> sent_while .)
    POP             reduce using rule 11 (instruccion -> sent_while .)
    MENOS           reduce using rule 11 (instruccion -> sent_while .)
    NOT             reduce using rule 11 (instruccion -> sent_while .)
    PARA            reduce using rule 11 (instruccion -> sent_while .)
    ENTERO          reduce using rule 11 (instruccion -> sent_while .)
    DECIMAL         reduce using rule 11 (instruccion -> sent_while .)
    CADENA          reduce using rule 11 (instruccion -> sent_while .)
    TRUE            reduce using rule 11 (instruccion -> sent_while .)
    FALSE           reduce using rule 11 (instruccion -> sent_while .)
    CORA            reduce using rule 11 (instruccion -> sent_while .)
    LOG10           reduce using rule 11 (instruccion -> sent_while .)
    LOG             reduce using rule 11 (instruccion -> sent_while .)
    SENO            reduce using rule 11 (instruccion -> sent_while .)
    COS             reduce using rule 11 (instruccion -> sent_while .)
    TAN             reduce using rule 11 (instruccion -> sent_while .)
    SQRT            reduce using rule 11 (instruccion -> sent_while .)
    LOWERCASE       reduce using rule 11 (instruccion -> sent_while .)
    UPPERCASE       reduce using rule 11 (instruccion -> sent_while .)
    TRUNC           reduce using rule 11 (instruccion -> sent_while .)
    FLOAT           reduce using rule 11 (instruccion -> sent_while .)
    FSTRING         reduce using rule 11 (instruccion -> sent_while .)
    TYPEOF          reduce using rule 11 (instruccion -> sent_while .)
    PARSE           reduce using rule 11 (instruccion -> sent_while .)
    LENGTH          reduce using rule 11 (instruccion -> sent_while .)
    $end            reduce using rule 11 (instruccion -> sent_while .)
    END             reduce using rule 11 (instruccion -> sent_while .)
    ELSE            reduce using rule 11 (instruccion -> sent_while .)
    ELSEIF          reduce using rule 11 (instruccion -> sent_while .)


state 10

    (12) instruccion -> sent_for .

    PYC             reduce using rule 12 (instruccion -> sent_for .)
    PRINT           reduce using rule 12 (instruccion -> sent_for .)
    PRINTLN         reduce using rule 12 (instruccion -> sent_for .)
    ID              reduce using rule 12 (instruccion -> sent_for .)
    GLOBAL          reduce using rule 12 (instruccion -> sent_for .)
    LOCAL           reduce using rule 12 (instruccion -> sent_for .)
    IF              reduce using rule 12 (instruccion -> sent_for .)
    WHILE           reduce using rule 12 (instruccion -> sent_for .)
    FOR             reduce using rule 12 (instruccion -> sent_for .)
    BREAK           reduce using rule 12 (instruccion -> sent_for .)
    CONTINUE        reduce using rule 12 (instruccion -> sent_for .)
    FUNCTION        reduce using rule 12 (instruccion -> sent_for .)
    RETURN          reduce using rule 12 (instruccion -> sent_for .)
    PUSH            reduce using rule 12 (instruccion -> sent_for .)
    POP             reduce using rule 12 (instruccion -> sent_for .)
    MENOS           reduce using rule 12 (instruccion -> sent_for .)
    NOT             reduce using rule 12 (instruccion -> sent_for .)
    PARA            reduce using rule 12 (instruccion -> sent_for .)
    ENTERO          reduce using rule 12 (instruccion -> sent_for .)
    DECIMAL         reduce using rule 12 (instruccion -> sent_for .)
    CADENA          reduce using rule 12 (instruccion -> sent_for .)
    TRUE            reduce using rule 12 (instruccion -> sent_for .)
    FALSE           reduce using rule 12 (instruccion -> sent_for .)
    CORA            reduce using rule 12 (instruccion -> sent_for .)
    LOG10           reduce using rule 12 (instruccion -> sent_for .)
    LOG             reduce using rule 12 (instruccion -> sent_for .)
    SENO            reduce using rule 12 (instruccion -> sent_for .)
    COS             reduce using rule 12 (instruccion -> sent_for .)
    TAN             reduce using rule 12 (instruccion -> sent_for .)
    SQRT            reduce using rule 12 (instruccion -> sent_for .)
    LOWERCASE       reduce using rule 12 (instruccion -> sent_for .)
    UPPERCASE       reduce using rule 12 (instruccion -> sent_for .)
    TRUNC           reduce using rule 12 (instruccion -> sent_for .)
    FLOAT           reduce using rule 12 (instruccion -> sent_for .)
    FSTRING         reduce using rule 12 (instruccion -> sent_for .)
    TYPEOF          reduce using rule 12 (instruccion -> sent_for .)
    PARSE           reduce using rule 12 (instruccion -> sent_for .)
    LENGTH          reduce using rule 12 (instruccion -> sent_for .)
    $end            reduce using rule 12 (instruccion -> sent_for .)
    END             reduce using rule 12 (instruccion -> sent_for .)
    ELSE            reduce using rule 12 (instruccion -> sent_for .)
    ELSEIF          reduce using rule 12 (instruccion -> sent_for .)


state 11

    (13) instruccion -> sent_break .

    PYC             reduce using rule 13 (instruccion -> sent_break .)
    PRINT           reduce using rule 13 (instruccion -> sent_break .)
    PRINTLN         reduce using rule 13 (instruccion -> sent_break .)
    ID              reduce using rule 13 (instruccion -> sent_break .)
    GLOBAL          reduce using rule 13 (instruccion -> sent_break .)
    LOCAL           reduce using rule 13 (instruccion -> sent_break .)
    IF              reduce using rule 13 (instruccion -> sent_break .)
    WHILE           reduce using rule 13 (instruccion -> sent_break .)
    FOR             reduce using rule 13 (instruccion -> sent_break .)
    BREAK           reduce using rule 13 (instruccion -> sent_break .)
    CONTINUE        reduce using rule 13 (instruccion -> sent_break .)
    FUNCTION        reduce using rule 13 (instruccion -> sent_break .)
    RETURN          reduce using rule 13 (instruccion -> sent_break .)
    PUSH            reduce using rule 13 (instruccion -> sent_break .)
    POP             reduce using rule 13 (instruccion -> sent_break .)
    MENOS           reduce using rule 13 (instruccion -> sent_break .)
    NOT             reduce using rule 13 (instruccion -> sent_break .)
    PARA            reduce using rule 13 (instruccion -> sent_break .)
    ENTERO          reduce using rule 13 (instruccion -> sent_break .)
    DECIMAL         reduce using rule 13 (instruccion -> sent_break .)
    CADENA          reduce using rule 13 (instruccion -> sent_break .)
    TRUE            reduce using rule 13 (instruccion -> sent_break .)
    FALSE           reduce using rule 13 (instruccion -> sent_break .)
    CORA            reduce using rule 13 (instruccion -> sent_break .)
    LOG10           reduce using rule 13 (instruccion -> sent_break .)
    LOG             reduce using rule 13 (instruccion -> sent_break .)
    SENO            reduce using rule 13 (instruccion -> sent_break .)
    COS             reduce using rule 13 (instruccion -> sent_break .)
    TAN             reduce using rule 13 (instruccion -> sent_break .)
    SQRT            reduce using rule 13 (instruccion -> sent_break .)
    LOWERCASE       reduce using rule 13 (instruccion -> sent_break .)
    UPPERCASE       reduce using rule 13 (instruccion -> sent_break .)
    TRUNC           reduce using rule 13 (instruccion -> sent_break .)
    FLOAT           reduce using rule 13 (instruccion -> sent_break .)
    FSTRING         reduce using rule 13 (instruccion -> sent_break .)
    TYPEOF          reduce using rule 13 (instruccion -> sent_break .)
    PARSE           reduce using rule 13 (instruccion -> sent_break .)
    LENGTH          reduce using rule 13 (instruccion -> sent_break .)
    $end            reduce using rule 13 (instruccion -> sent_break .)
    END             reduce using rule 13 (instruccion -> sent_break .)
    ELSE            reduce using rule 13 (instruccion -> sent_break .)
    ELSEIF          reduce using rule 13 (instruccion -> sent_break .)


state 12

    (14) instruccion -> sent_continue .

    PYC             reduce using rule 14 (instruccion -> sent_continue .)
    PRINT           reduce using rule 14 (instruccion -> sent_continue .)
    PRINTLN         reduce using rule 14 (instruccion -> sent_continue .)
    ID              reduce using rule 14 (instruccion -> sent_continue .)
    GLOBAL          reduce using rule 14 (instruccion -> sent_continue .)
    LOCAL           reduce using rule 14 (instruccion -> sent_continue .)
    IF              reduce using rule 14 (instruccion -> sent_continue .)
    WHILE           reduce using rule 14 (instruccion -> sent_continue .)
    FOR             reduce using rule 14 (instruccion -> sent_continue .)
    BREAK           reduce using rule 14 (instruccion -> sent_continue .)
    CONTINUE        reduce using rule 14 (instruccion -> sent_continue .)
    FUNCTION        reduce using rule 14 (instruccion -> sent_continue .)
    RETURN          reduce using rule 14 (instruccion -> sent_continue .)
    PUSH            reduce using rule 14 (instruccion -> sent_continue .)
    POP             reduce using rule 14 (instruccion -> sent_continue .)
    MENOS           reduce using rule 14 (instruccion -> sent_continue .)
    NOT             reduce using rule 14 (instruccion -> sent_continue .)
    PARA            reduce using rule 14 (instruccion -> sent_continue .)
    ENTERO          reduce using rule 14 (instruccion -> sent_continue .)
    DECIMAL         reduce using rule 14 (instruccion -> sent_continue .)
    CADENA          reduce using rule 14 (instruccion -> sent_continue .)
    TRUE            reduce using rule 14 (instruccion -> sent_continue .)
    FALSE           reduce using rule 14 (instruccion -> sent_continue .)
    CORA            reduce using rule 14 (instruccion -> sent_continue .)
    LOG10           reduce using rule 14 (instruccion -> sent_continue .)
    LOG             reduce using rule 14 (instruccion -> sent_continue .)
    SENO            reduce using rule 14 (instruccion -> sent_continue .)
    COS             reduce using rule 14 (instruccion -> sent_continue .)
    TAN             reduce using rule 14 (instruccion -> sent_continue .)
    SQRT            reduce using rule 14 (instruccion -> sent_continue .)
    LOWERCASE       reduce using rule 14 (instruccion -> sent_continue .)
    UPPERCASE       reduce using rule 14 (instruccion -> sent_continue .)
    TRUNC           reduce using rule 14 (instruccion -> sent_continue .)
    FLOAT           reduce using rule 14 (instruccion -> sent_continue .)
    FSTRING         reduce using rule 14 (instruccion -> sent_continue .)
    TYPEOF          reduce using rule 14 (instruccion -> sent_continue .)
    PARSE           reduce using rule 14 (instruccion -> sent_continue .)
    LENGTH          reduce using rule 14 (instruccion -> sent_continue .)
    $end            reduce using rule 14 (instruccion -> sent_continue .)
    END             reduce using rule 14 (instruccion -> sent_continue .)
    ELSE            reduce using rule 14 (instruccion -> sent_continue .)
    ELSEIF          reduce using rule 14 (instruccion -> sent_continue .)


state 13

    (15) instruccion -> asignacion_vect .

    PYC             reduce using rule 15 (instruccion -> asignacion_vect .)
    PRINT           reduce using rule 15 (instruccion -> asignacion_vect .)
    PRINTLN         reduce using rule 15 (instruccion -> asignacion_vect .)
    ID              reduce using rule 15 (instruccion -> asignacion_vect .)
    GLOBAL          reduce using rule 15 (instruccion -> asignacion_vect .)
    LOCAL           reduce using rule 15 (instruccion -> asignacion_vect .)
    IF              reduce using rule 15 (instruccion -> asignacion_vect .)
    WHILE           reduce using rule 15 (instruccion -> asignacion_vect .)
    FOR             reduce using rule 15 (instruccion -> asignacion_vect .)
    BREAK           reduce using rule 15 (instruccion -> asignacion_vect .)
    CONTINUE        reduce using rule 15 (instruccion -> asignacion_vect .)
    FUNCTION        reduce using rule 15 (instruccion -> asignacion_vect .)
    RETURN          reduce using rule 15 (instruccion -> asignacion_vect .)
    PUSH            reduce using rule 15 (instruccion -> asignacion_vect .)
    POP             reduce using rule 15 (instruccion -> asignacion_vect .)
    MENOS           reduce using rule 15 (instruccion -> asignacion_vect .)
    NOT             reduce using rule 15 (instruccion -> asignacion_vect .)
    PARA            reduce using rule 15 (instruccion -> asignacion_vect .)
    ENTERO          reduce using rule 15 (instruccion -> asignacion_vect .)
    DECIMAL         reduce using rule 15 (instruccion -> asignacion_vect .)
    CADENA          reduce using rule 15 (instruccion -> asignacion_vect .)
    TRUE            reduce using rule 15 (instruccion -> asignacion_vect .)
    FALSE           reduce using rule 15 (instruccion -> asignacion_vect .)
    CORA            reduce using rule 15 (instruccion -> asignacion_vect .)
    LOG10           reduce using rule 15 (instruccion -> asignacion_vect .)
    LOG             reduce using rule 15 (instruccion -> asignacion_vect .)
    SENO            reduce using rule 15 (instruccion -> asignacion_vect .)
    COS             reduce using rule 15 (instruccion -> asignacion_vect .)
    TAN             reduce using rule 15 (instruccion -> asignacion_vect .)
    SQRT            reduce using rule 15 (instruccion -> asignacion_vect .)
    LOWERCASE       reduce using rule 15 (instruccion -> asignacion_vect .)
    UPPERCASE       reduce using rule 15 (instruccion -> asignacion_vect .)
    TRUNC           reduce using rule 15 (instruccion -> asignacion_vect .)
    FLOAT           reduce using rule 15 (instruccion -> asignacion_vect .)
    FSTRING         reduce using rule 15 (instruccion -> asignacion_vect .)
    TYPEOF          reduce using rule 15 (instruccion -> asignacion_vect .)
    PARSE           reduce using rule 15 (instruccion -> asignacion_vect .)
    LENGTH          reduce using rule 15 (instruccion -> asignacion_vect .)
    $end            reduce using rule 15 (instruccion -> asignacion_vect .)
    END             reduce using rule 15 (instruccion -> asignacion_vect .)
    ELSE            reduce using rule 15 (instruccion -> asignacion_vect .)
    ELSEIF          reduce using rule 15 (instruccion -> asignacion_vect .)


state 14

    (16) instruccion -> sent_function .

    PYC             reduce using rule 16 (instruccion -> sent_function .)
    PRINT           reduce using rule 16 (instruccion -> sent_function .)
    PRINTLN         reduce using rule 16 (instruccion -> sent_function .)
    ID              reduce using rule 16 (instruccion -> sent_function .)
    GLOBAL          reduce using rule 16 (instruccion -> sent_function .)
    LOCAL           reduce using rule 16 (instruccion -> sent_function .)
    IF              reduce using rule 16 (instruccion -> sent_function .)
    WHILE           reduce using rule 16 (instruccion -> sent_function .)
    FOR             reduce using rule 16 (instruccion -> sent_function .)
    BREAK           reduce using rule 16 (instruccion -> sent_function .)
    CONTINUE        reduce using rule 16 (instruccion -> sent_function .)
    FUNCTION        reduce using rule 16 (instruccion -> sent_function .)
    RETURN          reduce using rule 16 (instruccion -> sent_function .)
    PUSH            reduce using rule 16 (instruccion -> sent_function .)
    POP             reduce using rule 16 (instruccion -> sent_function .)
    MENOS           reduce using rule 16 (instruccion -> sent_function .)
    NOT             reduce using rule 16 (instruccion -> sent_function .)
    PARA            reduce using rule 16 (instruccion -> sent_function .)
    ENTERO          reduce using rule 16 (instruccion -> sent_function .)
    DECIMAL         reduce using rule 16 (instruccion -> sent_function .)
    CADENA          reduce using rule 16 (instruccion -> sent_function .)
    TRUE            reduce using rule 16 (instruccion -> sent_function .)
    FALSE           reduce using rule 16 (instruccion -> sent_function .)
    CORA            reduce using rule 16 (instruccion -> sent_function .)
    LOG10           reduce using rule 16 (instruccion -> sent_function .)
    LOG             reduce using rule 16 (instruccion -> sent_function .)
    SENO            reduce using rule 16 (instruccion -> sent_function .)
    COS             reduce using rule 16 (instruccion -> sent_function .)
    TAN             reduce using rule 16 (instruccion -> sent_function .)
    SQRT            reduce using rule 16 (instruccion -> sent_function .)
    LOWERCASE       reduce using rule 16 (instruccion -> sent_function .)
    UPPERCASE       reduce using rule 16 (instruccion -> sent_function .)
    TRUNC           reduce using rule 16 (instruccion -> sent_function .)
    FLOAT           reduce using rule 16 (instruccion -> sent_function .)
    FSTRING         reduce using rule 16 (instruccion -> sent_function .)
    TYPEOF          reduce using rule 16 (instruccion -> sent_function .)
    PARSE           reduce using rule 16 (instruccion -> sent_function .)
    LENGTH          reduce using rule 16 (instruccion -> sent_function .)
    $end            reduce using rule 16 (instruccion -> sent_function .)
    END             reduce using rule 16 (instruccion -> sent_function .)
    ELSE            reduce using rule 16 (instruccion -> sent_function .)
    ELSEIF          reduce using rule 16 (instruccion -> sent_function .)


state 15

    (17) instruccion -> sent_llamada .
    (99) expresion -> sent_llamada .

  ! reduce/reduce conflict for MENOS resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for PYC resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for PRINT resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for ID resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for GLOBAL resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for LOCAL resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for IF resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for WHILE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for FOR resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for BREAK resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for RETURN resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for PUSH resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for POP resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for NOT resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for PARA resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for ENTERO resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for CADENA resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for TRUE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for FALSE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for CORA resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for LOG10 resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for LOG resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for SENO resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for COS resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for TAN resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for SQRT resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for LOWERCASE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for UPPERCASE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for TRUNC resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for FLOAT resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for FSTRING resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for PARSE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for LENGTH resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for $end resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for END resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for ELSE resolved using rule 17 (instruccion -> sent_llamada .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 17 (instruccion -> sent_llamada .)
    PYC             reduce using rule 17 (instruccion -> sent_llamada .)
    PRINT           reduce using rule 17 (instruccion -> sent_llamada .)
    PRINTLN         reduce using rule 17 (instruccion -> sent_llamada .)
    ID              reduce using rule 17 (instruccion -> sent_llamada .)
    GLOBAL          reduce using rule 17 (instruccion -> sent_llamada .)
    LOCAL           reduce using rule 17 (instruccion -> sent_llamada .)
    IF              reduce using rule 17 (instruccion -> sent_llamada .)
    WHILE           reduce using rule 17 (instruccion -> sent_llamada .)
    FOR             reduce using rule 17 (instruccion -> sent_llamada .)
    BREAK           reduce using rule 17 (instruccion -> sent_llamada .)
    CONTINUE        reduce using rule 17 (instruccion -> sent_llamada .)
    FUNCTION        reduce using rule 17 (instruccion -> sent_llamada .)
    RETURN          reduce using rule 17 (instruccion -> sent_llamada .)
    PUSH            reduce using rule 17 (instruccion -> sent_llamada .)
    POP             reduce using rule 17 (instruccion -> sent_llamada .)
    MENOS           reduce using rule 17 (instruccion -> sent_llamada .)
    NOT             reduce using rule 17 (instruccion -> sent_llamada .)
    PARA            reduce using rule 17 (instruccion -> sent_llamada .)
    ENTERO          reduce using rule 17 (instruccion -> sent_llamada .)
    DECIMAL         reduce using rule 17 (instruccion -> sent_llamada .)
    CADENA          reduce using rule 17 (instruccion -> sent_llamada .)
    TRUE            reduce using rule 17 (instruccion -> sent_llamada .)
    FALSE           reduce using rule 17 (instruccion -> sent_llamada .)
    CORA            reduce using rule 17 (instruccion -> sent_llamada .)
    LOG10           reduce using rule 17 (instruccion -> sent_llamada .)
    LOG             reduce using rule 17 (instruccion -> sent_llamada .)
    SENO            reduce using rule 17 (instruccion -> sent_llamada .)
    COS             reduce using rule 17 (instruccion -> sent_llamada .)
    TAN             reduce using rule 17 (instruccion -> sent_llamada .)
    SQRT            reduce using rule 17 (instruccion -> sent_llamada .)
    LOWERCASE       reduce using rule 17 (instruccion -> sent_llamada .)
    UPPERCASE       reduce using rule 17 (instruccion -> sent_llamada .)
    TRUNC           reduce using rule 17 (instruccion -> sent_llamada .)
    FLOAT           reduce using rule 17 (instruccion -> sent_llamada .)
    FSTRING         reduce using rule 17 (instruccion -> sent_llamada .)
    TYPEOF          reduce using rule 17 (instruccion -> sent_llamada .)
    PARSE           reduce using rule 17 (instruccion -> sent_llamada .)
    LENGTH          reduce using rule 17 (instruccion -> sent_llamada .)
    $end            reduce using rule 17 (instruccion -> sent_llamada .)
    END             reduce using rule 17 (instruccion -> sent_llamada .)
    ELSE            reduce using rule 17 (instruccion -> sent_llamada .)
    ELSEIF          reduce using rule 17 (instruccion -> sent_llamada .)
    MAS             reduce using rule 99 (expresion -> sent_llamada .)
    POR             reduce using rule 99 (expresion -> sent_llamada .)
    DIVIDIDO        reduce using rule 99 (expresion -> sent_llamada .)
    MOD             reduce using rule 99 (expresion -> sent_llamada .)
    POT             reduce using rule 99 (expresion -> sent_llamada .)
    MENORIGUAL      reduce using rule 99 (expresion -> sent_llamada .)
    MAYORIGUAL      reduce using rule 99 (expresion -> sent_llamada .)
    MENORQUE        reduce using rule 99 (expresion -> sent_llamada .)
    MAYORQUE        reduce using rule 99 (expresion -> sent_llamada .)
    DIFF            reduce using rule 99 (expresion -> sent_llamada .)
    IGUALIGUAL      reduce using rule 99 (expresion -> sent_llamada .)
    AND             reduce using rule 99 (expresion -> sent_llamada .)
    OR              reduce using rule 99 (expresion -> sent_llamada .)
    DOSPTS          reduce using rule 99 (expresion -> sent_llamada .)

  ! MENOS           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! PYC             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! PRINT           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! PRINTLN         [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! ID              [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! GLOBAL          [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! LOCAL           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! IF              [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! WHILE           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! FOR             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! BREAK           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! CONTINUE        [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! FUNCTION        [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! RETURN          [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! PUSH            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! POP             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! NOT             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! PARA            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! ENTERO          [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! DECIMAL         [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! CADENA          [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! TRUE            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! FALSE           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! CORA            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! LOG10           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! LOG             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! SENO            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! COS             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! TAN             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! SQRT            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! LOWERCASE       [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! UPPERCASE       [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! TRUNC           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! FLOAT           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! FSTRING         [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! TYPEOF          [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! PARSE           [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! LENGTH          [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! $end            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! END             [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! ELSE            [ reduce using rule 99 (expresion -> sent_llamada .) ]
  ! ELSEIF          [ reduce using rule 99 (expresion -> sent_llamada .) ]


state 16

    (18) instruccion -> sent_return .

    PYC             reduce using rule 18 (instruccion -> sent_return .)
    PRINT           reduce using rule 18 (instruccion -> sent_return .)
    PRINTLN         reduce using rule 18 (instruccion -> sent_return .)
    ID              reduce using rule 18 (instruccion -> sent_return .)
    GLOBAL          reduce using rule 18 (instruccion -> sent_return .)
    LOCAL           reduce using rule 18 (instruccion -> sent_return .)
    IF              reduce using rule 18 (instruccion -> sent_return .)
    WHILE           reduce using rule 18 (instruccion -> sent_return .)
    FOR             reduce using rule 18 (instruccion -> sent_return .)
    BREAK           reduce using rule 18 (instruccion -> sent_return .)
    CONTINUE        reduce using rule 18 (instruccion -> sent_return .)
    FUNCTION        reduce using rule 18 (instruccion -> sent_return .)
    RETURN          reduce using rule 18 (instruccion -> sent_return .)
    PUSH            reduce using rule 18 (instruccion -> sent_return .)
    POP             reduce using rule 18 (instruccion -> sent_return .)
    MENOS           reduce using rule 18 (instruccion -> sent_return .)
    NOT             reduce using rule 18 (instruccion -> sent_return .)
    PARA            reduce using rule 18 (instruccion -> sent_return .)
    ENTERO          reduce using rule 18 (instruccion -> sent_return .)
    DECIMAL         reduce using rule 18 (instruccion -> sent_return .)
    CADENA          reduce using rule 18 (instruccion -> sent_return .)
    TRUE            reduce using rule 18 (instruccion -> sent_return .)
    FALSE           reduce using rule 18 (instruccion -> sent_return .)
    CORA            reduce using rule 18 (instruccion -> sent_return .)
    LOG10           reduce using rule 18 (instruccion -> sent_return .)
    LOG             reduce using rule 18 (instruccion -> sent_return .)
    SENO            reduce using rule 18 (instruccion -> sent_return .)
    COS             reduce using rule 18 (instruccion -> sent_return .)
    TAN             reduce using rule 18 (instruccion -> sent_return .)
    SQRT            reduce using rule 18 (instruccion -> sent_return .)
    LOWERCASE       reduce using rule 18 (instruccion -> sent_return .)
    UPPERCASE       reduce using rule 18 (instruccion -> sent_return .)
    TRUNC           reduce using rule 18 (instruccion -> sent_return .)
    FLOAT           reduce using rule 18 (instruccion -> sent_return .)
    FSTRING         reduce using rule 18 (instruccion -> sent_return .)
    TYPEOF          reduce using rule 18 (instruccion -> sent_return .)
    PARSE           reduce using rule 18 (instruccion -> sent_return .)
    LENGTH          reduce using rule 18 (instruccion -> sent_return .)
    $end            reduce using rule 18 (instruccion -> sent_return .)
    END             reduce using rule 18 (instruccion -> sent_return .)
    ELSE            reduce using rule 18 (instruccion -> sent_return .)
    ELSEIF          reduce using rule 18 (instruccion -> sent_return .)


state 17

    (19) instruccion -> sent_push .

    PYC             reduce using rule 19 (instruccion -> sent_push .)
    PRINT           reduce using rule 19 (instruccion -> sent_push .)
    PRINTLN         reduce using rule 19 (instruccion -> sent_push .)
    ID              reduce using rule 19 (instruccion -> sent_push .)
    GLOBAL          reduce using rule 19 (instruccion -> sent_push .)
    LOCAL           reduce using rule 19 (instruccion -> sent_push .)
    IF              reduce using rule 19 (instruccion -> sent_push .)
    WHILE           reduce using rule 19 (instruccion -> sent_push .)
    FOR             reduce using rule 19 (instruccion -> sent_push .)
    BREAK           reduce using rule 19 (instruccion -> sent_push .)
    CONTINUE        reduce using rule 19 (instruccion -> sent_push .)
    FUNCTION        reduce using rule 19 (instruccion -> sent_push .)
    RETURN          reduce using rule 19 (instruccion -> sent_push .)
    PUSH            reduce using rule 19 (instruccion -> sent_push .)
    POP             reduce using rule 19 (instruccion -> sent_push .)
    MENOS           reduce using rule 19 (instruccion -> sent_push .)
    NOT             reduce using rule 19 (instruccion -> sent_push .)
    PARA            reduce using rule 19 (instruccion -> sent_push .)
    ENTERO          reduce using rule 19 (instruccion -> sent_push .)
    DECIMAL         reduce using rule 19 (instruccion -> sent_push .)
    CADENA          reduce using rule 19 (instruccion -> sent_push .)
    TRUE            reduce using rule 19 (instruccion -> sent_push .)
    FALSE           reduce using rule 19 (instruccion -> sent_push .)
    CORA            reduce using rule 19 (instruccion -> sent_push .)
    LOG10           reduce using rule 19 (instruccion -> sent_push .)
    LOG             reduce using rule 19 (instruccion -> sent_push .)
    SENO            reduce using rule 19 (instruccion -> sent_push .)
    COS             reduce using rule 19 (instruccion -> sent_push .)
    TAN             reduce using rule 19 (instruccion -> sent_push .)
    SQRT            reduce using rule 19 (instruccion -> sent_push .)
    LOWERCASE       reduce using rule 19 (instruccion -> sent_push .)
    UPPERCASE       reduce using rule 19 (instruccion -> sent_push .)
    TRUNC           reduce using rule 19 (instruccion -> sent_push .)
    FLOAT           reduce using rule 19 (instruccion -> sent_push .)
    FSTRING         reduce using rule 19 (instruccion -> sent_push .)
    TYPEOF          reduce using rule 19 (instruccion -> sent_push .)
    PARSE           reduce using rule 19 (instruccion -> sent_push .)
    LENGTH          reduce using rule 19 (instruccion -> sent_push .)
    $end            reduce using rule 19 (instruccion -> sent_push .)
    END             reduce using rule 19 (instruccion -> sent_push .)
    ELSE            reduce using rule 19 (instruccion -> sent_push .)
    ELSEIF          reduce using rule 19 (instruccion -> sent_push .)


state 18

    (20) instruccion -> sent_pop .

    PYC             reduce using rule 20 (instruccion -> sent_pop .)
    PRINT           reduce using rule 20 (instruccion -> sent_pop .)
    PRINTLN         reduce using rule 20 (instruccion -> sent_pop .)
    ID              reduce using rule 20 (instruccion -> sent_pop .)
    GLOBAL          reduce using rule 20 (instruccion -> sent_pop .)
    LOCAL           reduce using rule 20 (instruccion -> sent_pop .)
    IF              reduce using rule 20 (instruccion -> sent_pop .)
    WHILE           reduce using rule 20 (instruccion -> sent_pop .)
    FOR             reduce using rule 20 (instruccion -> sent_pop .)
    BREAK           reduce using rule 20 (instruccion -> sent_pop .)
    CONTINUE        reduce using rule 20 (instruccion -> sent_pop .)
    FUNCTION        reduce using rule 20 (instruccion -> sent_pop .)
    RETURN          reduce using rule 20 (instruccion -> sent_pop .)
    PUSH            reduce using rule 20 (instruccion -> sent_pop .)
    POP             reduce using rule 20 (instruccion -> sent_pop .)
    MENOS           reduce using rule 20 (instruccion -> sent_pop .)
    NOT             reduce using rule 20 (instruccion -> sent_pop .)
    PARA            reduce using rule 20 (instruccion -> sent_pop .)
    ENTERO          reduce using rule 20 (instruccion -> sent_pop .)
    DECIMAL         reduce using rule 20 (instruccion -> sent_pop .)
    CADENA          reduce using rule 20 (instruccion -> sent_pop .)
    TRUE            reduce using rule 20 (instruccion -> sent_pop .)
    FALSE           reduce using rule 20 (instruccion -> sent_pop .)
    CORA            reduce using rule 20 (instruccion -> sent_pop .)
    LOG10           reduce using rule 20 (instruccion -> sent_pop .)
    LOG             reduce using rule 20 (instruccion -> sent_pop .)
    SENO            reduce using rule 20 (instruccion -> sent_pop .)
    COS             reduce using rule 20 (instruccion -> sent_pop .)
    TAN             reduce using rule 20 (instruccion -> sent_pop .)
    SQRT            reduce using rule 20 (instruccion -> sent_pop .)
    LOWERCASE       reduce using rule 20 (instruccion -> sent_pop .)
    UPPERCASE       reduce using rule 20 (instruccion -> sent_pop .)
    TRUNC           reduce using rule 20 (instruccion -> sent_pop .)
    FLOAT           reduce using rule 20 (instruccion -> sent_pop .)
    FSTRING         reduce using rule 20 (instruccion -> sent_pop .)
    TYPEOF          reduce using rule 20 (instruccion -> sent_pop .)
    PARSE           reduce using rule 20 (instruccion -> sent_pop .)
    LENGTH          reduce using rule 20 (instruccion -> sent_pop .)
    $end            reduce using rule 20 (instruccion -> sent_pop .)
    END             reduce using rule 20 (instruccion -> sent_pop .)
    ELSE            reduce using rule 20 (instruccion -> sent_pop .)
    ELSEIF          reduce using rule 20 (instruccion -> sent_pop .)


state 19

    (21) instruccion -> expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PYC             reduce using rule 21 (instruccion -> expresion .)
    PRINT           reduce using rule 21 (instruccion -> expresion .)
    PRINTLN         reduce using rule 21 (instruccion -> expresion .)
    ID              reduce using rule 21 (instruccion -> expresion .)
    GLOBAL          reduce using rule 21 (instruccion -> expresion .)
    LOCAL           reduce using rule 21 (instruccion -> expresion .)
    IF              reduce using rule 21 (instruccion -> expresion .)
    WHILE           reduce using rule 21 (instruccion -> expresion .)
    FOR             reduce using rule 21 (instruccion -> expresion .)
    BREAK           reduce using rule 21 (instruccion -> expresion .)
    CONTINUE        reduce using rule 21 (instruccion -> expresion .)
    FUNCTION        reduce using rule 21 (instruccion -> expresion .)
    RETURN          reduce using rule 21 (instruccion -> expresion .)
    PUSH            reduce using rule 21 (instruccion -> expresion .)
    POP             reduce using rule 21 (instruccion -> expresion .)
    NOT             reduce using rule 21 (instruccion -> expresion .)
    PARA            reduce using rule 21 (instruccion -> expresion .)
    ENTERO          reduce using rule 21 (instruccion -> expresion .)
    DECIMAL         reduce using rule 21 (instruccion -> expresion .)
    CADENA          reduce using rule 21 (instruccion -> expresion .)
    TRUE            reduce using rule 21 (instruccion -> expresion .)
    FALSE           reduce using rule 21 (instruccion -> expresion .)
    CORA            reduce using rule 21 (instruccion -> expresion .)
    LOG10           reduce using rule 21 (instruccion -> expresion .)
    LOG             reduce using rule 21 (instruccion -> expresion .)
    SENO            reduce using rule 21 (instruccion -> expresion .)
    COS             reduce using rule 21 (instruccion -> expresion .)
    TAN             reduce using rule 21 (instruccion -> expresion .)
    SQRT            reduce using rule 21 (instruccion -> expresion .)
    LOWERCASE       reduce using rule 21 (instruccion -> expresion .)
    UPPERCASE       reduce using rule 21 (instruccion -> expresion .)
    TRUNC           reduce using rule 21 (instruccion -> expresion .)
    FLOAT           reduce using rule 21 (instruccion -> expresion .)
    FSTRING         reduce using rule 21 (instruccion -> expresion .)
    TYPEOF          reduce using rule 21 (instruccion -> expresion .)
    PARSE           reduce using rule 21 (instruccion -> expresion .)
    LENGTH          reduce using rule 21 (instruccion -> expresion .)
    $end            reduce using rule 21 (instruccion -> expresion .)
    END             reduce using rule 21 (instruccion -> expresion .)
    ELSE            reduce using rule 21 (instruccion -> expresion .)
    ELSEIF          reduce using rule 21 (instruccion -> expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73

  ! MENOS           [ reduce using rule 21 (instruccion -> expresion .) ]


state 20

    (66) print -> PRINT . PARA lista_expr PARC
    (67) println -> PRINT . PARA PARC

    PARA            shift and go to state 74


state 21

    (91) expresion -> PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 75
    sent_llamada                   shift and go to state 77

state 22

    (68) println -> PRINTLN . PARA PARC
    (69) println -> PRINTLN . PARA lista_expr PARC

    PARA            shift and go to state 79


state 23

    (54) asignacion -> ID . IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> ID . IGUAL expresion
    (36) asignacion_vect -> ID . list_vector IGUAL expresion
    (26) sent_llamada -> ID . PARA PARC
    (27) sent_llamada -> ID . PARA lista_expr PARC
    (78) expresion -> ID . list_vector
    (100) expresion -> ID .
    (79) list_vector -> . list_vector CORA expresion CORC
    (80) list_vector -> . CORA expresion CORC

  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for CORA resolved as shift
    IGUAL           shift and go to state 80
    PARA            shift and go to state 82
    MAS             reduce using rule 100 (expresion -> ID .)
    MENOS           reduce using rule 100 (expresion -> ID .)
    POR             reduce using rule 100 (expresion -> ID .)
    DIVIDIDO        reduce using rule 100 (expresion -> ID .)
    MOD             reduce using rule 100 (expresion -> ID .)
    POT             reduce using rule 100 (expresion -> ID .)
    MENORIGUAL      reduce using rule 100 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 100 (expresion -> ID .)
    MENORQUE        reduce using rule 100 (expresion -> ID .)
    MAYORQUE        reduce using rule 100 (expresion -> ID .)
    DIFF            reduce using rule 100 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 100 (expresion -> ID .)
    AND             reduce using rule 100 (expresion -> ID .)
    OR              reduce using rule 100 (expresion -> ID .)
    DOSPTS          reduce using rule 100 (expresion -> ID .)
    PYC             reduce using rule 100 (expresion -> ID .)
    PRINT           reduce using rule 100 (expresion -> ID .)
    PRINTLN         reduce using rule 100 (expresion -> ID .)
    ID              reduce using rule 100 (expresion -> ID .)
    GLOBAL          reduce using rule 100 (expresion -> ID .)
    LOCAL           reduce using rule 100 (expresion -> ID .)
    IF              reduce using rule 100 (expresion -> ID .)
    WHILE           reduce using rule 100 (expresion -> ID .)
    FOR             reduce using rule 100 (expresion -> ID .)
    BREAK           reduce using rule 100 (expresion -> ID .)
    CONTINUE        reduce using rule 100 (expresion -> ID .)
    FUNCTION        reduce using rule 100 (expresion -> ID .)
    RETURN          reduce using rule 100 (expresion -> ID .)
    PUSH            reduce using rule 100 (expresion -> ID .)
    POP             reduce using rule 100 (expresion -> ID .)
    NOT             reduce using rule 100 (expresion -> ID .)
    ENTERO          reduce using rule 100 (expresion -> ID .)
    DECIMAL         reduce using rule 100 (expresion -> ID .)
    CADENA          reduce using rule 100 (expresion -> ID .)
    TRUE            reduce using rule 100 (expresion -> ID .)
    FALSE           reduce using rule 100 (expresion -> ID .)
    LOG10           reduce using rule 100 (expresion -> ID .)
    LOG             reduce using rule 100 (expresion -> ID .)
    SENO            reduce using rule 100 (expresion -> ID .)
    COS             reduce using rule 100 (expresion -> ID .)
    TAN             reduce using rule 100 (expresion -> ID .)
    SQRT            reduce using rule 100 (expresion -> ID .)
    LOWERCASE       reduce using rule 100 (expresion -> ID .)
    UPPERCASE       reduce using rule 100 (expresion -> ID .)
    TRUNC           reduce using rule 100 (expresion -> ID .)
    FLOAT           reduce using rule 100 (expresion -> ID .)
    FSTRING         reduce using rule 100 (expresion -> ID .)
    TYPEOF          reduce using rule 100 (expresion -> ID .)
    PARSE           reduce using rule 100 (expresion -> ID .)
    LENGTH          reduce using rule 100 (expresion -> ID .)
    $end            reduce using rule 100 (expresion -> ID .)
    END             reduce using rule 100 (expresion -> ID .)
    ELSE            reduce using rule 100 (expresion -> ID .)
    ELSEIF          reduce using rule 100 (expresion -> ID .)
    CORA            shift and go to state 83

  ! PARA            [ reduce using rule 100 (expresion -> ID .) ]
  ! CORA            [ reduce using rule 100 (expresion -> ID .) ]

    list_vector                    shift and go to state 81

state 24

    (55) asignacion -> GLOBAL . ID IGUAL expresion DOSPTS DOSPTS tipo
    (58) asignacion -> GLOBAL . ID IGUAL expresion
    (34) declaracion -> GLOBAL . ID

    ID              shift and go to state 84


state 25

    (56) asignacion -> LOCAL . ID IGUAL expresion DOSPTS DOSPTS tipo
    (59) asignacion -> LOCAL . ID IGUAL expresion
    (35) declaracion -> LOCAL . ID

    ID              shift and go to state 85


state 26

    (42) sent_if -> IF . expresion instrucciones END
    (43) sent_if -> IF . PARA expresion PARC instrucciones END
    (44) sent_if -> IF . expresion instrucciones ELSE instrucciones END
    (45) sent_if -> IF . PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> IF . expresion instrucciones else_if
    (47) sent_if -> IF . PARA expresion PARC instrucciones else_if
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    PARA            shift and go to state 87
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 86
    sent_llamada                   shift and go to state 77

state 27

    (40) sent_while -> WHILE . expresion instrucciones END
    (41) sent_while -> WHILE . PARA expresion PARC instrucciones END
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    PARA            shift and go to state 89
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 88
    sent_llamada                   shift and go to state 77

state 28

    (39) sent_for -> FOR . ID IN expresion instrucciones END

    ID              shift and go to state 90


state 29

    (37) sent_break -> BREAK .

    PYC             reduce using rule 37 (sent_break -> BREAK .)
    PRINT           reduce using rule 37 (sent_break -> BREAK .)
    PRINTLN         reduce using rule 37 (sent_break -> BREAK .)
    ID              reduce using rule 37 (sent_break -> BREAK .)
    GLOBAL          reduce using rule 37 (sent_break -> BREAK .)
    LOCAL           reduce using rule 37 (sent_break -> BREAK .)
    IF              reduce using rule 37 (sent_break -> BREAK .)
    WHILE           reduce using rule 37 (sent_break -> BREAK .)
    FOR             reduce using rule 37 (sent_break -> BREAK .)
    BREAK           reduce using rule 37 (sent_break -> BREAK .)
    CONTINUE        reduce using rule 37 (sent_break -> BREAK .)
    FUNCTION        reduce using rule 37 (sent_break -> BREAK .)
    RETURN          reduce using rule 37 (sent_break -> BREAK .)
    PUSH            reduce using rule 37 (sent_break -> BREAK .)
    POP             reduce using rule 37 (sent_break -> BREAK .)
    MENOS           reduce using rule 37 (sent_break -> BREAK .)
    NOT             reduce using rule 37 (sent_break -> BREAK .)
    PARA            reduce using rule 37 (sent_break -> BREAK .)
    ENTERO          reduce using rule 37 (sent_break -> BREAK .)
    DECIMAL         reduce using rule 37 (sent_break -> BREAK .)
    CADENA          reduce using rule 37 (sent_break -> BREAK .)
    TRUE            reduce using rule 37 (sent_break -> BREAK .)
    FALSE           reduce using rule 37 (sent_break -> BREAK .)
    CORA            reduce using rule 37 (sent_break -> BREAK .)
    LOG10           reduce using rule 37 (sent_break -> BREAK .)
    LOG             reduce using rule 37 (sent_break -> BREAK .)
    SENO            reduce using rule 37 (sent_break -> BREAK .)
    COS             reduce using rule 37 (sent_break -> BREAK .)
    TAN             reduce using rule 37 (sent_break -> BREAK .)
    SQRT            reduce using rule 37 (sent_break -> BREAK .)
    LOWERCASE       reduce using rule 37 (sent_break -> BREAK .)
    UPPERCASE       reduce using rule 37 (sent_break -> BREAK .)
    TRUNC           reduce using rule 37 (sent_break -> BREAK .)
    FLOAT           reduce using rule 37 (sent_break -> BREAK .)
    FSTRING         reduce using rule 37 (sent_break -> BREAK .)
    TYPEOF          reduce using rule 37 (sent_break -> BREAK .)
    PARSE           reduce using rule 37 (sent_break -> BREAK .)
    LENGTH          reduce using rule 37 (sent_break -> BREAK .)
    $end            reduce using rule 37 (sent_break -> BREAK .)
    END             reduce using rule 37 (sent_break -> BREAK .)
    ELSE            reduce using rule 37 (sent_break -> BREAK .)
    ELSEIF          reduce using rule 37 (sent_break -> BREAK .)


state 30

    (38) sent_continue -> CONTINUE .

    PYC             reduce using rule 38 (sent_continue -> CONTINUE .)
    PRINT           reduce using rule 38 (sent_continue -> CONTINUE .)
    PRINTLN         reduce using rule 38 (sent_continue -> CONTINUE .)
    ID              reduce using rule 38 (sent_continue -> CONTINUE .)
    GLOBAL          reduce using rule 38 (sent_continue -> CONTINUE .)
    LOCAL           reduce using rule 38 (sent_continue -> CONTINUE .)
    IF              reduce using rule 38 (sent_continue -> CONTINUE .)
    WHILE           reduce using rule 38 (sent_continue -> CONTINUE .)
    FOR             reduce using rule 38 (sent_continue -> CONTINUE .)
    BREAK           reduce using rule 38 (sent_continue -> CONTINUE .)
    CONTINUE        reduce using rule 38 (sent_continue -> CONTINUE .)
    FUNCTION        reduce using rule 38 (sent_continue -> CONTINUE .)
    RETURN          reduce using rule 38 (sent_continue -> CONTINUE .)
    PUSH            reduce using rule 38 (sent_continue -> CONTINUE .)
    POP             reduce using rule 38 (sent_continue -> CONTINUE .)
    MENOS           reduce using rule 38 (sent_continue -> CONTINUE .)
    NOT             reduce using rule 38 (sent_continue -> CONTINUE .)
    PARA            reduce using rule 38 (sent_continue -> CONTINUE .)
    ENTERO          reduce using rule 38 (sent_continue -> CONTINUE .)
    DECIMAL         reduce using rule 38 (sent_continue -> CONTINUE .)
    CADENA          reduce using rule 38 (sent_continue -> CONTINUE .)
    TRUE            reduce using rule 38 (sent_continue -> CONTINUE .)
    FALSE           reduce using rule 38 (sent_continue -> CONTINUE .)
    CORA            reduce using rule 38 (sent_continue -> CONTINUE .)
    LOG10           reduce using rule 38 (sent_continue -> CONTINUE .)
    LOG             reduce using rule 38 (sent_continue -> CONTINUE .)
    SENO            reduce using rule 38 (sent_continue -> CONTINUE .)
    COS             reduce using rule 38 (sent_continue -> CONTINUE .)
    TAN             reduce using rule 38 (sent_continue -> CONTINUE .)
    SQRT            reduce using rule 38 (sent_continue -> CONTINUE .)
    LOWERCASE       reduce using rule 38 (sent_continue -> CONTINUE .)
    UPPERCASE       reduce using rule 38 (sent_continue -> CONTINUE .)
    TRUNC           reduce using rule 38 (sent_continue -> CONTINUE .)
    FLOAT           reduce using rule 38 (sent_continue -> CONTINUE .)
    FSTRING         reduce using rule 38 (sent_continue -> CONTINUE .)
    TYPEOF          reduce using rule 38 (sent_continue -> CONTINUE .)
    PARSE           reduce using rule 38 (sent_continue -> CONTINUE .)
    LENGTH          reduce using rule 38 (sent_continue -> CONTINUE .)
    $end            reduce using rule 38 (sent_continue -> CONTINUE .)
    END             reduce using rule 38 (sent_continue -> CONTINUE .)
    ELSE            reduce using rule 38 (sent_continue -> CONTINUE .)
    ELSEIF          reduce using rule 38 (sent_continue -> CONTINUE .)


state 31

    (28) sent_function -> FUNCTION . ID PARA parametros PARC instrucciones END
    (29) sent_function -> FUNCTION . ID PARA PARC instrucciones END

    ID              shift and go to state 91


state 32

    (24) sent_return -> RETURN .
    (25) sent_return -> RETURN . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CORA resolved as shift
  ! shift/reduce conflict for LOG10 resolved as shift
  ! shift/reduce conflict for LOG resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COS resolved as shift
  ! shift/reduce conflict for TAN resolved as shift
  ! shift/reduce conflict for SQRT resolved as shift
  ! shift/reduce conflict for LOWERCASE resolved as shift
  ! shift/reduce conflict for UPPERCASE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for FSTRING resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
    PYC             reduce using rule 24 (sent_return -> RETURN .)
    PRINT           reduce using rule 24 (sent_return -> RETURN .)
    PRINTLN         reduce using rule 24 (sent_return -> RETURN .)
    GLOBAL          reduce using rule 24 (sent_return -> RETURN .)
    LOCAL           reduce using rule 24 (sent_return -> RETURN .)
    IF              reduce using rule 24 (sent_return -> RETURN .)
    WHILE           reduce using rule 24 (sent_return -> RETURN .)
    FOR             reduce using rule 24 (sent_return -> RETURN .)
    BREAK           reduce using rule 24 (sent_return -> RETURN .)
    CONTINUE        reduce using rule 24 (sent_return -> RETURN .)
    FUNCTION        reduce using rule 24 (sent_return -> RETURN .)
    RETURN          reduce using rule 24 (sent_return -> RETURN .)
    PUSH            reduce using rule 24 (sent_return -> RETURN .)
    $end            reduce using rule 24 (sent_return -> RETURN .)
    END             reduce using rule 24 (sent_return -> RETURN .)
    ELSE            reduce using rule 24 (sent_return -> RETURN .)
    ELSEIF          reduce using rule 24 (sent_return -> RETURN .)
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

  ! ID              [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! POP             [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! MENOS           [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! NOT             [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! PARA            [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! ENTERO          [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! DECIMAL         [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! CADENA          [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! TRUE            [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! FALSE           [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! CORA            [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! LOG10           [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! LOG             [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! SENO            [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! COS             [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! TAN             [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! SQRT            [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! LOWERCASE       [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! UPPERCASE       [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! TRUNC           [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! FLOAT           [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! FSTRING         [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! TYPEOF          [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! PARSE           [ reduce using rule 24 (sent_return -> RETURN .) ]
  ! LENGTH          [ reduce using rule 24 (sent_return -> RETURN .) ]

    expresion                      shift and go to state 92
    sent_llamada                   shift and go to state 77

state 33

    (23) sent_push -> PUSH . NOT PARA expresion COMA expresion PARC

    NOT             shift and go to state 93


state 34

    (90) expresion -> NOT . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 94
    sent_llamada                   shift and go to state 77

state 35

    (22) sent_pop -> POP . NOT PARA expresion PARC
    (115) expresion -> POP . NOT PARA expresion PARC

    NOT             shift and go to state 95


state 36

    (81) expresion -> MENOS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 96
    sent_llamada                   shift and go to state 77

state 37

    (92) expresion -> ENTERO .

    MAS             reduce using rule 92 (expresion -> ENTERO .)
    MENOS           reduce using rule 92 (expresion -> ENTERO .)
    POR             reduce using rule 92 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 92 (expresion -> ENTERO .)
    MOD             reduce using rule 92 (expresion -> ENTERO .)
    POT             reduce using rule 92 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 92 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 92 (expresion -> ENTERO .)
    MENORQUE        reduce using rule 92 (expresion -> ENTERO .)
    MAYORQUE        reduce using rule 92 (expresion -> ENTERO .)
    DIFF            reduce using rule 92 (expresion -> ENTERO .)
    IGUALIGUAL      reduce using rule 92 (expresion -> ENTERO .)
    AND             reduce using rule 92 (expresion -> ENTERO .)
    OR              reduce using rule 92 (expresion -> ENTERO .)
    DOSPTS          reduce using rule 92 (expresion -> ENTERO .)
    PYC             reduce using rule 92 (expresion -> ENTERO .)
    PRINT           reduce using rule 92 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 92 (expresion -> ENTERO .)
    ID              reduce using rule 92 (expresion -> ENTERO .)
    GLOBAL          reduce using rule 92 (expresion -> ENTERO .)
    LOCAL           reduce using rule 92 (expresion -> ENTERO .)
    IF              reduce using rule 92 (expresion -> ENTERO .)
    WHILE           reduce using rule 92 (expresion -> ENTERO .)
    FOR             reduce using rule 92 (expresion -> ENTERO .)
    BREAK           reduce using rule 92 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 92 (expresion -> ENTERO .)
    FUNCTION        reduce using rule 92 (expresion -> ENTERO .)
    RETURN          reduce using rule 92 (expresion -> ENTERO .)
    PUSH            reduce using rule 92 (expresion -> ENTERO .)
    POP             reduce using rule 92 (expresion -> ENTERO .)
    NOT             reduce using rule 92 (expresion -> ENTERO .)
    PARA            reduce using rule 92 (expresion -> ENTERO .)
    ENTERO          reduce using rule 92 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 92 (expresion -> ENTERO .)
    CADENA          reduce using rule 92 (expresion -> ENTERO .)
    TRUE            reduce using rule 92 (expresion -> ENTERO .)
    FALSE           reduce using rule 92 (expresion -> ENTERO .)
    CORA            reduce using rule 92 (expresion -> ENTERO .)
    LOG10           reduce using rule 92 (expresion -> ENTERO .)
    LOG             reduce using rule 92 (expresion -> ENTERO .)
    SENO            reduce using rule 92 (expresion -> ENTERO .)
    COS             reduce using rule 92 (expresion -> ENTERO .)
    TAN             reduce using rule 92 (expresion -> ENTERO .)
    SQRT            reduce using rule 92 (expresion -> ENTERO .)
    LOWERCASE       reduce using rule 92 (expresion -> ENTERO .)
    UPPERCASE       reduce using rule 92 (expresion -> ENTERO .)
    TRUNC           reduce using rule 92 (expresion -> ENTERO .)
    FLOAT           reduce using rule 92 (expresion -> ENTERO .)
    FSTRING         reduce using rule 92 (expresion -> ENTERO .)
    TYPEOF          reduce using rule 92 (expresion -> ENTERO .)
    PARSE           reduce using rule 92 (expresion -> ENTERO .)
    LENGTH          reduce using rule 92 (expresion -> ENTERO .)
    $end            reduce using rule 92 (expresion -> ENTERO .)
    PARC            reduce using rule 92 (expresion -> ENTERO .)
    END             reduce using rule 92 (expresion -> ENTERO .)
    ELSE            reduce using rule 92 (expresion -> ENTERO .)
    ELSEIF          reduce using rule 92 (expresion -> ENTERO .)
    CORC            reduce using rule 92 (expresion -> ENTERO .)
    COMA            reduce using rule 92 (expresion -> ENTERO .)


state 38

    (93) expresion -> DECIMAL .

    MAS             reduce using rule 93 (expresion -> DECIMAL .)
    MENOS           reduce using rule 93 (expresion -> DECIMAL .)
    POR             reduce using rule 93 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 93 (expresion -> DECIMAL .)
    MOD             reduce using rule 93 (expresion -> DECIMAL .)
    POT             reduce using rule 93 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 93 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 93 (expresion -> DECIMAL .)
    MENORQUE        reduce using rule 93 (expresion -> DECIMAL .)
    MAYORQUE        reduce using rule 93 (expresion -> DECIMAL .)
    DIFF            reduce using rule 93 (expresion -> DECIMAL .)
    IGUALIGUAL      reduce using rule 93 (expresion -> DECIMAL .)
    AND             reduce using rule 93 (expresion -> DECIMAL .)
    OR              reduce using rule 93 (expresion -> DECIMAL .)
    DOSPTS          reduce using rule 93 (expresion -> DECIMAL .)
    PYC             reduce using rule 93 (expresion -> DECIMAL .)
    PRINT           reduce using rule 93 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 93 (expresion -> DECIMAL .)
    ID              reduce using rule 93 (expresion -> DECIMAL .)
    GLOBAL          reduce using rule 93 (expresion -> DECIMAL .)
    LOCAL           reduce using rule 93 (expresion -> DECIMAL .)
    IF              reduce using rule 93 (expresion -> DECIMAL .)
    WHILE           reduce using rule 93 (expresion -> DECIMAL .)
    FOR             reduce using rule 93 (expresion -> DECIMAL .)
    BREAK           reduce using rule 93 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 93 (expresion -> DECIMAL .)
    FUNCTION        reduce using rule 93 (expresion -> DECIMAL .)
    RETURN          reduce using rule 93 (expresion -> DECIMAL .)
    PUSH            reduce using rule 93 (expresion -> DECIMAL .)
    POP             reduce using rule 93 (expresion -> DECIMAL .)
    NOT             reduce using rule 93 (expresion -> DECIMAL .)
    PARA            reduce using rule 93 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 93 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 93 (expresion -> DECIMAL .)
    CADENA          reduce using rule 93 (expresion -> DECIMAL .)
    TRUE            reduce using rule 93 (expresion -> DECIMAL .)
    FALSE           reduce using rule 93 (expresion -> DECIMAL .)
    CORA            reduce using rule 93 (expresion -> DECIMAL .)
    LOG10           reduce using rule 93 (expresion -> DECIMAL .)
    LOG             reduce using rule 93 (expresion -> DECIMAL .)
    SENO            reduce using rule 93 (expresion -> DECIMAL .)
    COS             reduce using rule 93 (expresion -> DECIMAL .)
    TAN             reduce using rule 93 (expresion -> DECIMAL .)
    SQRT            reduce using rule 93 (expresion -> DECIMAL .)
    LOWERCASE       reduce using rule 93 (expresion -> DECIMAL .)
    UPPERCASE       reduce using rule 93 (expresion -> DECIMAL .)
    TRUNC           reduce using rule 93 (expresion -> DECIMAL .)
    FLOAT           reduce using rule 93 (expresion -> DECIMAL .)
    FSTRING         reduce using rule 93 (expresion -> DECIMAL .)
    TYPEOF          reduce using rule 93 (expresion -> DECIMAL .)
    PARSE           reduce using rule 93 (expresion -> DECIMAL .)
    LENGTH          reduce using rule 93 (expresion -> DECIMAL .)
    $end            reduce using rule 93 (expresion -> DECIMAL .)
    PARC            reduce using rule 93 (expresion -> DECIMAL .)
    END             reduce using rule 93 (expresion -> DECIMAL .)
    ELSE            reduce using rule 93 (expresion -> DECIMAL .)
    ELSEIF          reduce using rule 93 (expresion -> DECIMAL .)
    CORC            reduce using rule 93 (expresion -> DECIMAL .)
    COMA            reduce using rule 93 (expresion -> DECIMAL .)


state 39

    (94) expresion -> CADENA .

    MAS             reduce using rule 94 (expresion -> CADENA .)
    MENOS           reduce using rule 94 (expresion -> CADENA .)
    POR             reduce using rule 94 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 94 (expresion -> CADENA .)
    MOD             reduce using rule 94 (expresion -> CADENA .)
    POT             reduce using rule 94 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 94 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 94 (expresion -> CADENA .)
    MENORQUE        reduce using rule 94 (expresion -> CADENA .)
    MAYORQUE        reduce using rule 94 (expresion -> CADENA .)
    DIFF            reduce using rule 94 (expresion -> CADENA .)
    IGUALIGUAL      reduce using rule 94 (expresion -> CADENA .)
    AND             reduce using rule 94 (expresion -> CADENA .)
    OR              reduce using rule 94 (expresion -> CADENA .)
    DOSPTS          reduce using rule 94 (expresion -> CADENA .)
    PYC             reduce using rule 94 (expresion -> CADENA .)
    PRINT           reduce using rule 94 (expresion -> CADENA .)
    PRINTLN         reduce using rule 94 (expresion -> CADENA .)
    ID              reduce using rule 94 (expresion -> CADENA .)
    GLOBAL          reduce using rule 94 (expresion -> CADENA .)
    LOCAL           reduce using rule 94 (expresion -> CADENA .)
    IF              reduce using rule 94 (expresion -> CADENA .)
    WHILE           reduce using rule 94 (expresion -> CADENA .)
    FOR             reduce using rule 94 (expresion -> CADENA .)
    BREAK           reduce using rule 94 (expresion -> CADENA .)
    CONTINUE        reduce using rule 94 (expresion -> CADENA .)
    FUNCTION        reduce using rule 94 (expresion -> CADENA .)
    RETURN          reduce using rule 94 (expresion -> CADENA .)
    PUSH            reduce using rule 94 (expresion -> CADENA .)
    POP             reduce using rule 94 (expresion -> CADENA .)
    NOT             reduce using rule 94 (expresion -> CADENA .)
    PARA            reduce using rule 94 (expresion -> CADENA .)
    ENTERO          reduce using rule 94 (expresion -> CADENA .)
    DECIMAL         reduce using rule 94 (expresion -> CADENA .)
    CADENA          reduce using rule 94 (expresion -> CADENA .)
    TRUE            reduce using rule 94 (expresion -> CADENA .)
    FALSE           reduce using rule 94 (expresion -> CADENA .)
    CORA            reduce using rule 94 (expresion -> CADENA .)
    LOG10           reduce using rule 94 (expresion -> CADENA .)
    LOG             reduce using rule 94 (expresion -> CADENA .)
    SENO            reduce using rule 94 (expresion -> CADENA .)
    COS             reduce using rule 94 (expresion -> CADENA .)
    TAN             reduce using rule 94 (expresion -> CADENA .)
    SQRT            reduce using rule 94 (expresion -> CADENA .)
    LOWERCASE       reduce using rule 94 (expresion -> CADENA .)
    UPPERCASE       reduce using rule 94 (expresion -> CADENA .)
    TRUNC           reduce using rule 94 (expresion -> CADENA .)
    FLOAT           reduce using rule 94 (expresion -> CADENA .)
    FSTRING         reduce using rule 94 (expresion -> CADENA .)
    TYPEOF          reduce using rule 94 (expresion -> CADENA .)
    PARSE           reduce using rule 94 (expresion -> CADENA .)
    LENGTH          reduce using rule 94 (expresion -> CADENA .)
    $end            reduce using rule 94 (expresion -> CADENA .)
    PARC            reduce using rule 94 (expresion -> CADENA .)
    END             reduce using rule 94 (expresion -> CADENA .)
    ELSE            reduce using rule 94 (expresion -> CADENA .)
    ELSEIF          reduce using rule 94 (expresion -> CADENA .)
    CORC            reduce using rule 94 (expresion -> CADENA .)
    COMA            reduce using rule 94 (expresion -> CADENA .)


state 40

    (95) expresion -> TRUE .

    MAS             reduce using rule 95 (expresion -> TRUE .)
    MENOS           reduce using rule 95 (expresion -> TRUE .)
    POR             reduce using rule 95 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 95 (expresion -> TRUE .)
    MOD             reduce using rule 95 (expresion -> TRUE .)
    POT             reduce using rule 95 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 95 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 95 (expresion -> TRUE .)
    MENORQUE        reduce using rule 95 (expresion -> TRUE .)
    MAYORQUE        reduce using rule 95 (expresion -> TRUE .)
    DIFF            reduce using rule 95 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 95 (expresion -> TRUE .)
    AND             reduce using rule 95 (expresion -> TRUE .)
    OR              reduce using rule 95 (expresion -> TRUE .)
    DOSPTS          reduce using rule 95 (expresion -> TRUE .)
    PYC             reduce using rule 95 (expresion -> TRUE .)
    PRINT           reduce using rule 95 (expresion -> TRUE .)
    PRINTLN         reduce using rule 95 (expresion -> TRUE .)
    ID              reduce using rule 95 (expresion -> TRUE .)
    GLOBAL          reduce using rule 95 (expresion -> TRUE .)
    LOCAL           reduce using rule 95 (expresion -> TRUE .)
    IF              reduce using rule 95 (expresion -> TRUE .)
    WHILE           reduce using rule 95 (expresion -> TRUE .)
    FOR             reduce using rule 95 (expresion -> TRUE .)
    BREAK           reduce using rule 95 (expresion -> TRUE .)
    CONTINUE        reduce using rule 95 (expresion -> TRUE .)
    FUNCTION        reduce using rule 95 (expresion -> TRUE .)
    RETURN          reduce using rule 95 (expresion -> TRUE .)
    PUSH            reduce using rule 95 (expresion -> TRUE .)
    POP             reduce using rule 95 (expresion -> TRUE .)
    NOT             reduce using rule 95 (expresion -> TRUE .)
    PARA            reduce using rule 95 (expresion -> TRUE .)
    ENTERO          reduce using rule 95 (expresion -> TRUE .)
    DECIMAL         reduce using rule 95 (expresion -> TRUE .)
    CADENA          reduce using rule 95 (expresion -> TRUE .)
    TRUE            reduce using rule 95 (expresion -> TRUE .)
    FALSE           reduce using rule 95 (expresion -> TRUE .)
    CORA            reduce using rule 95 (expresion -> TRUE .)
    LOG10           reduce using rule 95 (expresion -> TRUE .)
    LOG             reduce using rule 95 (expresion -> TRUE .)
    SENO            reduce using rule 95 (expresion -> TRUE .)
    COS             reduce using rule 95 (expresion -> TRUE .)
    TAN             reduce using rule 95 (expresion -> TRUE .)
    SQRT            reduce using rule 95 (expresion -> TRUE .)
    LOWERCASE       reduce using rule 95 (expresion -> TRUE .)
    UPPERCASE       reduce using rule 95 (expresion -> TRUE .)
    TRUNC           reduce using rule 95 (expresion -> TRUE .)
    FLOAT           reduce using rule 95 (expresion -> TRUE .)
    FSTRING         reduce using rule 95 (expresion -> TRUE .)
    TYPEOF          reduce using rule 95 (expresion -> TRUE .)
    PARSE           reduce using rule 95 (expresion -> TRUE .)
    LENGTH          reduce using rule 95 (expresion -> TRUE .)
    $end            reduce using rule 95 (expresion -> TRUE .)
    PARC            reduce using rule 95 (expresion -> TRUE .)
    END             reduce using rule 95 (expresion -> TRUE .)
    ELSE            reduce using rule 95 (expresion -> TRUE .)
    ELSEIF          reduce using rule 95 (expresion -> TRUE .)
    CORC            reduce using rule 95 (expresion -> TRUE .)
    COMA            reduce using rule 95 (expresion -> TRUE .)


state 41

    (96) expresion -> FALSE .

    MAS             reduce using rule 96 (expresion -> FALSE .)
    MENOS           reduce using rule 96 (expresion -> FALSE .)
    POR             reduce using rule 96 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 96 (expresion -> FALSE .)
    MOD             reduce using rule 96 (expresion -> FALSE .)
    POT             reduce using rule 96 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 96 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 96 (expresion -> FALSE .)
    MENORQUE        reduce using rule 96 (expresion -> FALSE .)
    MAYORQUE        reduce using rule 96 (expresion -> FALSE .)
    DIFF            reduce using rule 96 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 96 (expresion -> FALSE .)
    AND             reduce using rule 96 (expresion -> FALSE .)
    OR              reduce using rule 96 (expresion -> FALSE .)
    DOSPTS          reduce using rule 96 (expresion -> FALSE .)
    PYC             reduce using rule 96 (expresion -> FALSE .)
    PRINT           reduce using rule 96 (expresion -> FALSE .)
    PRINTLN         reduce using rule 96 (expresion -> FALSE .)
    ID              reduce using rule 96 (expresion -> FALSE .)
    GLOBAL          reduce using rule 96 (expresion -> FALSE .)
    LOCAL           reduce using rule 96 (expresion -> FALSE .)
    IF              reduce using rule 96 (expresion -> FALSE .)
    WHILE           reduce using rule 96 (expresion -> FALSE .)
    FOR             reduce using rule 96 (expresion -> FALSE .)
    BREAK           reduce using rule 96 (expresion -> FALSE .)
    CONTINUE        reduce using rule 96 (expresion -> FALSE .)
    FUNCTION        reduce using rule 96 (expresion -> FALSE .)
    RETURN          reduce using rule 96 (expresion -> FALSE .)
    PUSH            reduce using rule 96 (expresion -> FALSE .)
    POP             reduce using rule 96 (expresion -> FALSE .)
    NOT             reduce using rule 96 (expresion -> FALSE .)
    PARA            reduce using rule 96 (expresion -> FALSE .)
    ENTERO          reduce using rule 96 (expresion -> FALSE .)
    DECIMAL         reduce using rule 96 (expresion -> FALSE .)
    CADENA          reduce using rule 96 (expresion -> FALSE .)
    TRUE            reduce using rule 96 (expresion -> FALSE .)
    FALSE           reduce using rule 96 (expresion -> FALSE .)
    CORA            reduce using rule 96 (expresion -> FALSE .)
    LOG10           reduce using rule 96 (expresion -> FALSE .)
    LOG             reduce using rule 96 (expresion -> FALSE .)
    SENO            reduce using rule 96 (expresion -> FALSE .)
    COS             reduce using rule 96 (expresion -> FALSE .)
    TAN             reduce using rule 96 (expresion -> FALSE .)
    SQRT            reduce using rule 96 (expresion -> FALSE .)
    LOWERCASE       reduce using rule 96 (expresion -> FALSE .)
    UPPERCASE       reduce using rule 96 (expresion -> FALSE .)
    TRUNC           reduce using rule 96 (expresion -> FALSE .)
    FLOAT           reduce using rule 96 (expresion -> FALSE .)
    FSTRING         reduce using rule 96 (expresion -> FALSE .)
    TYPEOF          reduce using rule 96 (expresion -> FALSE .)
    PARSE           reduce using rule 96 (expresion -> FALSE .)
    LENGTH          reduce using rule 96 (expresion -> FALSE .)
    $end            reduce using rule 96 (expresion -> FALSE .)
    PARC            reduce using rule 96 (expresion -> FALSE .)
    END             reduce using rule 96 (expresion -> FALSE .)
    ELSE            reduce using rule 96 (expresion -> FALSE .)
    ELSEIF          reduce using rule 96 (expresion -> FALSE .)
    CORC            reduce using rule 96 (expresion -> FALSE .)
    COMA            reduce using rule 96 (expresion -> FALSE .)


state 42

    (97) expresion -> CORA . lista_expr CORC
    (70) lista_expr -> . lista_expr COMA expresion
    (71) lista_expr -> . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    lista_expr                     shift and go to state 97
    expresion                      shift and go to state 98
    sent_llamada                   shift and go to state 77

state 43

    (101) expresion -> LOG10 . PARA expresion PARC

    PARA            shift and go to state 99


state 44

    (102) expresion -> LOG . PARA expresion COMA expresion PARC

    PARA            shift and go to state 100


state 45

    (103) expresion -> SENO . PARA expresion PARC

    PARA            shift and go to state 101


state 46

    (104) expresion -> COS . PARA expresion PARC

    PARA            shift and go to state 102


state 47

    (105) expresion -> TAN . PARA expresion PARC

    PARA            shift and go to state 103


state 48

    (106) expresion -> SQRT . PARA expresion PARC

    PARA            shift and go to state 104


state 49

    (107) expresion -> LOWERCASE . PARA expresion PARC

    PARA            shift and go to state 105


state 50

    (108) expresion -> UPPERCASE . PARA expresion PARC

    PARA            shift and go to state 106


state 51

    (109) expresion -> TRUNC . PARA expresion PARC

    PARA            shift and go to state 107


state 52

    (110) expresion -> FLOAT . PARA expresion PARC

    PARA            shift and go to state 108


state 53

    (111) expresion -> FSTRING . PARA expresion PARC

    PARA            shift and go to state 109


state 54

    (112) expresion -> TYPEOF . PARA expresion PARC

    PARA            shift and go to state 110


state 55

    (113) expresion -> PARSE . PARA tipo COMA expresion PARC

    PARA            shift and go to state 111


state 56

    (114) expresion -> LENGTH . PARA expresion PARC

    PARA            shift and go to state 112


state 57

    (2) instrucciones -> instrucciones instruccion . PYC
    (3) instrucciones -> instrucciones instruccion .

    PYC             shift and go to state 113
    PRINT           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    GLOBAL          reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LOCAL           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    PUSH            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    POP             reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    PARA            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    CORA            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LOG10           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LOG             reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    SENO            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    COS             reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    TAN             reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    SQRT            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LOWERCASE       reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    UPPERCASE       reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    TRUNC           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    FSTRING         reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    TYPEOF          reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    PARSE           reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    LENGTH          reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instrucciones instruccion .)
    ELSEIF          reduce using rule 3 (instrucciones -> instrucciones instruccion .)


state 58

    (4) instrucciones -> instruccion PYC .

    PRINT           reduce using rule 4 (instrucciones -> instruccion PYC .)
    PRINTLN         reduce using rule 4 (instrucciones -> instruccion PYC .)
    ID              reduce using rule 4 (instrucciones -> instruccion PYC .)
    GLOBAL          reduce using rule 4 (instrucciones -> instruccion PYC .)
    LOCAL           reduce using rule 4 (instrucciones -> instruccion PYC .)
    IF              reduce using rule 4 (instrucciones -> instruccion PYC .)
    WHILE           reduce using rule 4 (instrucciones -> instruccion PYC .)
    FOR             reduce using rule 4 (instrucciones -> instruccion PYC .)
    BREAK           reduce using rule 4 (instrucciones -> instruccion PYC .)
    CONTINUE        reduce using rule 4 (instrucciones -> instruccion PYC .)
    FUNCTION        reduce using rule 4 (instrucciones -> instruccion PYC .)
    RETURN          reduce using rule 4 (instrucciones -> instruccion PYC .)
    PUSH            reduce using rule 4 (instrucciones -> instruccion PYC .)
    POP             reduce using rule 4 (instrucciones -> instruccion PYC .)
    MENOS           reduce using rule 4 (instrucciones -> instruccion PYC .)
    NOT             reduce using rule 4 (instrucciones -> instruccion PYC .)
    PARA            reduce using rule 4 (instrucciones -> instruccion PYC .)
    ENTERO          reduce using rule 4 (instrucciones -> instruccion PYC .)
    DECIMAL         reduce using rule 4 (instrucciones -> instruccion PYC .)
    CADENA          reduce using rule 4 (instrucciones -> instruccion PYC .)
    TRUE            reduce using rule 4 (instrucciones -> instruccion PYC .)
    FALSE           reduce using rule 4 (instrucciones -> instruccion PYC .)
    CORA            reduce using rule 4 (instrucciones -> instruccion PYC .)
    LOG10           reduce using rule 4 (instrucciones -> instruccion PYC .)
    LOG             reduce using rule 4 (instrucciones -> instruccion PYC .)
    SENO            reduce using rule 4 (instrucciones -> instruccion PYC .)
    COS             reduce using rule 4 (instrucciones -> instruccion PYC .)
    TAN             reduce using rule 4 (instrucciones -> instruccion PYC .)
    SQRT            reduce using rule 4 (instrucciones -> instruccion PYC .)
    LOWERCASE       reduce using rule 4 (instrucciones -> instruccion PYC .)
    UPPERCASE       reduce using rule 4 (instrucciones -> instruccion PYC .)
    TRUNC           reduce using rule 4 (instrucciones -> instruccion PYC .)
    FLOAT           reduce using rule 4 (instrucciones -> instruccion PYC .)
    FSTRING         reduce using rule 4 (instrucciones -> instruccion PYC .)
    TYPEOF          reduce using rule 4 (instrucciones -> instruccion PYC .)
    PARSE           reduce using rule 4 (instrucciones -> instruccion PYC .)
    LENGTH          reduce using rule 4 (instrucciones -> instruccion PYC .)
    $end            reduce using rule 4 (instrucciones -> instruccion PYC .)
    END             reduce using rule 4 (instrucciones -> instruccion PYC .)
    ELSE            reduce using rule 4 (instrucciones -> instruccion PYC .)
    ELSEIF          reduce using rule 4 (instrucciones -> instruccion PYC .)


state 59

    (72) expresion -> expresion MAS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 114
    sent_llamada                   shift and go to state 77

state 60

    (73) expresion -> expresion MENOS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 115
    sent_llamada                   shift and go to state 77

state 61

    (74) expresion -> expresion POR . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 116
    sent_llamada                   shift and go to state 77

state 62

    (75) expresion -> expresion DIVIDIDO . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 117
    sent_llamada                   shift and go to state 77

state 63

    (76) expresion -> expresion MOD . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 118
    sent_llamada                   shift and go to state 77

state 64

    (77) expresion -> expresion POT . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 119
    sent_llamada                   shift and go to state 77

state 65

    (82) expresion -> expresion MENORIGUAL . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 120
    sent_llamada                   shift and go to state 77

state 66

    (83) expresion -> expresion MAYORIGUAL . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 121
    sent_llamada                   shift and go to state 77

state 67

    (84) expresion -> expresion MENORQUE . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 122
    sent_llamada                   shift and go to state 77

state 68

    (85) expresion -> expresion MAYORQUE . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 123
    sent_llamada                   shift and go to state 77

state 69

    (86) expresion -> expresion DIFF . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 124
    sent_llamada                   shift and go to state 77

state 70

    (87) expresion -> expresion IGUALIGUAL . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 125
    sent_llamada                   shift and go to state 77

state 71

    (88) expresion -> expresion AND . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 126
    sent_llamada                   shift and go to state 77

state 72

    (89) expresion -> expresion OR . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 127
    sent_llamada                   shift and go to state 77

state 73

    (98) expresion -> expresion DOSPTS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 128
    sent_llamada                   shift and go to state 77

state 74

    (66) print -> PRINT PARA . lista_expr PARC
    (67) println -> PRINT PARA . PARC
    (70) lista_expr -> . lista_expr COMA expresion
    (71) lista_expr -> . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    PARC            shift and go to state 130
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    lista_expr                     shift and go to state 129
    expresion                      shift and go to state 98
    sent_llamada                   shift and go to state 77

state 75

    (91) expresion -> PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 131
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 76

    (78) expresion -> ID . list_vector
    (100) expresion -> ID .
    (26) sent_llamada -> ID . PARA PARC
    (27) sent_llamada -> ID . PARA lista_expr PARC
    (79) list_vector -> . list_vector CORA expresion CORC
    (80) list_vector -> . CORA expresion CORC

  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for CORA resolved as shift
    PARC            reduce using rule 100 (expresion -> ID .)
    MAS             reduce using rule 100 (expresion -> ID .)
    MENOS           reduce using rule 100 (expresion -> ID .)
    POR             reduce using rule 100 (expresion -> ID .)
    DIVIDIDO        reduce using rule 100 (expresion -> ID .)
    MOD             reduce using rule 100 (expresion -> ID .)
    POT             reduce using rule 100 (expresion -> ID .)
    MENORIGUAL      reduce using rule 100 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 100 (expresion -> ID .)
    MENORQUE        reduce using rule 100 (expresion -> ID .)
    MAYORQUE        reduce using rule 100 (expresion -> ID .)
    DIFF            reduce using rule 100 (expresion -> ID .)
    IGUALIGUAL      reduce using rule 100 (expresion -> ID .)
    AND             reduce using rule 100 (expresion -> ID .)
    OR              reduce using rule 100 (expresion -> ID .)
    DOSPTS          reduce using rule 100 (expresion -> ID .)
    PRINT           reduce using rule 100 (expresion -> ID .)
    PRINTLN         reduce using rule 100 (expresion -> ID .)
    ID              reduce using rule 100 (expresion -> ID .)
    GLOBAL          reduce using rule 100 (expresion -> ID .)
    LOCAL           reduce using rule 100 (expresion -> ID .)
    IF              reduce using rule 100 (expresion -> ID .)
    WHILE           reduce using rule 100 (expresion -> ID .)
    FOR             reduce using rule 100 (expresion -> ID .)
    BREAK           reduce using rule 100 (expresion -> ID .)
    CONTINUE        reduce using rule 100 (expresion -> ID .)
    FUNCTION        reduce using rule 100 (expresion -> ID .)
    RETURN          reduce using rule 100 (expresion -> ID .)
    PUSH            reduce using rule 100 (expresion -> ID .)
    POP             reduce using rule 100 (expresion -> ID .)
    NOT             reduce using rule 100 (expresion -> ID .)
    ENTERO          reduce using rule 100 (expresion -> ID .)
    DECIMAL         reduce using rule 100 (expresion -> ID .)
    CADENA          reduce using rule 100 (expresion -> ID .)
    TRUE            reduce using rule 100 (expresion -> ID .)
    FALSE           reduce using rule 100 (expresion -> ID .)
    LOG10           reduce using rule 100 (expresion -> ID .)
    LOG             reduce using rule 100 (expresion -> ID .)
    SENO            reduce using rule 100 (expresion -> ID .)
    COS             reduce using rule 100 (expresion -> ID .)
    TAN             reduce using rule 100 (expresion -> ID .)
    SQRT            reduce using rule 100 (expresion -> ID .)
    LOWERCASE       reduce using rule 100 (expresion -> ID .)
    UPPERCASE       reduce using rule 100 (expresion -> ID .)
    TRUNC           reduce using rule 100 (expresion -> ID .)
    FLOAT           reduce using rule 100 (expresion -> ID .)
    FSTRING         reduce using rule 100 (expresion -> ID .)
    TYPEOF          reduce using rule 100 (expresion -> ID .)
    PARSE           reduce using rule 100 (expresion -> ID .)
    LENGTH          reduce using rule 100 (expresion -> ID .)
    PYC             reduce using rule 100 (expresion -> ID .)
    $end            reduce using rule 100 (expresion -> ID .)
    END             reduce using rule 100 (expresion -> ID .)
    ELSE            reduce using rule 100 (expresion -> ID .)
    ELSEIF          reduce using rule 100 (expresion -> ID .)
    CORC            reduce using rule 100 (expresion -> ID .)
    COMA            reduce using rule 100 (expresion -> ID .)
    PARA            shift and go to state 82
    CORA            shift and go to state 83

  ! PARA            [ reduce using rule 100 (expresion -> ID .) ]
  ! CORA            [ reduce using rule 100 (expresion -> ID .) ]

    list_vector                    shift and go to state 132

state 77

    (99) expresion -> sent_llamada .

    PARC            reduce using rule 99 (expresion -> sent_llamada .)
    MAS             reduce using rule 99 (expresion -> sent_llamada .)
    MENOS           reduce using rule 99 (expresion -> sent_llamada .)
    POR             reduce using rule 99 (expresion -> sent_llamada .)
    DIVIDIDO        reduce using rule 99 (expresion -> sent_llamada .)
    MOD             reduce using rule 99 (expresion -> sent_llamada .)
    POT             reduce using rule 99 (expresion -> sent_llamada .)
    MENORIGUAL      reduce using rule 99 (expresion -> sent_llamada .)
    MAYORIGUAL      reduce using rule 99 (expresion -> sent_llamada .)
    MENORQUE        reduce using rule 99 (expresion -> sent_llamada .)
    MAYORQUE        reduce using rule 99 (expresion -> sent_llamada .)
    DIFF            reduce using rule 99 (expresion -> sent_llamada .)
    IGUALIGUAL      reduce using rule 99 (expresion -> sent_llamada .)
    AND             reduce using rule 99 (expresion -> sent_llamada .)
    OR              reduce using rule 99 (expresion -> sent_llamada .)
    DOSPTS          reduce using rule 99 (expresion -> sent_llamada .)
    PRINT           reduce using rule 99 (expresion -> sent_llamada .)
    PRINTLN         reduce using rule 99 (expresion -> sent_llamada .)
    ID              reduce using rule 99 (expresion -> sent_llamada .)
    GLOBAL          reduce using rule 99 (expresion -> sent_llamada .)
    LOCAL           reduce using rule 99 (expresion -> sent_llamada .)
    IF              reduce using rule 99 (expresion -> sent_llamada .)
    WHILE           reduce using rule 99 (expresion -> sent_llamada .)
    FOR             reduce using rule 99 (expresion -> sent_llamada .)
    BREAK           reduce using rule 99 (expresion -> sent_llamada .)
    CONTINUE        reduce using rule 99 (expresion -> sent_llamada .)
    FUNCTION        reduce using rule 99 (expresion -> sent_llamada .)
    RETURN          reduce using rule 99 (expresion -> sent_llamada .)
    PUSH            reduce using rule 99 (expresion -> sent_llamada .)
    POP             reduce using rule 99 (expresion -> sent_llamada .)
    NOT             reduce using rule 99 (expresion -> sent_llamada .)
    PARA            reduce using rule 99 (expresion -> sent_llamada .)
    ENTERO          reduce using rule 99 (expresion -> sent_llamada .)
    DECIMAL         reduce using rule 99 (expresion -> sent_llamada .)
    CADENA          reduce using rule 99 (expresion -> sent_llamada .)
    TRUE            reduce using rule 99 (expresion -> sent_llamada .)
    FALSE           reduce using rule 99 (expresion -> sent_llamada .)
    CORA            reduce using rule 99 (expresion -> sent_llamada .)
    LOG10           reduce using rule 99 (expresion -> sent_llamada .)
    LOG             reduce using rule 99 (expresion -> sent_llamada .)
    SENO            reduce using rule 99 (expresion -> sent_llamada .)
    COS             reduce using rule 99 (expresion -> sent_llamada .)
    TAN             reduce using rule 99 (expresion -> sent_llamada .)
    SQRT            reduce using rule 99 (expresion -> sent_llamada .)
    LOWERCASE       reduce using rule 99 (expresion -> sent_llamada .)
    UPPERCASE       reduce using rule 99 (expresion -> sent_llamada .)
    TRUNC           reduce using rule 99 (expresion -> sent_llamada .)
    FLOAT           reduce using rule 99 (expresion -> sent_llamada .)
    FSTRING         reduce using rule 99 (expresion -> sent_llamada .)
    TYPEOF          reduce using rule 99 (expresion -> sent_llamada .)
    PARSE           reduce using rule 99 (expresion -> sent_llamada .)
    LENGTH          reduce using rule 99 (expresion -> sent_llamada .)
    PYC             reduce using rule 99 (expresion -> sent_llamada .)
    $end            reduce using rule 99 (expresion -> sent_llamada .)
    END             reduce using rule 99 (expresion -> sent_llamada .)
    ELSE            reduce using rule 99 (expresion -> sent_llamada .)
    ELSEIF          reduce using rule 99 (expresion -> sent_llamada .)
    CORC            reduce using rule 99 (expresion -> sent_llamada .)
    COMA            reduce using rule 99 (expresion -> sent_llamada .)


state 78

    (115) expresion -> POP . NOT PARA expresion PARC

    NOT             shift and go to state 133


state 79

    (68) println -> PRINTLN PARA . PARC
    (69) println -> PRINTLN PARA . lista_expr PARC
    (70) lista_expr -> . lista_expr COMA expresion
    (71) lista_expr -> . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    PARC            shift and go to state 134
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    lista_expr                     shift and go to state 135
    expresion                      shift and go to state 98
    sent_llamada                   shift and go to state 77

state 80

    (54) asignacion -> ID IGUAL . expresion DOSPTS DOSPTS tipo
    (57) asignacion -> ID IGUAL . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 136
    sent_llamada                   shift and go to state 77

state 81

    (36) asignacion_vect -> ID list_vector . IGUAL expresion
    (78) expresion -> ID list_vector .
    (79) list_vector -> list_vector . CORA expresion CORC

  ! shift/reduce conflict for CORA resolved as shift
    IGUAL           shift and go to state 137
    MAS             reduce using rule 78 (expresion -> ID list_vector .)
    MENOS           reduce using rule 78 (expresion -> ID list_vector .)
    POR             reduce using rule 78 (expresion -> ID list_vector .)
    DIVIDIDO        reduce using rule 78 (expresion -> ID list_vector .)
    MOD             reduce using rule 78 (expresion -> ID list_vector .)
    POT             reduce using rule 78 (expresion -> ID list_vector .)
    MENORIGUAL      reduce using rule 78 (expresion -> ID list_vector .)
    MAYORIGUAL      reduce using rule 78 (expresion -> ID list_vector .)
    MENORQUE        reduce using rule 78 (expresion -> ID list_vector .)
    MAYORQUE        reduce using rule 78 (expresion -> ID list_vector .)
    DIFF            reduce using rule 78 (expresion -> ID list_vector .)
    IGUALIGUAL      reduce using rule 78 (expresion -> ID list_vector .)
    AND             reduce using rule 78 (expresion -> ID list_vector .)
    OR              reduce using rule 78 (expresion -> ID list_vector .)
    DOSPTS          reduce using rule 78 (expresion -> ID list_vector .)
    PYC             reduce using rule 78 (expresion -> ID list_vector .)
    PRINT           reduce using rule 78 (expresion -> ID list_vector .)
    PRINTLN         reduce using rule 78 (expresion -> ID list_vector .)
    ID              reduce using rule 78 (expresion -> ID list_vector .)
    GLOBAL          reduce using rule 78 (expresion -> ID list_vector .)
    LOCAL           reduce using rule 78 (expresion -> ID list_vector .)
    IF              reduce using rule 78 (expresion -> ID list_vector .)
    WHILE           reduce using rule 78 (expresion -> ID list_vector .)
    FOR             reduce using rule 78 (expresion -> ID list_vector .)
    BREAK           reduce using rule 78 (expresion -> ID list_vector .)
    CONTINUE        reduce using rule 78 (expresion -> ID list_vector .)
    FUNCTION        reduce using rule 78 (expresion -> ID list_vector .)
    RETURN          reduce using rule 78 (expresion -> ID list_vector .)
    PUSH            reduce using rule 78 (expresion -> ID list_vector .)
    POP             reduce using rule 78 (expresion -> ID list_vector .)
    NOT             reduce using rule 78 (expresion -> ID list_vector .)
    PARA            reduce using rule 78 (expresion -> ID list_vector .)
    ENTERO          reduce using rule 78 (expresion -> ID list_vector .)
    DECIMAL         reduce using rule 78 (expresion -> ID list_vector .)
    CADENA          reduce using rule 78 (expresion -> ID list_vector .)
    TRUE            reduce using rule 78 (expresion -> ID list_vector .)
    FALSE           reduce using rule 78 (expresion -> ID list_vector .)
    LOG10           reduce using rule 78 (expresion -> ID list_vector .)
    LOG             reduce using rule 78 (expresion -> ID list_vector .)
    SENO            reduce using rule 78 (expresion -> ID list_vector .)
    COS             reduce using rule 78 (expresion -> ID list_vector .)
    TAN             reduce using rule 78 (expresion -> ID list_vector .)
    SQRT            reduce using rule 78 (expresion -> ID list_vector .)
    LOWERCASE       reduce using rule 78 (expresion -> ID list_vector .)
    UPPERCASE       reduce using rule 78 (expresion -> ID list_vector .)
    TRUNC           reduce using rule 78 (expresion -> ID list_vector .)
    FLOAT           reduce using rule 78 (expresion -> ID list_vector .)
    FSTRING         reduce using rule 78 (expresion -> ID list_vector .)
    TYPEOF          reduce using rule 78 (expresion -> ID list_vector .)
    PARSE           reduce using rule 78 (expresion -> ID list_vector .)
    LENGTH          reduce using rule 78 (expresion -> ID list_vector .)
    $end            reduce using rule 78 (expresion -> ID list_vector .)
    END             reduce using rule 78 (expresion -> ID list_vector .)
    ELSE            reduce using rule 78 (expresion -> ID list_vector .)
    ELSEIF          reduce using rule 78 (expresion -> ID list_vector .)
    CORA            shift and go to state 138

  ! CORA            [ reduce using rule 78 (expresion -> ID list_vector .) ]


state 82

    (26) sent_llamada -> ID PARA . PARC
    (27) sent_llamada -> ID PARA . lista_expr PARC
    (70) lista_expr -> . lista_expr COMA expresion
    (71) lista_expr -> . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    PARC            shift and go to state 139
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    lista_expr                     shift and go to state 140
    expresion                      shift and go to state 98
    sent_llamada                   shift and go to state 77

state 83

    (80) list_vector -> CORA . expresion CORC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 141
    sent_llamada                   shift and go to state 77

state 84

    (55) asignacion -> GLOBAL ID . IGUAL expresion DOSPTS DOSPTS tipo
    (58) asignacion -> GLOBAL ID . IGUAL expresion
    (34) declaracion -> GLOBAL ID .

    IGUAL           shift and go to state 142
    PYC             reduce using rule 34 (declaracion -> GLOBAL ID .)
    PRINT           reduce using rule 34 (declaracion -> GLOBAL ID .)
    PRINTLN         reduce using rule 34 (declaracion -> GLOBAL ID .)
    ID              reduce using rule 34 (declaracion -> GLOBAL ID .)
    GLOBAL          reduce using rule 34 (declaracion -> GLOBAL ID .)
    LOCAL           reduce using rule 34 (declaracion -> GLOBAL ID .)
    IF              reduce using rule 34 (declaracion -> GLOBAL ID .)
    WHILE           reduce using rule 34 (declaracion -> GLOBAL ID .)
    FOR             reduce using rule 34 (declaracion -> GLOBAL ID .)
    BREAK           reduce using rule 34 (declaracion -> GLOBAL ID .)
    CONTINUE        reduce using rule 34 (declaracion -> GLOBAL ID .)
    FUNCTION        reduce using rule 34 (declaracion -> GLOBAL ID .)
    RETURN          reduce using rule 34 (declaracion -> GLOBAL ID .)
    PUSH            reduce using rule 34 (declaracion -> GLOBAL ID .)
    POP             reduce using rule 34 (declaracion -> GLOBAL ID .)
    MENOS           reduce using rule 34 (declaracion -> GLOBAL ID .)
    NOT             reduce using rule 34 (declaracion -> GLOBAL ID .)
    PARA            reduce using rule 34 (declaracion -> GLOBAL ID .)
    ENTERO          reduce using rule 34 (declaracion -> GLOBAL ID .)
    DECIMAL         reduce using rule 34 (declaracion -> GLOBAL ID .)
    CADENA          reduce using rule 34 (declaracion -> GLOBAL ID .)
    TRUE            reduce using rule 34 (declaracion -> GLOBAL ID .)
    FALSE           reduce using rule 34 (declaracion -> GLOBAL ID .)
    CORA            reduce using rule 34 (declaracion -> GLOBAL ID .)
    LOG10           reduce using rule 34 (declaracion -> GLOBAL ID .)
    LOG             reduce using rule 34 (declaracion -> GLOBAL ID .)
    SENO            reduce using rule 34 (declaracion -> GLOBAL ID .)
    COS             reduce using rule 34 (declaracion -> GLOBAL ID .)
    TAN             reduce using rule 34 (declaracion -> GLOBAL ID .)
    SQRT            reduce using rule 34 (declaracion -> GLOBAL ID .)
    LOWERCASE       reduce using rule 34 (declaracion -> GLOBAL ID .)
    UPPERCASE       reduce using rule 34 (declaracion -> GLOBAL ID .)
    TRUNC           reduce using rule 34 (declaracion -> GLOBAL ID .)
    FLOAT           reduce using rule 34 (declaracion -> GLOBAL ID .)
    FSTRING         reduce using rule 34 (declaracion -> GLOBAL ID .)
    TYPEOF          reduce using rule 34 (declaracion -> GLOBAL ID .)
    PARSE           reduce using rule 34 (declaracion -> GLOBAL ID .)
    LENGTH          reduce using rule 34 (declaracion -> GLOBAL ID .)
    $end            reduce using rule 34 (declaracion -> GLOBAL ID .)
    END             reduce using rule 34 (declaracion -> GLOBAL ID .)
    ELSE            reduce using rule 34 (declaracion -> GLOBAL ID .)
    ELSEIF          reduce using rule 34 (declaracion -> GLOBAL ID .)


state 85

    (56) asignacion -> LOCAL ID . IGUAL expresion DOSPTS DOSPTS tipo
    (59) asignacion -> LOCAL ID . IGUAL expresion
    (35) declaracion -> LOCAL ID .

    IGUAL           shift and go to state 143
    PYC             reduce using rule 35 (declaracion -> LOCAL ID .)
    PRINT           reduce using rule 35 (declaracion -> LOCAL ID .)
    PRINTLN         reduce using rule 35 (declaracion -> LOCAL ID .)
    ID              reduce using rule 35 (declaracion -> LOCAL ID .)
    GLOBAL          reduce using rule 35 (declaracion -> LOCAL ID .)
    LOCAL           reduce using rule 35 (declaracion -> LOCAL ID .)
    IF              reduce using rule 35 (declaracion -> LOCAL ID .)
    WHILE           reduce using rule 35 (declaracion -> LOCAL ID .)
    FOR             reduce using rule 35 (declaracion -> LOCAL ID .)
    BREAK           reduce using rule 35 (declaracion -> LOCAL ID .)
    CONTINUE        reduce using rule 35 (declaracion -> LOCAL ID .)
    FUNCTION        reduce using rule 35 (declaracion -> LOCAL ID .)
    RETURN          reduce using rule 35 (declaracion -> LOCAL ID .)
    PUSH            reduce using rule 35 (declaracion -> LOCAL ID .)
    POP             reduce using rule 35 (declaracion -> LOCAL ID .)
    MENOS           reduce using rule 35 (declaracion -> LOCAL ID .)
    NOT             reduce using rule 35 (declaracion -> LOCAL ID .)
    PARA            reduce using rule 35 (declaracion -> LOCAL ID .)
    ENTERO          reduce using rule 35 (declaracion -> LOCAL ID .)
    DECIMAL         reduce using rule 35 (declaracion -> LOCAL ID .)
    CADENA          reduce using rule 35 (declaracion -> LOCAL ID .)
    TRUE            reduce using rule 35 (declaracion -> LOCAL ID .)
    FALSE           reduce using rule 35 (declaracion -> LOCAL ID .)
    CORA            reduce using rule 35 (declaracion -> LOCAL ID .)
    LOG10           reduce using rule 35 (declaracion -> LOCAL ID .)
    LOG             reduce using rule 35 (declaracion -> LOCAL ID .)
    SENO            reduce using rule 35 (declaracion -> LOCAL ID .)
    COS             reduce using rule 35 (declaracion -> LOCAL ID .)
    TAN             reduce using rule 35 (declaracion -> LOCAL ID .)
    SQRT            reduce using rule 35 (declaracion -> LOCAL ID .)
    LOWERCASE       reduce using rule 35 (declaracion -> LOCAL ID .)
    UPPERCASE       reduce using rule 35 (declaracion -> LOCAL ID .)
    TRUNC           reduce using rule 35 (declaracion -> LOCAL ID .)
    FLOAT           reduce using rule 35 (declaracion -> LOCAL ID .)
    FSTRING         reduce using rule 35 (declaracion -> LOCAL ID .)
    TYPEOF          reduce using rule 35 (declaracion -> LOCAL ID .)
    PARSE           reduce using rule 35 (declaracion -> LOCAL ID .)
    LENGTH          reduce using rule 35 (declaracion -> LOCAL ID .)
    $end            reduce using rule 35 (declaracion -> LOCAL ID .)
    END             reduce using rule 35 (declaracion -> LOCAL ID .)
    ELSE            reduce using rule 35 (declaracion -> LOCAL ID .)
    ELSEIF          reduce using rule 35 (declaracion -> LOCAL ID .)


state 86

    (42) sent_if -> IF expresion . instrucciones END
    (44) sent_if -> IF expresion . instrucciones ELSE instrucciones END
    (46) sent_if -> IF expresion . instrucciones else_if
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    MAS             shift and go to state 59
    MENOS           shift and go to state 145
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 144
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 87

    (43) sent_if -> IF PARA . expresion PARC instrucciones END
    (45) sent_if -> IF PARA . expresion PARC instrucciones ELSE instrucciones END
    (47) sent_if -> IF PARA . expresion PARC instrucciones else_if
    (91) expresion -> PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 146
    sent_llamada                   shift and go to state 77

state 88

    (40) sent_while -> WHILE expresion . instrucciones END
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    MAS             shift and go to state 59
    MENOS           shift and go to state 145
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 147
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 89

    (41) sent_while -> WHILE PARA . expresion PARC instrucciones END
    (91) expresion -> PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 148
    sent_llamada                   shift and go to state 77

state 90

    (39) sent_for -> FOR ID . IN expresion instrucciones END

    IN              shift and go to state 149


state 91

    (28) sent_function -> FUNCTION ID . PARA parametros PARC instrucciones END
    (29) sent_function -> FUNCTION ID . PARA PARC instrucciones END

    PARA            shift and go to state 150


state 92

    (25) sent_return -> RETURN expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PYC             reduce using rule 25 (sent_return -> RETURN expresion .)
    PRINT           reduce using rule 25 (sent_return -> RETURN expresion .)
    PRINTLN         reduce using rule 25 (sent_return -> RETURN expresion .)
    ID              reduce using rule 25 (sent_return -> RETURN expresion .)
    GLOBAL          reduce using rule 25 (sent_return -> RETURN expresion .)
    LOCAL           reduce using rule 25 (sent_return -> RETURN expresion .)
    IF              reduce using rule 25 (sent_return -> RETURN expresion .)
    WHILE           reduce using rule 25 (sent_return -> RETURN expresion .)
    FOR             reduce using rule 25 (sent_return -> RETURN expresion .)
    BREAK           reduce using rule 25 (sent_return -> RETURN expresion .)
    CONTINUE        reduce using rule 25 (sent_return -> RETURN expresion .)
    FUNCTION        reduce using rule 25 (sent_return -> RETURN expresion .)
    RETURN          reduce using rule 25 (sent_return -> RETURN expresion .)
    PUSH            reduce using rule 25 (sent_return -> RETURN expresion .)
    POP             reduce using rule 25 (sent_return -> RETURN expresion .)
    NOT             reduce using rule 25 (sent_return -> RETURN expresion .)
    PARA            reduce using rule 25 (sent_return -> RETURN expresion .)
    ENTERO          reduce using rule 25 (sent_return -> RETURN expresion .)
    DECIMAL         reduce using rule 25 (sent_return -> RETURN expresion .)
    CADENA          reduce using rule 25 (sent_return -> RETURN expresion .)
    TRUE            reduce using rule 25 (sent_return -> RETURN expresion .)
    FALSE           reduce using rule 25 (sent_return -> RETURN expresion .)
    CORA            reduce using rule 25 (sent_return -> RETURN expresion .)
    LOG10           reduce using rule 25 (sent_return -> RETURN expresion .)
    LOG             reduce using rule 25 (sent_return -> RETURN expresion .)
    SENO            reduce using rule 25 (sent_return -> RETURN expresion .)
    COS             reduce using rule 25 (sent_return -> RETURN expresion .)
    TAN             reduce using rule 25 (sent_return -> RETURN expresion .)
    SQRT            reduce using rule 25 (sent_return -> RETURN expresion .)
    LOWERCASE       reduce using rule 25 (sent_return -> RETURN expresion .)
    UPPERCASE       reduce using rule 25 (sent_return -> RETURN expresion .)
    TRUNC           reduce using rule 25 (sent_return -> RETURN expresion .)
    FLOAT           reduce using rule 25 (sent_return -> RETURN expresion .)
    FSTRING         reduce using rule 25 (sent_return -> RETURN expresion .)
    TYPEOF          reduce using rule 25 (sent_return -> RETURN expresion .)
    PARSE           reduce using rule 25 (sent_return -> RETURN expresion .)
    LENGTH          reduce using rule 25 (sent_return -> RETURN expresion .)
    $end            reduce using rule 25 (sent_return -> RETURN expresion .)
    END             reduce using rule 25 (sent_return -> RETURN expresion .)
    ELSE            reduce using rule 25 (sent_return -> RETURN expresion .)
    ELSEIF          reduce using rule 25 (sent_return -> RETURN expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73

  ! MENOS           [ reduce using rule 25 (sent_return -> RETURN expresion .) ]


state 93

    (23) sent_push -> PUSH NOT . PARA expresion COMA expresion PARC

    PARA            shift and go to state 151


state 94

    (90) expresion -> NOT expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    AND             reduce using rule 90 (expresion -> NOT expresion .)
    OR              reduce using rule 90 (expresion -> NOT expresion .)
    DOSPTS          reduce using rule 90 (expresion -> NOT expresion .)
    PYC             reduce using rule 90 (expresion -> NOT expresion .)
    PRINT           reduce using rule 90 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 90 (expresion -> NOT expresion .)
    ID              reduce using rule 90 (expresion -> NOT expresion .)
    GLOBAL          reduce using rule 90 (expresion -> NOT expresion .)
    LOCAL           reduce using rule 90 (expresion -> NOT expresion .)
    IF              reduce using rule 90 (expresion -> NOT expresion .)
    WHILE           reduce using rule 90 (expresion -> NOT expresion .)
    FOR             reduce using rule 90 (expresion -> NOT expresion .)
    BREAK           reduce using rule 90 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 90 (expresion -> NOT expresion .)
    FUNCTION        reduce using rule 90 (expresion -> NOT expresion .)
    RETURN          reduce using rule 90 (expresion -> NOT expresion .)
    PUSH            reduce using rule 90 (expresion -> NOT expresion .)
    POP             reduce using rule 90 (expresion -> NOT expresion .)
    NOT             reduce using rule 90 (expresion -> NOT expresion .)
    PARA            reduce using rule 90 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 90 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 90 (expresion -> NOT expresion .)
    CADENA          reduce using rule 90 (expresion -> NOT expresion .)
    TRUE            reduce using rule 90 (expresion -> NOT expresion .)
    FALSE           reduce using rule 90 (expresion -> NOT expresion .)
    CORA            reduce using rule 90 (expresion -> NOT expresion .)
    LOG10           reduce using rule 90 (expresion -> NOT expresion .)
    LOG             reduce using rule 90 (expresion -> NOT expresion .)
    SENO            reduce using rule 90 (expresion -> NOT expresion .)
    COS             reduce using rule 90 (expresion -> NOT expresion .)
    TAN             reduce using rule 90 (expresion -> NOT expresion .)
    SQRT            reduce using rule 90 (expresion -> NOT expresion .)
    LOWERCASE       reduce using rule 90 (expresion -> NOT expresion .)
    UPPERCASE       reduce using rule 90 (expresion -> NOT expresion .)
    TRUNC           reduce using rule 90 (expresion -> NOT expresion .)
    FLOAT           reduce using rule 90 (expresion -> NOT expresion .)
    FSTRING         reduce using rule 90 (expresion -> NOT expresion .)
    TYPEOF          reduce using rule 90 (expresion -> NOT expresion .)
    PARSE           reduce using rule 90 (expresion -> NOT expresion .)
    LENGTH          reduce using rule 90 (expresion -> NOT expresion .)
    $end            reduce using rule 90 (expresion -> NOT expresion .)
    PARC            reduce using rule 90 (expresion -> NOT expresion .)
    END             reduce using rule 90 (expresion -> NOT expresion .)
    ELSE            reduce using rule 90 (expresion -> NOT expresion .)
    ELSEIF          reduce using rule 90 (expresion -> NOT expresion .)
    CORC            reduce using rule 90 (expresion -> NOT expresion .)
    COMA            reduce using rule 90 (expresion -> NOT expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70

  ! MAS             [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! MENORQUE        [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! MAYORQUE        [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! DIFF            [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 90 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 95

    (22) sent_pop -> POP NOT . PARA expresion PARC
    (115) expresion -> POP NOT . PARA expresion PARC

    PARA            shift and go to state 152


state 96

    (81) expresion -> MENOS expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MAS             reduce using rule 81 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 81 (expresion -> MENOS expresion .)
    POR             reduce using rule 81 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 81 (expresion -> MENOS expresion .)
    MOD             reduce using rule 81 (expresion -> MENOS expresion .)
    POT             reduce using rule 81 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 81 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 81 (expresion -> MENOS expresion .)
    MENORQUE        reduce using rule 81 (expresion -> MENOS expresion .)
    MAYORQUE        reduce using rule 81 (expresion -> MENOS expresion .)
    DIFF            reduce using rule 81 (expresion -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 81 (expresion -> MENOS expresion .)
    AND             reduce using rule 81 (expresion -> MENOS expresion .)
    OR              reduce using rule 81 (expresion -> MENOS expresion .)
    DOSPTS          reduce using rule 81 (expresion -> MENOS expresion .)
    PYC             reduce using rule 81 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 81 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 81 (expresion -> MENOS expresion .)
    ID              reduce using rule 81 (expresion -> MENOS expresion .)
    GLOBAL          reduce using rule 81 (expresion -> MENOS expresion .)
    LOCAL           reduce using rule 81 (expresion -> MENOS expresion .)
    IF              reduce using rule 81 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 81 (expresion -> MENOS expresion .)
    FOR             reduce using rule 81 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 81 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 81 (expresion -> MENOS expresion .)
    FUNCTION        reduce using rule 81 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 81 (expresion -> MENOS expresion .)
    PUSH            reduce using rule 81 (expresion -> MENOS expresion .)
    POP             reduce using rule 81 (expresion -> MENOS expresion .)
    NOT             reduce using rule 81 (expresion -> MENOS expresion .)
    PARA            reduce using rule 81 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 81 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 81 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 81 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 81 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 81 (expresion -> MENOS expresion .)
    CORA            reduce using rule 81 (expresion -> MENOS expresion .)
    LOG10           reduce using rule 81 (expresion -> MENOS expresion .)
    LOG             reduce using rule 81 (expresion -> MENOS expresion .)
    SENO            reduce using rule 81 (expresion -> MENOS expresion .)
    COS             reduce using rule 81 (expresion -> MENOS expresion .)
    TAN             reduce using rule 81 (expresion -> MENOS expresion .)
    SQRT            reduce using rule 81 (expresion -> MENOS expresion .)
    LOWERCASE       reduce using rule 81 (expresion -> MENOS expresion .)
    UPPERCASE       reduce using rule 81 (expresion -> MENOS expresion .)
    TRUNC           reduce using rule 81 (expresion -> MENOS expresion .)
    FLOAT           reduce using rule 81 (expresion -> MENOS expresion .)
    FSTRING         reduce using rule 81 (expresion -> MENOS expresion .)
    TYPEOF          reduce using rule 81 (expresion -> MENOS expresion .)
    PARSE           reduce using rule 81 (expresion -> MENOS expresion .)
    LENGTH          reduce using rule 81 (expresion -> MENOS expresion .)
    $end            reduce using rule 81 (expresion -> MENOS expresion .)
    PARC            reduce using rule 81 (expresion -> MENOS expresion .)
    END             reduce using rule 81 (expresion -> MENOS expresion .)
    ELSE            reduce using rule 81 (expresion -> MENOS expresion .)
    ELSEIF          reduce using rule 81 (expresion -> MENOS expresion .)
    CORC            reduce using rule 81 (expresion -> MENOS expresion .)
    COMA            reduce using rule 81 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! POR             [ shift and go to state 61 ]
  ! DIVIDIDO        [ shift and go to state 62 ]
  ! MOD             [ shift and go to state 63 ]
  ! POT             [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 97

    (97) expresion -> CORA lista_expr . CORC
    (70) lista_expr -> lista_expr . COMA expresion

    CORC            shift and go to state 153
    COMA            shift and go to state 154


state 98

    (71) lista_expr -> expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    CORC            reduce using rule 71 (lista_expr -> expresion .)
    COMA            reduce using rule 71 (lista_expr -> expresion .)
    PARC            reduce using rule 71 (lista_expr -> expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 99

    (101) expresion -> LOG10 PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 155
    sent_llamada                   shift and go to state 77

state 100

    (102) expresion -> LOG PARA . expresion COMA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 156
    sent_llamada                   shift and go to state 77

state 101

    (103) expresion -> SENO PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 157
    sent_llamada                   shift and go to state 77

state 102

    (104) expresion -> COS PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 158
    sent_llamada                   shift and go to state 77

state 103

    (105) expresion -> TAN PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 159
    sent_llamada                   shift and go to state 77

state 104

    (106) expresion -> SQRT PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 160
    sent_llamada                   shift and go to state 77

state 105

    (107) expresion -> LOWERCASE PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 161
    sent_llamada                   shift and go to state 77

state 106

    (108) expresion -> UPPERCASE PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 162
    sent_llamada                   shift and go to state 77

state 107

    (109) expresion -> TRUNC PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 163
    sent_llamada                   shift and go to state 77

state 108

    (110) expresion -> FLOAT PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 164
    sent_llamada                   shift and go to state 77

state 109

    (111) expresion -> FSTRING PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 165
    sent_llamada                   shift and go to state 77

state 110

    (112) expresion -> TYPEOF PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 166
    sent_llamada                   shift and go to state 77

state 111

    (113) expresion -> PARSE PARA . tipo COMA expresion PARC
    (60) tipo -> . INT64
    (61) tipo -> . FLOAT64
    (62) tipo -> . STRING
    (63) tipo -> . NOTHING
    (64) tipo -> . BOOL
    (65) tipo -> . CHAR

    INT64           shift and go to state 168
    FLOAT64         shift and go to state 169
    STRING          shift and go to state 170
    NOTHING         shift and go to state 171
    BOOL            shift and go to state 172
    CHAR            shift and go to state 173

    tipo                           shift and go to state 167

state 112

    (114) expresion -> LENGTH PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 174
    sent_llamada                   shift and go to state 77

state 113

    (2) instrucciones -> instrucciones instruccion PYC .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    GLOBAL          reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    LOCAL           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    PUSH            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    POP             reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    CORA            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    LOG10           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    LOG             reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    SENO            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    COS             reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    TAN             reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    SQRT            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    LOWERCASE       reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    UPPERCASE       reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    TRUNC           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    FSTRING         reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    TYPEOF          reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    PARSE           reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    LENGTH          reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    END             reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)
    ELSEIF          reduce using rule 2 (instrucciones -> instrucciones instruccion PYC .)


state 114

    (72) expresion -> expresion MAS expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MAS             reduce using rule 72 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 72 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 72 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 72 (expresion -> expresion MAS expresion .)
    MENORQUE        reduce using rule 72 (expresion -> expresion MAS expresion .)
    MAYORQUE        reduce using rule 72 (expresion -> expresion MAS expresion .)
    DIFF            reduce using rule 72 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 72 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 72 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 72 (expresion -> expresion MAS expresion .)
    DOSPTS          reduce using rule 72 (expresion -> expresion MAS expresion .)
    PYC             reduce using rule 72 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 72 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 72 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 72 (expresion -> expresion MAS expresion .)
    GLOBAL          reduce using rule 72 (expresion -> expresion MAS expresion .)
    LOCAL           reduce using rule 72 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 72 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 72 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 72 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 72 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 72 (expresion -> expresion MAS expresion .)
    FUNCTION        reduce using rule 72 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 72 (expresion -> expresion MAS expresion .)
    PUSH            reduce using rule 72 (expresion -> expresion MAS expresion .)
    POP             reduce using rule 72 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 72 (expresion -> expresion MAS expresion .)
    PARA            reduce using rule 72 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 72 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 72 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 72 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 72 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 72 (expresion -> expresion MAS expresion .)
    CORA            reduce using rule 72 (expresion -> expresion MAS expresion .)
    LOG10           reduce using rule 72 (expresion -> expresion MAS expresion .)
    LOG             reduce using rule 72 (expresion -> expresion MAS expresion .)
    SENO            reduce using rule 72 (expresion -> expresion MAS expresion .)
    COS             reduce using rule 72 (expresion -> expresion MAS expresion .)
    TAN             reduce using rule 72 (expresion -> expresion MAS expresion .)
    SQRT            reduce using rule 72 (expresion -> expresion MAS expresion .)
    LOWERCASE       reduce using rule 72 (expresion -> expresion MAS expresion .)
    UPPERCASE       reduce using rule 72 (expresion -> expresion MAS expresion .)
    TRUNC           reduce using rule 72 (expresion -> expresion MAS expresion .)
    FLOAT           reduce using rule 72 (expresion -> expresion MAS expresion .)
    FSTRING         reduce using rule 72 (expresion -> expresion MAS expresion .)
    TYPEOF          reduce using rule 72 (expresion -> expresion MAS expresion .)
    PARSE           reduce using rule 72 (expresion -> expresion MAS expresion .)
    LENGTH          reduce using rule 72 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 72 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 72 (expresion -> expresion MAS expresion .)
    END             reduce using rule 72 (expresion -> expresion MAS expresion .)
    ELSE            reduce using rule 72 (expresion -> expresion MAS expresion .)
    ELSEIF          reduce using rule 72 (expresion -> expresion MAS expresion .)
    CORC            reduce using rule 72 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! POR             [ reduce using rule 72 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 72 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 72 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 72 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 115

    (73) expresion -> expresion MENOS expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MAS             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    DIFF            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 73 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 73 (expresion -> expresion MENOS expresion .)
    DOSPTS          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PYC             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 73 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 73 (expresion -> expresion MENOS expresion .)
    GLOBAL          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOCAL           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 73 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PUSH            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    POP             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PARA            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 73 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    CORA            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOG10           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOG             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    SENO            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    COS             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TAN             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOWERCASE       reduce using rule 73 (expresion -> expresion MENOS expresion .)
    UPPERCASE       reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TRUNC           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FSTRING         reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TYPEOF          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PARSE           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LENGTH          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    END             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    ELSE            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    ELSEIF          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    CORC            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! POR             [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 116

    (74) expresion -> expresion POR expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MAS             reduce using rule 74 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 74 (expresion -> expresion POR expresion .)
    POR             reduce using rule 74 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 74 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 74 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 74 (expresion -> expresion POR expresion .)
    MENORQUE        reduce using rule 74 (expresion -> expresion POR expresion .)
    MAYORQUE        reduce using rule 74 (expresion -> expresion POR expresion .)
    DIFF            reduce using rule 74 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 74 (expresion -> expresion POR expresion .)
    AND             reduce using rule 74 (expresion -> expresion POR expresion .)
    OR              reduce using rule 74 (expresion -> expresion POR expresion .)
    DOSPTS          reduce using rule 74 (expresion -> expresion POR expresion .)
    PYC             reduce using rule 74 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 74 (expresion -> expresion POR expresion .)
    PRINTLN         reduce using rule 74 (expresion -> expresion POR expresion .)
    ID              reduce using rule 74 (expresion -> expresion POR expresion .)
    GLOBAL          reduce using rule 74 (expresion -> expresion POR expresion .)
    LOCAL           reduce using rule 74 (expresion -> expresion POR expresion .)
    IF              reduce using rule 74 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 74 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 74 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 74 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 74 (expresion -> expresion POR expresion .)
    FUNCTION        reduce using rule 74 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 74 (expresion -> expresion POR expresion .)
    PUSH            reduce using rule 74 (expresion -> expresion POR expresion .)
    POP             reduce using rule 74 (expresion -> expresion POR expresion .)
    NOT             reduce using rule 74 (expresion -> expresion POR expresion .)
    PARA            reduce using rule 74 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 74 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 74 (expresion -> expresion POR expresion .)
    CADENA          reduce using rule 74 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 74 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 74 (expresion -> expresion POR expresion .)
    CORA            reduce using rule 74 (expresion -> expresion POR expresion .)
    LOG10           reduce using rule 74 (expresion -> expresion POR expresion .)
    LOG             reduce using rule 74 (expresion -> expresion POR expresion .)
    SENO            reduce using rule 74 (expresion -> expresion POR expresion .)
    COS             reduce using rule 74 (expresion -> expresion POR expresion .)
    TAN             reduce using rule 74 (expresion -> expresion POR expresion .)
    SQRT            reduce using rule 74 (expresion -> expresion POR expresion .)
    LOWERCASE       reduce using rule 74 (expresion -> expresion POR expresion .)
    UPPERCASE       reduce using rule 74 (expresion -> expresion POR expresion .)
    TRUNC           reduce using rule 74 (expresion -> expresion POR expresion .)
    FLOAT           reduce using rule 74 (expresion -> expresion POR expresion .)
    FSTRING         reduce using rule 74 (expresion -> expresion POR expresion .)
    TYPEOF          reduce using rule 74 (expresion -> expresion POR expresion .)
    PARSE           reduce using rule 74 (expresion -> expresion POR expresion .)
    LENGTH          reduce using rule 74 (expresion -> expresion POR expresion .)
    $end            reduce using rule 74 (expresion -> expresion POR expresion .)
    PARC            reduce using rule 74 (expresion -> expresion POR expresion .)
    END             reduce using rule 74 (expresion -> expresion POR expresion .)
    ELSE            reduce using rule 74 (expresion -> expresion POR expresion .)
    ELSEIF          reduce using rule 74 (expresion -> expresion POR expresion .)
    CORC            reduce using rule 74 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 74 (expresion -> expresion POR expresion .)
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MOD             [ reduce using rule 74 (expresion -> expresion POR expresion .) ]
  ! POT             [ reduce using rule 74 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! POR             [ shift and go to state 61 ]
  ! DIVIDIDO        [ shift and go to state 62 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 117

    (75) expresion -> expresion DIVIDIDO expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MAS             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    MENORQUE        reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    MAYORQUE        reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    DIFF            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    IGUALIGUAL      reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    DOSPTS          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    PYC             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    PRINT           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    PRINTLN         reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    GLOBAL          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    LOCAL           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    FUNCTION        reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    PUSH            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    POP             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    NOT             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    PARA            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    ENTERO          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    DECIMAL         reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    CADENA          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    TRUE            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    FALSE           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    CORA            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    LOG10           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    LOG             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    SENO            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    COS             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    TAN             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    SQRT            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    LOWERCASE       reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    UPPERCASE       reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    TRUNC           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    FLOAT           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    FSTRING         reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    TYPEOF          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    PARSE           reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    LENGTH          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    PARC            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    END             reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    ELSE            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    ELSEIF          reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    CORC            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .)
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MOD             [ reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .) ]
  ! POT             [ reduce using rule 75 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! POR             [ shift and go to state 61 ]
  ! DIVIDIDO        [ shift and go to state 62 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 118

    (76) expresion -> expresion MOD expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MAS             reduce using rule 76 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 76 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 76 (expresion -> expresion MOD expresion .)
    DIVIDIDO        reduce using rule 76 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 76 (expresion -> expresion MOD expresion .)
    POT             reduce using rule 76 (expresion -> expresion MOD expresion .)
    MENORIGUAL      reduce using rule 76 (expresion -> expresion MOD expresion .)
    MAYORIGUAL      reduce using rule 76 (expresion -> expresion MOD expresion .)
    MENORQUE        reduce using rule 76 (expresion -> expresion MOD expresion .)
    MAYORQUE        reduce using rule 76 (expresion -> expresion MOD expresion .)
    DIFF            reduce using rule 76 (expresion -> expresion MOD expresion .)
    IGUALIGUAL      reduce using rule 76 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 76 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 76 (expresion -> expresion MOD expresion .)
    DOSPTS          reduce using rule 76 (expresion -> expresion MOD expresion .)
    PYC             reduce using rule 76 (expresion -> expresion MOD expresion .)
    PRINT           reduce using rule 76 (expresion -> expresion MOD expresion .)
    PRINTLN         reduce using rule 76 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 76 (expresion -> expresion MOD expresion .)
    GLOBAL          reduce using rule 76 (expresion -> expresion MOD expresion .)
    LOCAL           reduce using rule 76 (expresion -> expresion MOD expresion .)
    IF              reduce using rule 76 (expresion -> expresion MOD expresion .)
    WHILE           reduce using rule 76 (expresion -> expresion MOD expresion .)
    FOR             reduce using rule 76 (expresion -> expresion MOD expresion .)
    BREAK           reduce using rule 76 (expresion -> expresion MOD expresion .)
    CONTINUE        reduce using rule 76 (expresion -> expresion MOD expresion .)
    FUNCTION        reduce using rule 76 (expresion -> expresion MOD expresion .)
    RETURN          reduce using rule 76 (expresion -> expresion MOD expresion .)
    PUSH            reduce using rule 76 (expresion -> expresion MOD expresion .)
    POP             reduce using rule 76 (expresion -> expresion MOD expresion .)
    NOT             reduce using rule 76 (expresion -> expresion MOD expresion .)
    PARA            reduce using rule 76 (expresion -> expresion MOD expresion .)
    ENTERO          reduce using rule 76 (expresion -> expresion MOD expresion .)
    DECIMAL         reduce using rule 76 (expresion -> expresion MOD expresion .)
    CADENA          reduce using rule 76 (expresion -> expresion MOD expresion .)
    TRUE            reduce using rule 76 (expresion -> expresion MOD expresion .)
    FALSE           reduce using rule 76 (expresion -> expresion MOD expresion .)
    CORA            reduce using rule 76 (expresion -> expresion MOD expresion .)
    LOG10           reduce using rule 76 (expresion -> expresion MOD expresion .)
    LOG             reduce using rule 76 (expresion -> expresion MOD expresion .)
    SENO            reduce using rule 76 (expresion -> expresion MOD expresion .)
    COS             reduce using rule 76 (expresion -> expresion MOD expresion .)
    TAN             reduce using rule 76 (expresion -> expresion MOD expresion .)
    SQRT            reduce using rule 76 (expresion -> expresion MOD expresion .)
    LOWERCASE       reduce using rule 76 (expresion -> expresion MOD expresion .)
    UPPERCASE       reduce using rule 76 (expresion -> expresion MOD expresion .)
    TRUNC           reduce using rule 76 (expresion -> expresion MOD expresion .)
    FLOAT           reduce using rule 76 (expresion -> expresion MOD expresion .)
    FSTRING         reduce using rule 76 (expresion -> expresion MOD expresion .)
    TYPEOF          reduce using rule 76 (expresion -> expresion MOD expresion .)
    PARSE           reduce using rule 76 (expresion -> expresion MOD expresion .)
    LENGTH          reduce using rule 76 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 76 (expresion -> expresion MOD expresion .)
    PARC            reduce using rule 76 (expresion -> expresion MOD expresion .)
    END             reduce using rule 76 (expresion -> expresion MOD expresion .)
    ELSE            reduce using rule 76 (expresion -> expresion MOD expresion .)
    ELSEIF          reduce using rule 76 (expresion -> expresion MOD expresion .)
    CORC            reduce using rule 76 (expresion -> expresion MOD expresion .)
    COMA            reduce using rule 76 (expresion -> expresion MOD expresion .)

  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! POR             [ shift and go to state 61 ]
  ! DIVIDIDO        [ shift and go to state 62 ]
  ! MOD             [ shift and go to state 63 ]
  ! POT             [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 119

    (77) expresion -> expresion POT expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MAS             reduce using rule 77 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 77 (expresion -> expresion POT expresion .)
    POR             reduce using rule 77 (expresion -> expresion POT expresion .)
    DIVIDIDO        reduce using rule 77 (expresion -> expresion POT expresion .)
    MOD             reduce using rule 77 (expresion -> expresion POT expresion .)
    POT             reduce using rule 77 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 77 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 77 (expresion -> expresion POT expresion .)
    MENORQUE        reduce using rule 77 (expresion -> expresion POT expresion .)
    MAYORQUE        reduce using rule 77 (expresion -> expresion POT expresion .)
    DIFF            reduce using rule 77 (expresion -> expresion POT expresion .)
    IGUALIGUAL      reduce using rule 77 (expresion -> expresion POT expresion .)
    AND             reduce using rule 77 (expresion -> expresion POT expresion .)
    OR              reduce using rule 77 (expresion -> expresion POT expresion .)
    DOSPTS          reduce using rule 77 (expresion -> expresion POT expresion .)
    PYC             reduce using rule 77 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 77 (expresion -> expresion POT expresion .)
    PRINTLN         reduce using rule 77 (expresion -> expresion POT expresion .)
    ID              reduce using rule 77 (expresion -> expresion POT expresion .)
    GLOBAL          reduce using rule 77 (expresion -> expresion POT expresion .)
    LOCAL           reduce using rule 77 (expresion -> expresion POT expresion .)
    IF              reduce using rule 77 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 77 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 77 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 77 (expresion -> expresion POT expresion .)
    CONTINUE        reduce using rule 77 (expresion -> expresion POT expresion .)
    FUNCTION        reduce using rule 77 (expresion -> expresion POT expresion .)
    RETURN          reduce using rule 77 (expresion -> expresion POT expresion .)
    PUSH            reduce using rule 77 (expresion -> expresion POT expresion .)
    POP             reduce using rule 77 (expresion -> expresion POT expresion .)
    NOT             reduce using rule 77 (expresion -> expresion POT expresion .)
    PARA            reduce using rule 77 (expresion -> expresion POT expresion .)
    ENTERO          reduce using rule 77 (expresion -> expresion POT expresion .)
    DECIMAL         reduce using rule 77 (expresion -> expresion POT expresion .)
    CADENA          reduce using rule 77 (expresion -> expresion POT expresion .)
    TRUE            reduce using rule 77 (expresion -> expresion POT expresion .)
    FALSE           reduce using rule 77 (expresion -> expresion POT expresion .)
    CORA            reduce using rule 77 (expresion -> expresion POT expresion .)
    LOG10           reduce using rule 77 (expresion -> expresion POT expresion .)
    LOG             reduce using rule 77 (expresion -> expresion POT expresion .)
    SENO            reduce using rule 77 (expresion -> expresion POT expresion .)
    COS             reduce using rule 77 (expresion -> expresion POT expresion .)
    TAN             reduce using rule 77 (expresion -> expresion POT expresion .)
    SQRT            reduce using rule 77 (expresion -> expresion POT expresion .)
    LOWERCASE       reduce using rule 77 (expresion -> expresion POT expresion .)
    UPPERCASE       reduce using rule 77 (expresion -> expresion POT expresion .)
    TRUNC           reduce using rule 77 (expresion -> expresion POT expresion .)
    FLOAT           reduce using rule 77 (expresion -> expresion POT expresion .)
    FSTRING         reduce using rule 77 (expresion -> expresion POT expresion .)
    TYPEOF          reduce using rule 77 (expresion -> expresion POT expresion .)
    PARSE           reduce using rule 77 (expresion -> expresion POT expresion .)
    LENGTH          reduce using rule 77 (expresion -> expresion POT expresion .)
    $end            reduce using rule 77 (expresion -> expresion POT expresion .)
    PARC            reduce using rule 77 (expresion -> expresion POT expresion .)
    END             reduce using rule 77 (expresion -> expresion POT expresion .)
    ELSE            reduce using rule 77 (expresion -> expresion POT expresion .)
    ELSEIF          reduce using rule 77 (expresion -> expresion POT expresion .)
    CORC            reduce using rule 77 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 77 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! POR             [ shift and go to state 61 ]
  ! DIVIDIDO        [ shift and go to state 62 ]
  ! MOD             [ shift and go to state 63 ]
  ! POT             [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 120

    (82) expresion -> expresion MENORIGUAL expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MENORIGUAL      reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MENORQUE        reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQUE        reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    DIFF            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    DOSPTS          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PYC             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PRINTLN         reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    GLOBAL          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    LOCAL           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    FUNCTION        reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PUSH            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    POP             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    NOT             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PARA            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    ENTERO          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    DECIMAL         reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    CADENA          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    TRUE            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    FALSE           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    CORA            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    LOG10           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    LOG             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    SENO            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    COS             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    TAN             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    SQRT            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    LOWERCASE       reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    UPPERCASE       reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    TRUNC           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    FLOAT           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    FSTRING         reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    TYPEOF          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PARSE           reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    LENGTH          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    PARC            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    END             reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    ELSE            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    ELSEIF          reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    CORC            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MAS             [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 82 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 121

    (83) expresion -> expresion MAYORIGUAL expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MENORIGUAL      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQUE        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQUE        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    DIFF            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALIGUAL      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPTS          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PYC             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PRINTLN         reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    GLOBAL          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    LOCAL           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    FUNCTION        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PUSH            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    POP             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    NOT             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PARA            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    ENTERO          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    DECIMAL         reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    CADENA          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    TRUE            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    FALSE           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    CORA            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    LOG10           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    LOG             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    SENO            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    COS             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    TAN             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    SQRT            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    LOWERCASE       reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    UPPERCASE       reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    TRUNC           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    FLOAT           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    FSTRING         reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    TYPEOF          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PARSE           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    LENGTH          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PARC            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    END             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    ELSE            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    ELSEIF          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    CORC            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MAS             [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MOD             [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 122

    (84) expresion -> expresion MENORQUE expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MENORIGUAL      reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    MENORQUE        reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    MAYORQUE        reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    DIFF            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    IGUALIGUAL      reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    AND             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    OR              reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    DOSPTS          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    PYC             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    PRINT           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    PRINTLN         reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    ID              reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    GLOBAL          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    LOCAL           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    IF              reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    FOR             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    FUNCTION        reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    PUSH            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    POP             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    NOT             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    PARA            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    ENTERO          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    DECIMAL         reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    CADENA          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    TRUE            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    FALSE           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    CORA            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    LOG10           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    LOG             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    SENO            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    COS             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    TAN             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    SQRT            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    LOWERCASE       reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    UPPERCASE       reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    TRUNC           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    FLOAT           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    FSTRING         reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    TYPEOF          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    PARSE           reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    LENGTH          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    $end            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    PARC            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    END             reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    ELSE            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    ELSEIF          reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    CORC            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    COMA            reduce using rule 84 (expresion -> expresion MENORQUE expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MAS             [ reduce using rule 84 (expresion -> expresion MENORQUE expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion MENORQUE expresion .) ]
  ! POR             [ reduce using rule 84 (expresion -> expresion MENORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion -> expresion MENORQUE expresion .) ]
  ! MOD             [ reduce using rule 84 (expresion -> expresion MENORQUE expresion .) ]
  ! POT             [ reduce using rule 84 (expresion -> expresion MENORQUE expresion .) ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 123

    (85) expresion -> expresion MAYORQUE expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MENORIGUAL      reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    MAYORIGUAL      reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    MENORQUE        reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    MAYORQUE        reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    DIFF            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    IGUALIGUAL      reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    AND             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    OR              reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    DOSPTS          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    PYC             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    PRINT           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    PRINTLN         reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    ID              reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    GLOBAL          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    LOCAL           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    IF              reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    WHILE           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    FOR             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    BREAK           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    CONTINUE        reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    FUNCTION        reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    RETURN          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    PUSH            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    POP             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    NOT             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    PARA            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    ENTERO          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    DECIMAL         reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    CADENA          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    TRUE            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    FALSE           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    CORA            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    LOG10           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    LOG             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    SENO            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    COS             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    TAN             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    SQRT            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    LOWERCASE       reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    UPPERCASE       reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    TRUNC           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    FLOAT           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    FSTRING         reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    TYPEOF          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    PARSE           reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    LENGTH          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    $end            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    PARC            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    END             reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    ELSE            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    ELSEIF          reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    CORC            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MAYORQUE expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MAS             [ reduce using rule 85 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion MAYORQUE expresion .) ]
  ! POR             [ reduce using rule 85 (expresion -> expresion MAYORQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 85 (expresion -> expresion MAYORQUE expresion .) ]
  ! MOD             [ reduce using rule 85 (expresion -> expresion MAYORQUE expresion .) ]
  ! POT             [ reduce using rule 85 (expresion -> expresion MAYORQUE expresion .) ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 124

    (86) expresion -> expresion DIFF expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MENORIGUAL      reduce using rule 86 (expresion -> expresion DIFF expresion .)
    MAYORIGUAL      reduce using rule 86 (expresion -> expresion DIFF expresion .)
    MENORQUE        reduce using rule 86 (expresion -> expresion DIFF expresion .)
    MAYORQUE        reduce using rule 86 (expresion -> expresion DIFF expresion .)
    DIFF            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    IGUALIGUAL      reduce using rule 86 (expresion -> expresion DIFF expresion .)
    AND             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    OR              reduce using rule 86 (expresion -> expresion DIFF expresion .)
    DOSPTS          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    PYC             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    PRINT           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    PRINTLN         reduce using rule 86 (expresion -> expresion DIFF expresion .)
    ID              reduce using rule 86 (expresion -> expresion DIFF expresion .)
    GLOBAL          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    LOCAL           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    IF              reduce using rule 86 (expresion -> expresion DIFF expresion .)
    WHILE           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    FOR             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    BREAK           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    CONTINUE        reduce using rule 86 (expresion -> expresion DIFF expresion .)
    FUNCTION        reduce using rule 86 (expresion -> expresion DIFF expresion .)
    RETURN          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    PUSH            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    POP             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    NOT             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    PARA            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    ENTERO          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    DECIMAL         reduce using rule 86 (expresion -> expresion DIFF expresion .)
    CADENA          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    TRUE            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    FALSE           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    CORA            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    LOG10           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    LOG             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    SENO            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    COS             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    TAN             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    SQRT            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    LOWERCASE       reduce using rule 86 (expresion -> expresion DIFF expresion .)
    UPPERCASE       reduce using rule 86 (expresion -> expresion DIFF expresion .)
    TRUNC           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    FLOAT           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    FSTRING         reduce using rule 86 (expresion -> expresion DIFF expresion .)
    TYPEOF          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    PARSE           reduce using rule 86 (expresion -> expresion DIFF expresion .)
    LENGTH          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    $end            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    PARC            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    END             reduce using rule 86 (expresion -> expresion DIFF expresion .)
    ELSE            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    ELSEIF          reduce using rule 86 (expresion -> expresion DIFF expresion .)
    CORC            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    COMA            reduce using rule 86 (expresion -> expresion DIFF expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MAS             [ reduce using rule 86 (expresion -> expresion DIFF expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion DIFF expresion .) ]
  ! POR             [ reduce using rule 86 (expresion -> expresion DIFF expresion .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expresion -> expresion DIFF expresion .) ]
  ! MOD             [ reduce using rule 86 (expresion -> expresion DIFF expresion .) ]
  ! POT             [ reduce using rule 86 (expresion -> expresion DIFF expresion .) ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 125

    (87) expresion -> expresion IGUALIGUAL expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    MENORIGUAL      reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    MENORQUE        reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    MAYORQUE        reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    DIFF            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    IGUALIGUAL      reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    DOSPTS          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    PYC             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    PRINT           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    PRINTLN         reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    ID              reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    GLOBAL          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    LOCAL           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    IF              reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    FOR             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    FUNCTION        reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    PUSH            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    POP             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    NOT             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    PARA            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    ENTERO          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    DECIMAL         reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    CADENA          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    TRUE            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    FALSE           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    CORA            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    LOG10           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    LOG             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    SENO            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    COS             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    TAN             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    SQRT            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    LOWERCASE       reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    UPPERCASE       reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    TRUNC           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    FLOAT           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    FSTRING         reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    TYPEOF          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    PARSE           reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    LENGTH          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    $end            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    PARC            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    END             reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    ELSE            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    ELSEIF          reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    CORC            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! MAS             [ reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POR             [ reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MOD             [ reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POT             [ reduce using rule 87 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 126

    (88) expresion -> expresion AND expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    AND             reduce using rule 88 (expresion -> expresion AND expresion .)
    OR              reduce using rule 88 (expresion -> expresion AND expresion .)
    DOSPTS          reduce using rule 88 (expresion -> expresion AND expresion .)
    PYC             reduce using rule 88 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 88 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 88 (expresion -> expresion AND expresion .)
    ID              reduce using rule 88 (expresion -> expresion AND expresion .)
    GLOBAL          reduce using rule 88 (expresion -> expresion AND expresion .)
    LOCAL           reduce using rule 88 (expresion -> expresion AND expresion .)
    IF              reduce using rule 88 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 88 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 88 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 88 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 88 (expresion -> expresion AND expresion .)
    FUNCTION        reduce using rule 88 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 88 (expresion -> expresion AND expresion .)
    PUSH            reduce using rule 88 (expresion -> expresion AND expresion .)
    POP             reduce using rule 88 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 88 (expresion -> expresion AND expresion .)
    PARA            reduce using rule 88 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 88 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 88 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 88 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 88 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 88 (expresion -> expresion AND expresion .)
    CORA            reduce using rule 88 (expresion -> expresion AND expresion .)
    LOG10           reduce using rule 88 (expresion -> expresion AND expresion .)
    LOG             reduce using rule 88 (expresion -> expresion AND expresion .)
    SENO            reduce using rule 88 (expresion -> expresion AND expresion .)
    COS             reduce using rule 88 (expresion -> expresion AND expresion .)
    TAN             reduce using rule 88 (expresion -> expresion AND expresion .)
    SQRT            reduce using rule 88 (expresion -> expresion AND expresion .)
    LOWERCASE       reduce using rule 88 (expresion -> expresion AND expresion .)
    UPPERCASE       reduce using rule 88 (expresion -> expresion AND expresion .)
    TRUNC           reduce using rule 88 (expresion -> expresion AND expresion .)
    FLOAT           reduce using rule 88 (expresion -> expresion AND expresion .)
    FSTRING         reduce using rule 88 (expresion -> expresion AND expresion .)
    TYPEOF          reduce using rule 88 (expresion -> expresion AND expresion .)
    PARSE           reduce using rule 88 (expresion -> expresion AND expresion .)
    LENGTH          reduce using rule 88 (expresion -> expresion AND expresion .)
    $end            reduce using rule 88 (expresion -> expresion AND expresion .)
    PARC            reduce using rule 88 (expresion -> expresion AND expresion .)
    END             reduce using rule 88 (expresion -> expresion AND expresion .)
    ELSE            reduce using rule 88 (expresion -> expresion AND expresion .)
    ELSEIF          reduce using rule 88 (expresion -> expresion AND expresion .)
    CORC            reduce using rule 88 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 88 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70

  ! MAS             [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MENORQUE        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MAYORQUE        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! DIFF            [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 127

    (89) expresion -> expresion OR expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    AND             reduce using rule 89 (expresion -> expresion OR expresion .)
    OR              reduce using rule 89 (expresion -> expresion OR expresion .)
    DOSPTS          reduce using rule 89 (expresion -> expresion OR expresion .)
    PYC             reduce using rule 89 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 89 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 89 (expresion -> expresion OR expresion .)
    ID              reduce using rule 89 (expresion -> expresion OR expresion .)
    GLOBAL          reduce using rule 89 (expresion -> expresion OR expresion .)
    LOCAL           reduce using rule 89 (expresion -> expresion OR expresion .)
    IF              reduce using rule 89 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 89 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 89 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 89 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 89 (expresion -> expresion OR expresion .)
    FUNCTION        reduce using rule 89 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 89 (expresion -> expresion OR expresion .)
    PUSH            reduce using rule 89 (expresion -> expresion OR expresion .)
    POP             reduce using rule 89 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 89 (expresion -> expresion OR expresion .)
    PARA            reduce using rule 89 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 89 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 89 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 89 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 89 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 89 (expresion -> expresion OR expresion .)
    CORA            reduce using rule 89 (expresion -> expresion OR expresion .)
    LOG10           reduce using rule 89 (expresion -> expresion OR expresion .)
    LOG             reduce using rule 89 (expresion -> expresion OR expresion .)
    SENO            reduce using rule 89 (expresion -> expresion OR expresion .)
    COS             reduce using rule 89 (expresion -> expresion OR expresion .)
    TAN             reduce using rule 89 (expresion -> expresion OR expresion .)
    SQRT            reduce using rule 89 (expresion -> expresion OR expresion .)
    LOWERCASE       reduce using rule 89 (expresion -> expresion OR expresion .)
    UPPERCASE       reduce using rule 89 (expresion -> expresion OR expresion .)
    TRUNC           reduce using rule 89 (expresion -> expresion OR expresion .)
    FLOAT           reduce using rule 89 (expresion -> expresion OR expresion .)
    FSTRING         reduce using rule 89 (expresion -> expresion OR expresion .)
    TYPEOF          reduce using rule 89 (expresion -> expresion OR expresion .)
    PARSE           reduce using rule 89 (expresion -> expresion OR expresion .)
    LENGTH          reduce using rule 89 (expresion -> expresion OR expresion .)
    $end            reduce using rule 89 (expresion -> expresion OR expresion .)
    PARC            reduce using rule 89 (expresion -> expresion OR expresion .)
    END             reduce using rule 89 (expresion -> expresion OR expresion .)
    ELSE            reduce using rule 89 (expresion -> expresion OR expresion .)
    ELSEIF          reduce using rule 89 (expresion -> expresion OR expresion .)
    CORC            reduce using rule 89 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 89 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70

  ! MAS             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENORQUE        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MAYORQUE        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! DIFF            [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 128

    (98) expresion -> expresion DOSPTS expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOSPTS resolved as shift
    PYC             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    PRINT           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    PRINTLN         reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    ID              reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    GLOBAL          reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    LOCAL           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    IF              reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    WHILE           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    FOR             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    BREAK           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    CONTINUE        reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    FUNCTION        reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    RETURN          reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    PUSH            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    POP             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    NOT             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    PARA            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    ENTERO          reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    DECIMAL         reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    CADENA          reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    TRUE            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    FALSE           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    CORA            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    LOG10           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    LOG             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    SENO            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    COS             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    TAN             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    SQRT            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    LOWERCASE       reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    UPPERCASE       reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    TRUNC           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    FLOAT           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    FSTRING         reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    TYPEOF          reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    PARSE           reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    LENGTH          reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    $end            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    PARC            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    END             reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    ELSE            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    ELSEIF          reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    CORC            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    COMA            reduce using rule 98 (expresion -> expresion DOSPTS expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73

  ! MAS             [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! POR             [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! MOD             [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! POT             [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! MENORQUE        [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! MAYORQUE        [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! DIFF            [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! AND             [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! OR              [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]
  ! DOSPTS          [ reduce using rule 98 (expresion -> expresion DOSPTS expresion .) ]


state 129

    (66) print -> PRINT PARA lista_expr . PARC
    (70) lista_expr -> lista_expr . COMA expresion

    PARC            shift and go to state 175
    COMA            shift and go to state 154


state 130

    (67) println -> PRINT PARA PARC .

    PYC             reduce using rule 67 (println -> PRINT PARA PARC .)
    PRINT           reduce using rule 67 (println -> PRINT PARA PARC .)
    PRINTLN         reduce using rule 67 (println -> PRINT PARA PARC .)
    ID              reduce using rule 67 (println -> PRINT PARA PARC .)
    GLOBAL          reduce using rule 67 (println -> PRINT PARA PARC .)
    LOCAL           reduce using rule 67 (println -> PRINT PARA PARC .)
    IF              reduce using rule 67 (println -> PRINT PARA PARC .)
    WHILE           reduce using rule 67 (println -> PRINT PARA PARC .)
    FOR             reduce using rule 67 (println -> PRINT PARA PARC .)
    BREAK           reduce using rule 67 (println -> PRINT PARA PARC .)
    CONTINUE        reduce using rule 67 (println -> PRINT PARA PARC .)
    FUNCTION        reduce using rule 67 (println -> PRINT PARA PARC .)
    RETURN          reduce using rule 67 (println -> PRINT PARA PARC .)
    PUSH            reduce using rule 67 (println -> PRINT PARA PARC .)
    POP             reduce using rule 67 (println -> PRINT PARA PARC .)
    MENOS           reduce using rule 67 (println -> PRINT PARA PARC .)
    NOT             reduce using rule 67 (println -> PRINT PARA PARC .)
    PARA            reduce using rule 67 (println -> PRINT PARA PARC .)
    ENTERO          reduce using rule 67 (println -> PRINT PARA PARC .)
    DECIMAL         reduce using rule 67 (println -> PRINT PARA PARC .)
    CADENA          reduce using rule 67 (println -> PRINT PARA PARC .)
    TRUE            reduce using rule 67 (println -> PRINT PARA PARC .)
    FALSE           reduce using rule 67 (println -> PRINT PARA PARC .)
    CORA            reduce using rule 67 (println -> PRINT PARA PARC .)
    LOG10           reduce using rule 67 (println -> PRINT PARA PARC .)
    LOG             reduce using rule 67 (println -> PRINT PARA PARC .)
    SENO            reduce using rule 67 (println -> PRINT PARA PARC .)
    COS             reduce using rule 67 (println -> PRINT PARA PARC .)
    TAN             reduce using rule 67 (println -> PRINT PARA PARC .)
    SQRT            reduce using rule 67 (println -> PRINT PARA PARC .)
    LOWERCASE       reduce using rule 67 (println -> PRINT PARA PARC .)
    UPPERCASE       reduce using rule 67 (println -> PRINT PARA PARC .)
    TRUNC           reduce using rule 67 (println -> PRINT PARA PARC .)
    FLOAT           reduce using rule 67 (println -> PRINT PARA PARC .)
    FSTRING         reduce using rule 67 (println -> PRINT PARA PARC .)
    TYPEOF          reduce using rule 67 (println -> PRINT PARA PARC .)
    PARSE           reduce using rule 67 (println -> PRINT PARA PARC .)
    LENGTH          reduce using rule 67 (println -> PRINT PARA PARC .)
    $end            reduce using rule 67 (println -> PRINT PARA PARC .)
    END             reduce using rule 67 (println -> PRINT PARA PARC .)
    ELSE            reduce using rule 67 (println -> PRINT PARA PARC .)
    ELSEIF          reduce using rule 67 (println -> PRINT PARA PARC .)


state 131

    (91) expresion -> PARA expresion PARC .

    MAS             reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 91 (expresion -> PARA expresion PARC .)
    POR             reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIVIDIDO        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MOD             reduce using rule 91 (expresion -> PARA expresion PARC .)
    POT             reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIFF            reduce using rule 91 (expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 91 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 91 (expresion -> PARA expresion PARC .)
    DOSPTS          reduce using rule 91 (expresion -> PARA expresion PARC .)
    PYC             reduce using rule 91 (expresion -> PARA expresion PARC .)
    PRINT           reduce using rule 91 (expresion -> PARA expresion PARC .)
    PRINTLN         reduce using rule 91 (expresion -> PARA expresion PARC .)
    ID              reduce using rule 91 (expresion -> PARA expresion PARC .)
    GLOBAL          reduce using rule 91 (expresion -> PARA expresion PARC .)
    LOCAL           reduce using rule 91 (expresion -> PARA expresion PARC .)
    IF              reduce using rule 91 (expresion -> PARA expresion PARC .)
    WHILE           reduce using rule 91 (expresion -> PARA expresion PARC .)
    FOR             reduce using rule 91 (expresion -> PARA expresion PARC .)
    BREAK           reduce using rule 91 (expresion -> PARA expresion PARC .)
    CONTINUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    FUNCTION        reduce using rule 91 (expresion -> PARA expresion PARC .)
    RETURN          reduce using rule 91 (expresion -> PARA expresion PARC .)
    PUSH            reduce using rule 91 (expresion -> PARA expresion PARC .)
    POP             reduce using rule 91 (expresion -> PARA expresion PARC .)
    NOT             reduce using rule 91 (expresion -> PARA expresion PARC .)
    PARA            reduce using rule 91 (expresion -> PARA expresion PARC .)
    ENTERO          reduce using rule 91 (expresion -> PARA expresion PARC .)
    DECIMAL         reduce using rule 91 (expresion -> PARA expresion PARC .)
    CADENA          reduce using rule 91 (expresion -> PARA expresion PARC .)
    TRUE            reduce using rule 91 (expresion -> PARA expresion PARC .)
    FALSE           reduce using rule 91 (expresion -> PARA expresion PARC .)
    CORA            reduce using rule 91 (expresion -> PARA expresion PARC .)
    LOG10           reduce using rule 91 (expresion -> PARA expresion PARC .)
    LOG             reduce using rule 91 (expresion -> PARA expresion PARC .)
    SENO            reduce using rule 91 (expresion -> PARA expresion PARC .)
    COS             reduce using rule 91 (expresion -> PARA expresion PARC .)
    TAN             reduce using rule 91 (expresion -> PARA expresion PARC .)
    SQRT            reduce using rule 91 (expresion -> PARA expresion PARC .)
    LOWERCASE       reduce using rule 91 (expresion -> PARA expresion PARC .)
    UPPERCASE       reduce using rule 91 (expresion -> PARA expresion PARC .)
    TRUNC           reduce using rule 91 (expresion -> PARA expresion PARC .)
    FLOAT           reduce using rule 91 (expresion -> PARA expresion PARC .)
    FSTRING         reduce using rule 91 (expresion -> PARA expresion PARC .)
    TYPEOF          reduce using rule 91 (expresion -> PARA expresion PARC .)
    PARSE           reduce using rule 91 (expresion -> PARA expresion PARC .)
    LENGTH          reduce using rule 91 (expresion -> PARA expresion PARC .)
    $end            reduce using rule 91 (expresion -> PARA expresion PARC .)
    PARC            reduce using rule 91 (expresion -> PARA expresion PARC .)
    END             reduce using rule 91 (expresion -> PARA expresion PARC .)
    ELSE            reduce using rule 91 (expresion -> PARA expresion PARC .)
    ELSEIF          reduce using rule 91 (expresion -> PARA expresion PARC .)
    CORC            reduce using rule 91 (expresion -> PARA expresion PARC .)
    COMA            reduce using rule 91 (expresion -> PARA expresion PARC .)


state 132

    (78) expresion -> ID list_vector .
    (79) list_vector -> list_vector . CORA expresion CORC

  ! shift/reduce conflict for CORA resolved as shift
    PARC            reduce using rule 78 (expresion -> ID list_vector .)
    MAS             reduce using rule 78 (expresion -> ID list_vector .)
    MENOS           reduce using rule 78 (expresion -> ID list_vector .)
    POR             reduce using rule 78 (expresion -> ID list_vector .)
    DIVIDIDO        reduce using rule 78 (expresion -> ID list_vector .)
    MOD             reduce using rule 78 (expresion -> ID list_vector .)
    POT             reduce using rule 78 (expresion -> ID list_vector .)
    MENORIGUAL      reduce using rule 78 (expresion -> ID list_vector .)
    MAYORIGUAL      reduce using rule 78 (expresion -> ID list_vector .)
    MENORQUE        reduce using rule 78 (expresion -> ID list_vector .)
    MAYORQUE        reduce using rule 78 (expresion -> ID list_vector .)
    DIFF            reduce using rule 78 (expresion -> ID list_vector .)
    IGUALIGUAL      reduce using rule 78 (expresion -> ID list_vector .)
    AND             reduce using rule 78 (expresion -> ID list_vector .)
    OR              reduce using rule 78 (expresion -> ID list_vector .)
    DOSPTS          reduce using rule 78 (expresion -> ID list_vector .)
    PRINT           reduce using rule 78 (expresion -> ID list_vector .)
    PRINTLN         reduce using rule 78 (expresion -> ID list_vector .)
    ID              reduce using rule 78 (expresion -> ID list_vector .)
    GLOBAL          reduce using rule 78 (expresion -> ID list_vector .)
    LOCAL           reduce using rule 78 (expresion -> ID list_vector .)
    IF              reduce using rule 78 (expresion -> ID list_vector .)
    WHILE           reduce using rule 78 (expresion -> ID list_vector .)
    FOR             reduce using rule 78 (expresion -> ID list_vector .)
    BREAK           reduce using rule 78 (expresion -> ID list_vector .)
    CONTINUE        reduce using rule 78 (expresion -> ID list_vector .)
    FUNCTION        reduce using rule 78 (expresion -> ID list_vector .)
    RETURN          reduce using rule 78 (expresion -> ID list_vector .)
    PUSH            reduce using rule 78 (expresion -> ID list_vector .)
    POP             reduce using rule 78 (expresion -> ID list_vector .)
    NOT             reduce using rule 78 (expresion -> ID list_vector .)
    PARA            reduce using rule 78 (expresion -> ID list_vector .)
    ENTERO          reduce using rule 78 (expresion -> ID list_vector .)
    DECIMAL         reduce using rule 78 (expresion -> ID list_vector .)
    CADENA          reduce using rule 78 (expresion -> ID list_vector .)
    TRUE            reduce using rule 78 (expresion -> ID list_vector .)
    FALSE           reduce using rule 78 (expresion -> ID list_vector .)
    LOG10           reduce using rule 78 (expresion -> ID list_vector .)
    LOG             reduce using rule 78 (expresion -> ID list_vector .)
    SENO            reduce using rule 78 (expresion -> ID list_vector .)
    COS             reduce using rule 78 (expresion -> ID list_vector .)
    TAN             reduce using rule 78 (expresion -> ID list_vector .)
    SQRT            reduce using rule 78 (expresion -> ID list_vector .)
    LOWERCASE       reduce using rule 78 (expresion -> ID list_vector .)
    UPPERCASE       reduce using rule 78 (expresion -> ID list_vector .)
    TRUNC           reduce using rule 78 (expresion -> ID list_vector .)
    FLOAT           reduce using rule 78 (expresion -> ID list_vector .)
    FSTRING         reduce using rule 78 (expresion -> ID list_vector .)
    TYPEOF          reduce using rule 78 (expresion -> ID list_vector .)
    PARSE           reduce using rule 78 (expresion -> ID list_vector .)
    LENGTH          reduce using rule 78 (expresion -> ID list_vector .)
    PYC             reduce using rule 78 (expresion -> ID list_vector .)
    $end            reduce using rule 78 (expresion -> ID list_vector .)
    END             reduce using rule 78 (expresion -> ID list_vector .)
    ELSE            reduce using rule 78 (expresion -> ID list_vector .)
    ELSEIF          reduce using rule 78 (expresion -> ID list_vector .)
    CORC            reduce using rule 78 (expresion -> ID list_vector .)
    COMA            reduce using rule 78 (expresion -> ID list_vector .)
    CORA            shift and go to state 138

  ! CORA            [ reduce using rule 78 (expresion -> ID list_vector .) ]


state 133

    (115) expresion -> POP NOT . PARA expresion PARC

    PARA            shift and go to state 176


state 134

    (68) println -> PRINTLN PARA PARC .

    PYC             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    PRINT           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    PRINTLN         reduce using rule 68 (println -> PRINTLN PARA PARC .)
    ID              reduce using rule 68 (println -> PRINTLN PARA PARC .)
    GLOBAL          reduce using rule 68 (println -> PRINTLN PARA PARC .)
    LOCAL           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    IF              reduce using rule 68 (println -> PRINTLN PARA PARC .)
    WHILE           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    FOR             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    BREAK           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    CONTINUE        reduce using rule 68 (println -> PRINTLN PARA PARC .)
    FUNCTION        reduce using rule 68 (println -> PRINTLN PARA PARC .)
    RETURN          reduce using rule 68 (println -> PRINTLN PARA PARC .)
    PUSH            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    POP             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    MENOS           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    NOT             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    PARA            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    ENTERO          reduce using rule 68 (println -> PRINTLN PARA PARC .)
    DECIMAL         reduce using rule 68 (println -> PRINTLN PARA PARC .)
    CADENA          reduce using rule 68 (println -> PRINTLN PARA PARC .)
    TRUE            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    FALSE           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    CORA            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    LOG10           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    LOG             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    SENO            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    COS             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    TAN             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    SQRT            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    LOWERCASE       reduce using rule 68 (println -> PRINTLN PARA PARC .)
    UPPERCASE       reduce using rule 68 (println -> PRINTLN PARA PARC .)
    TRUNC           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    FLOAT           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    FSTRING         reduce using rule 68 (println -> PRINTLN PARA PARC .)
    TYPEOF          reduce using rule 68 (println -> PRINTLN PARA PARC .)
    PARSE           reduce using rule 68 (println -> PRINTLN PARA PARC .)
    LENGTH          reduce using rule 68 (println -> PRINTLN PARA PARC .)
    $end            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    END             reduce using rule 68 (println -> PRINTLN PARA PARC .)
    ELSE            reduce using rule 68 (println -> PRINTLN PARA PARC .)
    ELSEIF          reduce using rule 68 (println -> PRINTLN PARA PARC .)


state 135

    (69) println -> PRINTLN PARA lista_expr . PARC
    (70) lista_expr -> lista_expr . COMA expresion

    PARC            shift and go to state 177
    COMA            shift and go to state 154


state 136

    (54) asignacion -> ID IGUAL expresion . DOSPTS DOSPTS tipo
    (57) asignacion -> ID IGUAL expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! shift/reduce conflict for MENOS resolved as shift
    DOSPTS          shift and go to state 178
    PYC             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    PRINT           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    PRINTLN         reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    GLOBAL          reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    LOCAL           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    FUNCTION        reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    PUSH            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    POP             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    NOT             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    PARA            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    ENTERO          reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    DECIMAL         reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    CADENA          reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    TRUE            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    FALSE           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    CORA            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    LOG10           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    LOG             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    SENO            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    COS             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    TAN             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    SQRT            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    LOWERCASE       reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    UPPERCASE       reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    TRUNC           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    FLOAT           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    FSTRING         reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    TYPEOF          reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    PARSE           reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    LENGTH          reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    END             reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    ELSE            reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    ELSEIF          reduce using rule 57 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72

  ! MENOS           [ reduce using rule 57 (asignacion -> ID IGUAL expresion .) ]


state 137

    (36) asignacion_vect -> ID list_vector IGUAL . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 179
    sent_llamada                   shift and go to state 77

state 138

    (79) list_vector -> list_vector CORA . expresion CORC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 180
    sent_llamada                   shift and go to state 77

state 139

    (26) sent_llamada -> ID PARA PARC .

    PYC             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    PRINT           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    PRINTLN         reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    ID              reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    GLOBAL          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    LOCAL           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    IF              reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    WHILE           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    FOR             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    BREAK           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    CONTINUE        reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    FUNCTION        reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    RETURN          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    PUSH            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    POP             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    MENOS           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    NOT             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    PARA            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    ENTERO          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    DECIMAL         reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    CADENA          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    TRUE            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    FALSE           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    CORA            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    LOG10           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    LOG             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    SENO            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    COS             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    TAN             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    SQRT            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    LOWERCASE       reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    UPPERCASE       reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    TRUNC           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    FLOAT           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    FSTRING         reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    TYPEOF          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    PARSE           reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    LENGTH          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    $end            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    MAS             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    POR             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    DIVIDIDO        reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    MOD             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    POT             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    MENORIGUAL      reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    MAYORIGUAL      reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    MENORQUE        reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    MAYORQUE        reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    DIFF            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    IGUALIGUAL      reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    AND             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    OR              reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    DOSPTS          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    PARC            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    END             reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    ELSE            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    ELSEIF          reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    CORC            reduce using rule 26 (sent_llamada -> ID PARA PARC .)
    COMA            reduce using rule 26 (sent_llamada -> ID PARA PARC .)


state 140

    (27) sent_llamada -> ID PARA lista_expr . PARC
    (70) lista_expr -> lista_expr . COMA expresion

    PARC            shift and go to state 181
    COMA            shift and go to state 154


state 141

    (80) list_vector -> CORA expresion . CORC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    CORC            shift and go to state 182
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 142

    (55) asignacion -> GLOBAL ID IGUAL . expresion DOSPTS DOSPTS tipo
    (58) asignacion -> GLOBAL ID IGUAL . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 183
    sent_llamada                   shift and go to state 77

state 143

    (56) asignacion -> LOCAL ID IGUAL . expresion DOSPTS DOSPTS tipo
    (59) asignacion -> LOCAL ID IGUAL . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 184
    sent_llamada                   shift and go to state 77

state 144

    (42) sent_if -> IF expresion instrucciones . END
    (44) sent_if -> IF expresion instrucciones . ELSE instrucciones END
    (46) sent_if -> IF expresion instrucciones . else_if
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (48) else_if -> . ELSEIF expresion instrucciones END
    (49) else_if -> . ELSEIF PARA expresion PARC instrucciones END
    (50) else_if -> . ELSEIF expresion instrucciones else_if
    (51) else_if -> . ELSEIF PARA expresion PARC instrucciones else_if
    (52) else_if -> . ELSEIF expresion instrucciones ELSE instrucciones END
    (53) else_if -> . ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 185
    ELSE            shift and go to state 186
    ELSEIF          shift and go to state 188
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    else_if                        shift and go to state 187
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 145

    (73) expresion -> expresion MENOS . expresion
    (81) expresion -> MENOS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 189
    sent_llamada                   shift and go to state 77

state 146

    (43) sent_if -> IF PARA expresion . PARC instrucciones END
    (45) sent_if -> IF PARA expresion . PARC instrucciones ELSE instrucciones END
    (47) sent_if -> IF PARA expresion . PARC instrucciones else_if
    (91) expresion -> PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 190
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 147

    (40) sent_while -> WHILE expresion instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 191
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 148

    (41) sent_while -> WHILE PARA expresion . PARC instrucciones END
    (91) expresion -> PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 192
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 149

    (39) sent_for -> FOR ID IN . expresion instrucciones END
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 193
    sent_llamada                   shift and go to state 77

state 150

    (28) sent_function -> FUNCTION ID PARA . parametros PARC instrucciones END
    (29) sent_function -> FUNCTION ID PARA . PARC instrucciones END
    (30) parametros -> . parametros COMA ID
    (31) parametros -> . parametros COMA ID DOSPTS DOSPTS tipo
    (32) parametros -> . ID
    (33) parametros -> . ID DOSPTS DOSPTS tipo

    PARC            shift and go to state 196
    ID              shift and go to state 194

    parametros                     shift and go to state 195

state 151

    (23) sent_push -> PUSH NOT PARA . expresion COMA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 197
    sent_llamada                   shift and go to state 77

state 152

    (22) sent_pop -> POP NOT PARA . expresion PARC
    (115) expresion -> POP NOT PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 198
    sent_llamada                   shift and go to state 77

state 153

    (97) expresion -> CORA lista_expr CORC .

    MAS             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    MENOS           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    POR             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    DIVIDIDO        reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    MOD             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    POT             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    MENORIGUAL      reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    MAYORIGUAL      reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    MENORQUE        reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    MAYORQUE        reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    DIFF            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    IGUALIGUAL      reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    AND             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    OR              reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    DOSPTS          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    PYC             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    PRINT           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    PRINTLN         reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    ID              reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    GLOBAL          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    LOCAL           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    IF              reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    WHILE           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    FOR             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    BREAK           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    CONTINUE        reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    FUNCTION        reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    RETURN          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    PUSH            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    POP             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    NOT             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    PARA            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    ENTERO          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    DECIMAL         reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    CADENA          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    TRUE            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    FALSE           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    CORA            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    LOG10           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    LOG             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    SENO            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    COS             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    TAN             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    SQRT            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    LOWERCASE       reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    UPPERCASE       reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    TRUNC           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    FLOAT           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    FSTRING         reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    TYPEOF          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    PARSE           reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    LENGTH          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    $end            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    PARC            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    END             reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    ELSE            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    ELSEIF          reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    CORC            reduce using rule 97 (expresion -> CORA lista_expr CORC .)
    COMA            reduce using rule 97 (expresion -> CORA lista_expr CORC .)


state 154

    (70) lista_expr -> lista_expr COMA . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 199
    sent_llamada                   shift and go to state 77

state 155

    (101) expresion -> LOG10 PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 200
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 156

    (102) expresion -> LOG PARA expresion . COMA expresion PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    COMA            shift and go to state 201
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 157

    (103) expresion -> SENO PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 202
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 158

    (104) expresion -> COS PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 203
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 159

    (105) expresion -> TAN PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 204
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 160

    (106) expresion -> SQRT PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 205
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 161

    (107) expresion -> LOWERCASE PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 206
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 162

    (108) expresion -> UPPERCASE PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 207
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 163

    (109) expresion -> TRUNC PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 208
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 164

    (110) expresion -> FLOAT PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 209
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 165

    (111) expresion -> FSTRING PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 210
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 166

    (112) expresion -> TYPEOF PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 211
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 167

    (113) expresion -> PARSE PARA tipo . COMA expresion PARC

    COMA            shift and go to state 212


state 168

    (60) tipo -> INT64 .

    COMA            reduce using rule 60 (tipo -> INT64 .)
    PYC             reduce using rule 60 (tipo -> INT64 .)
    PRINT           reduce using rule 60 (tipo -> INT64 .)
    PRINTLN         reduce using rule 60 (tipo -> INT64 .)
    ID              reduce using rule 60 (tipo -> INT64 .)
    GLOBAL          reduce using rule 60 (tipo -> INT64 .)
    LOCAL           reduce using rule 60 (tipo -> INT64 .)
    IF              reduce using rule 60 (tipo -> INT64 .)
    WHILE           reduce using rule 60 (tipo -> INT64 .)
    FOR             reduce using rule 60 (tipo -> INT64 .)
    BREAK           reduce using rule 60 (tipo -> INT64 .)
    CONTINUE        reduce using rule 60 (tipo -> INT64 .)
    FUNCTION        reduce using rule 60 (tipo -> INT64 .)
    RETURN          reduce using rule 60 (tipo -> INT64 .)
    PUSH            reduce using rule 60 (tipo -> INT64 .)
    POP             reduce using rule 60 (tipo -> INT64 .)
    MENOS           reduce using rule 60 (tipo -> INT64 .)
    NOT             reduce using rule 60 (tipo -> INT64 .)
    PARA            reduce using rule 60 (tipo -> INT64 .)
    ENTERO          reduce using rule 60 (tipo -> INT64 .)
    DECIMAL         reduce using rule 60 (tipo -> INT64 .)
    CADENA          reduce using rule 60 (tipo -> INT64 .)
    TRUE            reduce using rule 60 (tipo -> INT64 .)
    FALSE           reduce using rule 60 (tipo -> INT64 .)
    CORA            reduce using rule 60 (tipo -> INT64 .)
    LOG10           reduce using rule 60 (tipo -> INT64 .)
    LOG             reduce using rule 60 (tipo -> INT64 .)
    SENO            reduce using rule 60 (tipo -> INT64 .)
    COS             reduce using rule 60 (tipo -> INT64 .)
    TAN             reduce using rule 60 (tipo -> INT64 .)
    SQRT            reduce using rule 60 (tipo -> INT64 .)
    LOWERCASE       reduce using rule 60 (tipo -> INT64 .)
    UPPERCASE       reduce using rule 60 (tipo -> INT64 .)
    TRUNC           reduce using rule 60 (tipo -> INT64 .)
    FLOAT           reduce using rule 60 (tipo -> INT64 .)
    FSTRING         reduce using rule 60 (tipo -> INT64 .)
    TYPEOF          reduce using rule 60 (tipo -> INT64 .)
    PARSE           reduce using rule 60 (tipo -> INT64 .)
    LENGTH          reduce using rule 60 (tipo -> INT64 .)
    $end            reduce using rule 60 (tipo -> INT64 .)
    END             reduce using rule 60 (tipo -> INT64 .)
    ELSE            reduce using rule 60 (tipo -> INT64 .)
    ELSEIF          reduce using rule 60 (tipo -> INT64 .)
    PARC            reduce using rule 60 (tipo -> INT64 .)


state 169

    (61) tipo -> FLOAT64 .

    COMA            reduce using rule 61 (tipo -> FLOAT64 .)
    PYC             reduce using rule 61 (tipo -> FLOAT64 .)
    PRINT           reduce using rule 61 (tipo -> FLOAT64 .)
    PRINTLN         reduce using rule 61 (tipo -> FLOAT64 .)
    ID              reduce using rule 61 (tipo -> FLOAT64 .)
    GLOBAL          reduce using rule 61 (tipo -> FLOAT64 .)
    LOCAL           reduce using rule 61 (tipo -> FLOAT64 .)
    IF              reduce using rule 61 (tipo -> FLOAT64 .)
    WHILE           reduce using rule 61 (tipo -> FLOAT64 .)
    FOR             reduce using rule 61 (tipo -> FLOAT64 .)
    BREAK           reduce using rule 61 (tipo -> FLOAT64 .)
    CONTINUE        reduce using rule 61 (tipo -> FLOAT64 .)
    FUNCTION        reduce using rule 61 (tipo -> FLOAT64 .)
    RETURN          reduce using rule 61 (tipo -> FLOAT64 .)
    PUSH            reduce using rule 61 (tipo -> FLOAT64 .)
    POP             reduce using rule 61 (tipo -> FLOAT64 .)
    MENOS           reduce using rule 61 (tipo -> FLOAT64 .)
    NOT             reduce using rule 61 (tipo -> FLOAT64 .)
    PARA            reduce using rule 61 (tipo -> FLOAT64 .)
    ENTERO          reduce using rule 61 (tipo -> FLOAT64 .)
    DECIMAL         reduce using rule 61 (tipo -> FLOAT64 .)
    CADENA          reduce using rule 61 (tipo -> FLOAT64 .)
    TRUE            reduce using rule 61 (tipo -> FLOAT64 .)
    FALSE           reduce using rule 61 (tipo -> FLOAT64 .)
    CORA            reduce using rule 61 (tipo -> FLOAT64 .)
    LOG10           reduce using rule 61 (tipo -> FLOAT64 .)
    LOG             reduce using rule 61 (tipo -> FLOAT64 .)
    SENO            reduce using rule 61 (tipo -> FLOAT64 .)
    COS             reduce using rule 61 (tipo -> FLOAT64 .)
    TAN             reduce using rule 61 (tipo -> FLOAT64 .)
    SQRT            reduce using rule 61 (tipo -> FLOAT64 .)
    LOWERCASE       reduce using rule 61 (tipo -> FLOAT64 .)
    UPPERCASE       reduce using rule 61 (tipo -> FLOAT64 .)
    TRUNC           reduce using rule 61 (tipo -> FLOAT64 .)
    FLOAT           reduce using rule 61 (tipo -> FLOAT64 .)
    FSTRING         reduce using rule 61 (tipo -> FLOAT64 .)
    TYPEOF          reduce using rule 61 (tipo -> FLOAT64 .)
    PARSE           reduce using rule 61 (tipo -> FLOAT64 .)
    LENGTH          reduce using rule 61 (tipo -> FLOAT64 .)
    $end            reduce using rule 61 (tipo -> FLOAT64 .)
    END             reduce using rule 61 (tipo -> FLOAT64 .)
    ELSE            reduce using rule 61 (tipo -> FLOAT64 .)
    ELSEIF          reduce using rule 61 (tipo -> FLOAT64 .)
    PARC            reduce using rule 61 (tipo -> FLOAT64 .)


state 170

    (62) tipo -> STRING .

    COMA            reduce using rule 62 (tipo -> STRING .)
    PYC             reduce using rule 62 (tipo -> STRING .)
    PRINT           reduce using rule 62 (tipo -> STRING .)
    PRINTLN         reduce using rule 62 (tipo -> STRING .)
    ID              reduce using rule 62 (tipo -> STRING .)
    GLOBAL          reduce using rule 62 (tipo -> STRING .)
    LOCAL           reduce using rule 62 (tipo -> STRING .)
    IF              reduce using rule 62 (tipo -> STRING .)
    WHILE           reduce using rule 62 (tipo -> STRING .)
    FOR             reduce using rule 62 (tipo -> STRING .)
    BREAK           reduce using rule 62 (tipo -> STRING .)
    CONTINUE        reduce using rule 62 (tipo -> STRING .)
    FUNCTION        reduce using rule 62 (tipo -> STRING .)
    RETURN          reduce using rule 62 (tipo -> STRING .)
    PUSH            reduce using rule 62 (tipo -> STRING .)
    POP             reduce using rule 62 (tipo -> STRING .)
    MENOS           reduce using rule 62 (tipo -> STRING .)
    NOT             reduce using rule 62 (tipo -> STRING .)
    PARA            reduce using rule 62 (tipo -> STRING .)
    ENTERO          reduce using rule 62 (tipo -> STRING .)
    DECIMAL         reduce using rule 62 (tipo -> STRING .)
    CADENA          reduce using rule 62 (tipo -> STRING .)
    TRUE            reduce using rule 62 (tipo -> STRING .)
    FALSE           reduce using rule 62 (tipo -> STRING .)
    CORA            reduce using rule 62 (tipo -> STRING .)
    LOG10           reduce using rule 62 (tipo -> STRING .)
    LOG             reduce using rule 62 (tipo -> STRING .)
    SENO            reduce using rule 62 (tipo -> STRING .)
    COS             reduce using rule 62 (tipo -> STRING .)
    TAN             reduce using rule 62 (tipo -> STRING .)
    SQRT            reduce using rule 62 (tipo -> STRING .)
    LOWERCASE       reduce using rule 62 (tipo -> STRING .)
    UPPERCASE       reduce using rule 62 (tipo -> STRING .)
    TRUNC           reduce using rule 62 (tipo -> STRING .)
    FLOAT           reduce using rule 62 (tipo -> STRING .)
    FSTRING         reduce using rule 62 (tipo -> STRING .)
    TYPEOF          reduce using rule 62 (tipo -> STRING .)
    PARSE           reduce using rule 62 (tipo -> STRING .)
    LENGTH          reduce using rule 62 (tipo -> STRING .)
    $end            reduce using rule 62 (tipo -> STRING .)
    END             reduce using rule 62 (tipo -> STRING .)
    ELSE            reduce using rule 62 (tipo -> STRING .)
    ELSEIF          reduce using rule 62 (tipo -> STRING .)
    PARC            reduce using rule 62 (tipo -> STRING .)


state 171

    (63) tipo -> NOTHING .

    COMA            reduce using rule 63 (tipo -> NOTHING .)
    PYC             reduce using rule 63 (tipo -> NOTHING .)
    PRINT           reduce using rule 63 (tipo -> NOTHING .)
    PRINTLN         reduce using rule 63 (tipo -> NOTHING .)
    ID              reduce using rule 63 (tipo -> NOTHING .)
    GLOBAL          reduce using rule 63 (tipo -> NOTHING .)
    LOCAL           reduce using rule 63 (tipo -> NOTHING .)
    IF              reduce using rule 63 (tipo -> NOTHING .)
    WHILE           reduce using rule 63 (tipo -> NOTHING .)
    FOR             reduce using rule 63 (tipo -> NOTHING .)
    BREAK           reduce using rule 63 (tipo -> NOTHING .)
    CONTINUE        reduce using rule 63 (tipo -> NOTHING .)
    FUNCTION        reduce using rule 63 (tipo -> NOTHING .)
    RETURN          reduce using rule 63 (tipo -> NOTHING .)
    PUSH            reduce using rule 63 (tipo -> NOTHING .)
    POP             reduce using rule 63 (tipo -> NOTHING .)
    MENOS           reduce using rule 63 (tipo -> NOTHING .)
    NOT             reduce using rule 63 (tipo -> NOTHING .)
    PARA            reduce using rule 63 (tipo -> NOTHING .)
    ENTERO          reduce using rule 63 (tipo -> NOTHING .)
    DECIMAL         reduce using rule 63 (tipo -> NOTHING .)
    CADENA          reduce using rule 63 (tipo -> NOTHING .)
    TRUE            reduce using rule 63 (tipo -> NOTHING .)
    FALSE           reduce using rule 63 (tipo -> NOTHING .)
    CORA            reduce using rule 63 (tipo -> NOTHING .)
    LOG10           reduce using rule 63 (tipo -> NOTHING .)
    LOG             reduce using rule 63 (tipo -> NOTHING .)
    SENO            reduce using rule 63 (tipo -> NOTHING .)
    COS             reduce using rule 63 (tipo -> NOTHING .)
    TAN             reduce using rule 63 (tipo -> NOTHING .)
    SQRT            reduce using rule 63 (tipo -> NOTHING .)
    LOWERCASE       reduce using rule 63 (tipo -> NOTHING .)
    UPPERCASE       reduce using rule 63 (tipo -> NOTHING .)
    TRUNC           reduce using rule 63 (tipo -> NOTHING .)
    FLOAT           reduce using rule 63 (tipo -> NOTHING .)
    FSTRING         reduce using rule 63 (tipo -> NOTHING .)
    TYPEOF          reduce using rule 63 (tipo -> NOTHING .)
    PARSE           reduce using rule 63 (tipo -> NOTHING .)
    LENGTH          reduce using rule 63 (tipo -> NOTHING .)
    $end            reduce using rule 63 (tipo -> NOTHING .)
    END             reduce using rule 63 (tipo -> NOTHING .)
    ELSE            reduce using rule 63 (tipo -> NOTHING .)
    ELSEIF          reduce using rule 63 (tipo -> NOTHING .)
    PARC            reduce using rule 63 (tipo -> NOTHING .)


state 172

    (64) tipo -> BOOL .

    COMA            reduce using rule 64 (tipo -> BOOL .)
    PYC             reduce using rule 64 (tipo -> BOOL .)
    PRINT           reduce using rule 64 (tipo -> BOOL .)
    PRINTLN         reduce using rule 64 (tipo -> BOOL .)
    ID              reduce using rule 64 (tipo -> BOOL .)
    GLOBAL          reduce using rule 64 (tipo -> BOOL .)
    LOCAL           reduce using rule 64 (tipo -> BOOL .)
    IF              reduce using rule 64 (tipo -> BOOL .)
    WHILE           reduce using rule 64 (tipo -> BOOL .)
    FOR             reduce using rule 64 (tipo -> BOOL .)
    BREAK           reduce using rule 64 (tipo -> BOOL .)
    CONTINUE        reduce using rule 64 (tipo -> BOOL .)
    FUNCTION        reduce using rule 64 (tipo -> BOOL .)
    RETURN          reduce using rule 64 (tipo -> BOOL .)
    PUSH            reduce using rule 64 (tipo -> BOOL .)
    POP             reduce using rule 64 (tipo -> BOOL .)
    MENOS           reduce using rule 64 (tipo -> BOOL .)
    NOT             reduce using rule 64 (tipo -> BOOL .)
    PARA            reduce using rule 64 (tipo -> BOOL .)
    ENTERO          reduce using rule 64 (tipo -> BOOL .)
    DECIMAL         reduce using rule 64 (tipo -> BOOL .)
    CADENA          reduce using rule 64 (tipo -> BOOL .)
    TRUE            reduce using rule 64 (tipo -> BOOL .)
    FALSE           reduce using rule 64 (tipo -> BOOL .)
    CORA            reduce using rule 64 (tipo -> BOOL .)
    LOG10           reduce using rule 64 (tipo -> BOOL .)
    LOG             reduce using rule 64 (tipo -> BOOL .)
    SENO            reduce using rule 64 (tipo -> BOOL .)
    COS             reduce using rule 64 (tipo -> BOOL .)
    TAN             reduce using rule 64 (tipo -> BOOL .)
    SQRT            reduce using rule 64 (tipo -> BOOL .)
    LOWERCASE       reduce using rule 64 (tipo -> BOOL .)
    UPPERCASE       reduce using rule 64 (tipo -> BOOL .)
    TRUNC           reduce using rule 64 (tipo -> BOOL .)
    FLOAT           reduce using rule 64 (tipo -> BOOL .)
    FSTRING         reduce using rule 64 (tipo -> BOOL .)
    TYPEOF          reduce using rule 64 (tipo -> BOOL .)
    PARSE           reduce using rule 64 (tipo -> BOOL .)
    LENGTH          reduce using rule 64 (tipo -> BOOL .)
    $end            reduce using rule 64 (tipo -> BOOL .)
    END             reduce using rule 64 (tipo -> BOOL .)
    ELSE            reduce using rule 64 (tipo -> BOOL .)
    ELSEIF          reduce using rule 64 (tipo -> BOOL .)
    PARC            reduce using rule 64 (tipo -> BOOL .)


state 173

    (65) tipo -> CHAR .

    COMA            reduce using rule 65 (tipo -> CHAR .)
    PYC             reduce using rule 65 (tipo -> CHAR .)
    PRINT           reduce using rule 65 (tipo -> CHAR .)
    PRINTLN         reduce using rule 65 (tipo -> CHAR .)
    ID              reduce using rule 65 (tipo -> CHAR .)
    GLOBAL          reduce using rule 65 (tipo -> CHAR .)
    LOCAL           reduce using rule 65 (tipo -> CHAR .)
    IF              reduce using rule 65 (tipo -> CHAR .)
    WHILE           reduce using rule 65 (tipo -> CHAR .)
    FOR             reduce using rule 65 (tipo -> CHAR .)
    BREAK           reduce using rule 65 (tipo -> CHAR .)
    CONTINUE        reduce using rule 65 (tipo -> CHAR .)
    FUNCTION        reduce using rule 65 (tipo -> CHAR .)
    RETURN          reduce using rule 65 (tipo -> CHAR .)
    PUSH            reduce using rule 65 (tipo -> CHAR .)
    POP             reduce using rule 65 (tipo -> CHAR .)
    MENOS           reduce using rule 65 (tipo -> CHAR .)
    NOT             reduce using rule 65 (tipo -> CHAR .)
    PARA            reduce using rule 65 (tipo -> CHAR .)
    ENTERO          reduce using rule 65 (tipo -> CHAR .)
    DECIMAL         reduce using rule 65 (tipo -> CHAR .)
    CADENA          reduce using rule 65 (tipo -> CHAR .)
    TRUE            reduce using rule 65 (tipo -> CHAR .)
    FALSE           reduce using rule 65 (tipo -> CHAR .)
    CORA            reduce using rule 65 (tipo -> CHAR .)
    LOG10           reduce using rule 65 (tipo -> CHAR .)
    LOG             reduce using rule 65 (tipo -> CHAR .)
    SENO            reduce using rule 65 (tipo -> CHAR .)
    COS             reduce using rule 65 (tipo -> CHAR .)
    TAN             reduce using rule 65 (tipo -> CHAR .)
    SQRT            reduce using rule 65 (tipo -> CHAR .)
    LOWERCASE       reduce using rule 65 (tipo -> CHAR .)
    UPPERCASE       reduce using rule 65 (tipo -> CHAR .)
    TRUNC           reduce using rule 65 (tipo -> CHAR .)
    FLOAT           reduce using rule 65 (tipo -> CHAR .)
    FSTRING         reduce using rule 65 (tipo -> CHAR .)
    TYPEOF          reduce using rule 65 (tipo -> CHAR .)
    PARSE           reduce using rule 65 (tipo -> CHAR .)
    LENGTH          reduce using rule 65 (tipo -> CHAR .)
    $end            reduce using rule 65 (tipo -> CHAR .)
    END             reduce using rule 65 (tipo -> CHAR .)
    ELSE            reduce using rule 65 (tipo -> CHAR .)
    ELSEIF          reduce using rule 65 (tipo -> CHAR .)
    PARC            reduce using rule 65 (tipo -> CHAR .)


state 174

    (114) expresion -> LENGTH PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 213
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 175

    (66) print -> PRINT PARA lista_expr PARC .

    PYC             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    PRINT           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    PRINTLN         reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    ID              reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    GLOBAL          reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    LOCAL           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    IF              reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    WHILE           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    FOR             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    BREAK           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    CONTINUE        reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    FUNCTION        reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    RETURN          reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    PUSH            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    POP             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    MENOS           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    NOT             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    PARA            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    ENTERO          reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    DECIMAL         reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    CADENA          reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    TRUE            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    FALSE           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    CORA            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    LOG10           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    LOG             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    SENO            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    COS             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    TAN             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    SQRT            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    LOWERCASE       reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    UPPERCASE       reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    TRUNC           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    FLOAT           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    FSTRING         reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    TYPEOF          reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    PARSE           reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    LENGTH          reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    $end            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    END             reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    ELSE            reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)
    ELSEIF          reduce using rule 66 (print -> PRINT PARA lista_expr PARC .)


state 176

    (115) expresion -> POP NOT PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 214
    sent_llamada                   shift and go to state 77

state 177

    (69) println -> PRINTLN PARA lista_expr PARC .

    PYC             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    PRINT           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    PRINTLN         reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    ID              reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    GLOBAL          reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    LOCAL           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    IF              reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    WHILE           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    FOR             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    BREAK           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    CONTINUE        reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    FUNCTION        reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    RETURN          reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    PUSH            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    POP             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    MENOS           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    NOT             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    PARA            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    ENTERO          reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    DECIMAL         reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    CADENA          reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    TRUE            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    FALSE           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    CORA            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    LOG10           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    LOG             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    SENO            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    COS             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    TAN             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    SQRT            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    LOWERCASE       reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    UPPERCASE       reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    TRUNC           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    FLOAT           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    FSTRING         reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    TYPEOF          reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    PARSE           reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    LENGTH          reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    $end            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    END             reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    ELSE            reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)
    ELSEIF          reduce using rule 69 (println -> PRINTLN PARA lista_expr PARC .)


state 178

    (54) asignacion -> ID IGUAL expresion DOSPTS . DOSPTS tipo
    (98) expresion -> expresion DOSPTS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    DOSPTS          shift and go to state 215
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 128
    sent_llamada                   shift and go to state 77

state 179

    (36) asignacion_vect -> ID list_vector IGUAL expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! shift/reduce conflict for MENOS resolved as shift
    PYC             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    PRINT           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    PRINTLN         reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    ID              reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    GLOBAL          reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    LOCAL           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    IF              reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    WHILE           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    FOR             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    BREAK           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    CONTINUE        reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    FUNCTION        reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    RETURN          reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    PUSH            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    POP             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    NOT             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    PARA            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    ENTERO          reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    DECIMAL         reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    CADENA          reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    TRUE            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    FALSE           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    CORA            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    LOG10           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    LOG             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    SENO            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    COS             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    TAN             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    SQRT            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    LOWERCASE       reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    UPPERCASE       reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    TRUNC           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    FLOAT           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    FSTRING         reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    TYPEOF          reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    PARSE           reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    LENGTH          reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    $end            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    END             reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    ELSE            reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    ELSEIF          reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73

  ! MENOS           [ reduce using rule 36 (asignacion_vect -> ID list_vector IGUAL expresion .) ]


state 180

    (79) list_vector -> list_vector CORA expresion . CORC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    CORC            shift and go to state 216
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 181

    (27) sent_llamada -> ID PARA lista_expr PARC .

    PYC             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    PRINT           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    PRINTLN         reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    ID              reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    GLOBAL          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    LOCAL           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    IF              reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    WHILE           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    FOR             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    BREAK           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    CONTINUE        reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    FUNCTION        reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    RETURN          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    PUSH            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    POP             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    MENOS           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    NOT             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    PARA            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    ENTERO          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    DECIMAL         reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    CADENA          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    TRUE            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    FALSE           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    CORA            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    LOG10           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    LOG             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    SENO            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    COS             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    TAN             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    SQRT            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    LOWERCASE       reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    UPPERCASE       reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    TRUNC           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    FLOAT           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    FSTRING         reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    TYPEOF          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    PARSE           reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    LENGTH          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    $end            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    MAS             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    POR             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    DIVIDIDO        reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    MOD             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    POT             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    MENORIGUAL      reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    MAYORIGUAL      reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    MENORQUE        reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    MAYORQUE        reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    DIFF            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    IGUALIGUAL      reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    AND             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    OR              reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    DOSPTS          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    PARC            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    END             reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    ELSE            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    ELSEIF          reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    CORC            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)
    COMA            reduce using rule 27 (sent_llamada -> ID PARA lista_expr PARC .)


state 182

    (80) list_vector -> CORA expresion CORC .

    IGUAL           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    CORA            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    MAS             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    MENOS           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    POR             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    DIVIDIDO        reduce using rule 80 (list_vector -> CORA expresion CORC .)
    MOD             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    POT             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    MENORIGUAL      reduce using rule 80 (list_vector -> CORA expresion CORC .)
    MAYORIGUAL      reduce using rule 80 (list_vector -> CORA expresion CORC .)
    MENORQUE        reduce using rule 80 (list_vector -> CORA expresion CORC .)
    MAYORQUE        reduce using rule 80 (list_vector -> CORA expresion CORC .)
    DIFF            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    IGUALIGUAL      reduce using rule 80 (list_vector -> CORA expresion CORC .)
    AND             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    OR              reduce using rule 80 (list_vector -> CORA expresion CORC .)
    DOSPTS          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    PYC             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    PRINT           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    PRINTLN         reduce using rule 80 (list_vector -> CORA expresion CORC .)
    ID              reduce using rule 80 (list_vector -> CORA expresion CORC .)
    GLOBAL          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    LOCAL           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    IF              reduce using rule 80 (list_vector -> CORA expresion CORC .)
    WHILE           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    FOR             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    BREAK           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    CONTINUE        reduce using rule 80 (list_vector -> CORA expresion CORC .)
    FUNCTION        reduce using rule 80 (list_vector -> CORA expresion CORC .)
    RETURN          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    PUSH            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    POP             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    NOT             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    PARA            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    ENTERO          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    DECIMAL         reduce using rule 80 (list_vector -> CORA expresion CORC .)
    CADENA          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    TRUE            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    FALSE           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    LOG10           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    LOG             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    SENO            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    COS             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    TAN             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    SQRT            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    LOWERCASE       reduce using rule 80 (list_vector -> CORA expresion CORC .)
    UPPERCASE       reduce using rule 80 (list_vector -> CORA expresion CORC .)
    TRUNC           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    FLOAT           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    FSTRING         reduce using rule 80 (list_vector -> CORA expresion CORC .)
    TYPEOF          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    PARSE           reduce using rule 80 (list_vector -> CORA expresion CORC .)
    LENGTH          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    $end            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    END             reduce using rule 80 (list_vector -> CORA expresion CORC .)
    ELSE            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    ELSEIF          reduce using rule 80 (list_vector -> CORA expresion CORC .)
    PARC            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    CORC            reduce using rule 80 (list_vector -> CORA expresion CORC .)
    COMA            reduce using rule 80 (list_vector -> CORA expresion CORC .)


state 183

    (55) asignacion -> GLOBAL ID IGUAL expresion . DOSPTS DOSPTS tipo
    (58) asignacion -> GLOBAL ID IGUAL expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! shift/reduce conflict for MENOS resolved as shift
    DOSPTS          shift and go to state 217
    PYC             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    PRINT           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    PRINTLN         reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    ID              reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    GLOBAL          reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    LOCAL           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    IF              reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    WHILE           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    FOR             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    BREAK           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    CONTINUE        reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    FUNCTION        reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    RETURN          reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    PUSH            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    POP             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    NOT             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    PARA            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    ENTERO          reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    DECIMAL         reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    CADENA          reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    TRUE            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    FALSE           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    CORA            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    LOG10           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    LOG             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    SENO            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    COS             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    TAN             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    SQRT            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    LOWERCASE       reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    UPPERCASE       reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    TRUNC           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    FLOAT           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    FSTRING         reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    TYPEOF          reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    PARSE           reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    LENGTH          reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    $end            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    END             reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    ELSE            reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    ELSEIF          reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72

  ! MENOS           [ reduce using rule 58 (asignacion -> GLOBAL ID IGUAL expresion .) ]


state 184

    (56) asignacion -> LOCAL ID IGUAL expresion . DOSPTS DOSPTS tipo
    (59) asignacion -> LOCAL ID IGUAL expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! shift/reduce conflict for MENOS resolved as shift
    DOSPTS          shift and go to state 218
    PYC             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    PRINT           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    PRINTLN         reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    ID              reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    GLOBAL          reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    LOCAL           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    IF              reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    WHILE           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    FOR             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    BREAK           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    CONTINUE        reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    FUNCTION        reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    RETURN          reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    PUSH            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    POP             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    NOT             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    PARA            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    ENTERO          reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    DECIMAL         reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    CADENA          reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    TRUE            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    FALSE           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    CORA            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    LOG10           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    LOG             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    SENO            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    COS             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    TAN             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    SQRT            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    LOWERCASE       reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    UPPERCASE       reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    TRUNC           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    FLOAT           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    FSTRING         reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    TYPEOF          reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    PARSE           reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    LENGTH          reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    $end            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    END             reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    ELSE            reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    ELSEIF          reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72

  ! MENOS           [ reduce using rule 59 (asignacion -> LOCAL ID IGUAL expresion .) ]


state 185

    (42) sent_if -> IF expresion instrucciones END .

    PYC             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    PRINT           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    PRINTLN         reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    ID              reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    GLOBAL          reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    LOCAL           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    IF              reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    WHILE           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    FOR             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    BREAK           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    CONTINUE        reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    FUNCTION        reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    RETURN          reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    PUSH            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    POP             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    MENOS           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    NOT             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    PARA            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    ENTERO          reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    DECIMAL         reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    CADENA          reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    TRUE            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    FALSE           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    CORA            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    LOG10           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    LOG             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    SENO            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    COS             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    TAN             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    SQRT            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    LOWERCASE       reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    UPPERCASE       reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    TRUNC           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    FLOAT           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    FSTRING         reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    TYPEOF          reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    PARSE           reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    LENGTH          reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    $end            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    END             reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    ELSE            reduce using rule 42 (sent_if -> IF expresion instrucciones END .)
    ELSEIF          reduce using rule 42 (sent_if -> IF expresion instrucciones END .)


state 186

    (44) sent_if -> IF expresion instrucciones ELSE . instrucciones END
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 219
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 187

    (46) sent_if -> IF expresion instrucciones else_if .

    PYC             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    PRINT           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    PRINTLN         reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    ID              reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    GLOBAL          reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    LOCAL           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    IF              reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    WHILE           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    FOR             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    BREAK           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    CONTINUE        reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    FUNCTION        reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    RETURN          reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    PUSH            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    POP             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    MENOS           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    NOT             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    PARA            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    ENTERO          reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    DECIMAL         reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    CADENA          reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    TRUE            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    FALSE           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    CORA            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    LOG10           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    LOG             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    SENO            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    COS             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    TAN             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    SQRT            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    LOWERCASE       reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    UPPERCASE       reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    TRUNC           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    FLOAT           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    FSTRING         reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    TYPEOF          reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    PARSE           reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    LENGTH          reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    $end            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    END             reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    ELSE            reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)
    ELSEIF          reduce using rule 46 (sent_if -> IF expresion instrucciones else_if .)


state 188

    (48) else_if -> ELSEIF . expresion instrucciones END
    (49) else_if -> ELSEIF . PARA expresion PARC instrucciones END
    (50) else_if -> ELSEIF . expresion instrucciones else_if
    (51) else_if -> ELSEIF . PARA expresion PARC instrucciones else_if
    (52) else_if -> ELSEIF . expresion instrucciones ELSE instrucciones END
    (53) else_if -> ELSEIF . PARA expresion PARC instrucciones ELSE instrucciones END
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    PARA            shift and go to state 221
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 220
    sent_llamada                   shift and go to state 77

state 189

    (73) expresion -> expresion MENOS expresion .
    (81) expresion -> MENOS expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

  ! reduce/reduce conflict for MAS resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for POR resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MOD resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for POT resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYORQUE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIFF resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for IGUALIGUAL resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for OR resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DOSPTS resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PRINT resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for ID resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for GLOBAL resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for LOCAL resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for IF resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for WHILE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for FOR resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for BREAK resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PUSH resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for POP resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for NOT resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PARA resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CADENA resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for TRUE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for FALSE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CORA resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for LOG10 resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for LOG resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for SENO resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for COS resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for TAN resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for SQRT resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for LOWERCASE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for UPPERCASE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for TRUNC resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for FLOAT resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for FSTRING resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PARSE resolved using rule 73 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for LENGTH resolved using rule 73 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MENORQUE        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    MAYORQUE        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    DIFF            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 73 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 73 (expresion -> expresion MENOS expresion .)
    DOSPTS          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 73 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 73 (expresion -> expresion MENOS expresion .)
    GLOBAL          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOCAL           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 73 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 73 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PUSH            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    POP             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PARA            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 73 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    CORA            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOG10           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOG             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    SENO            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    COS             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TAN             reduce using rule 73 (expresion -> expresion MENOS expresion .)
    SQRT            reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LOWERCASE       reduce using rule 73 (expresion -> expresion MENOS expresion .)
    UPPERCASE       reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TRUNC           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FLOAT           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    FSTRING         reduce using rule 73 (expresion -> expresion MENOS expresion .)
    TYPEOF          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PARSE           reduce using rule 73 (expresion -> expresion MENOS expresion .)
    LENGTH          reduce using rule 73 (expresion -> expresion MENOS expresion .)
    PYC             reduce using rule 81 (expresion -> MENOS expresion .)
    END             reduce using rule 81 (expresion -> MENOS expresion .)
    ELSE            reduce using rule 81 (expresion -> MENOS expresion .)
    ELSEIF          reduce using rule 81 (expresion -> MENOS expresion .)
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64

  ! POR             [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 73 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! POR             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! MOD             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! POT             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! MENORQUE        [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! MAYORQUE        [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! DIFF            [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! AND             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! OR              [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! DOSPTS          [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! PRINT           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! PRINTLN         [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! ID              [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! GLOBAL          [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! LOCAL           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! IF              [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! WHILE           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! FOR             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! BREAK           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! CONTINUE        [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! FUNCTION        [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! RETURN          [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! PUSH            [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! POP             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! NOT             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! PARA            [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! ENTERO          [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! DECIMAL         [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! CADENA          [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! TRUE            [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! FALSE           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! CORA            [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! LOG10           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! LOG             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! SENO            [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! COS             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! TAN             [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! SQRT            [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! LOWERCASE       [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! UPPERCASE       [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! TRUNC           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! FLOAT           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! FSTRING         [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! TYPEOF          [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! PARSE           [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! LENGTH          [ reduce using rule 81 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 59 ]
  ! MENOS           [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORQUE        [ shift and go to state 67 ]
  ! MAYORQUE        [ shift and go to state 68 ]
  ! DIFF            [ shift and go to state 69 ]
  ! IGUALIGUAL      [ shift and go to state 70 ]
  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]
  ! DOSPTS          [ shift and go to state 73 ]


state 190

    (43) sent_if -> IF PARA expresion PARC . instrucciones END
    (45) sent_if -> IF PARA expresion PARC . instrucciones ELSE instrucciones END
    (47) sent_if -> IF PARA expresion PARC . instrucciones else_if
    (91) expresion -> PARA expresion PARC .
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for LOCAL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CORA resolved as shift
  ! shift/reduce conflict for LOG10 resolved as shift
  ! shift/reduce conflict for LOG resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COS resolved as shift
  ! shift/reduce conflict for TAN resolved as shift
  ! shift/reduce conflict for SQRT resolved as shift
  ! shift/reduce conflict for LOWERCASE resolved as shift
  ! shift/reduce conflict for UPPERCASE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for FSTRING resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
    MAS             reduce using rule 91 (expresion -> PARA expresion PARC .)
    POR             reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIVIDIDO        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MOD             reduce using rule 91 (expresion -> PARA expresion PARC .)
    POT             reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIFF            reduce using rule 91 (expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 91 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 91 (expresion -> PARA expresion PARC .)
    DOSPTS          reduce using rule 91 (expresion -> PARA expresion PARC .)
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

  ! MENOS           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PRINT           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PRINTLN         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! ID              [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! GLOBAL          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOCAL           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! IF              [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! WHILE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FOR             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! BREAK           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CONTINUE        [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FUNCTION        [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! RETURN          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PUSH            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! POP             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! NOT             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PARA            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! ENTERO          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! DECIMAL         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CADENA          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TRUE            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FALSE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CORA            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOG10           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOG             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! SENO            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! COS             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TAN             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! SQRT            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOWERCASE       [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! UPPERCASE       [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TRUNC           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FLOAT           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FSTRING         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TYPEOF          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PARSE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LENGTH          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 222
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 191

    (40) sent_while -> WHILE expresion instrucciones END .

    PYC             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    PRINT           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    PRINTLN         reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    ID              reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    GLOBAL          reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    LOCAL           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    IF              reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    WHILE           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    FOR             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    BREAK           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    CONTINUE        reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    FUNCTION        reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    RETURN          reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    PUSH            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    POP             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    MENOS           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    NOT             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    PARA            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    ENTERO          reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    DECIMAL         reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    CADENA          reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    TRUE            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    FALSE           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    CORA            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    LOG10           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    LOG             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    SENO            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    COS             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    TAN             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    SQRT            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    LOWERCASE       reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    UPPERCASE       reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    TRUNC           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    FLOAT           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    FSTRING         reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    TYPEOF          reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    PARSE           reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    LENGTH          reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    $end            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    END             reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    ELSE            reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)
    ELSEIF          reduce using rule 40 (sent_while -> WHILE expresion instrucciones END .)


state 192

    (41) sent_while -> WHILE PARA expresion PARC . instrucciones END
    (91) expresion -> PARA expresion PARC .
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for LOCAL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CORA resolved as shift
  ! shift/reduce conflict for LOG10 resolved as shift
  ! shift/reduce conflict for LOG resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COS resolved as shift
  ! shift/reduce conflict for TAN resolved as shift
  ! shift/reduce conflict for SQRT resolved as shift
  ! shift/reduce conflict for LOWERCASE resolved as shift
  ! shift/reduce conflict for UPPERCASE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for FSTRING resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
    MAS             reduce using rule 91 (expresion -> PARA expresion PARC .)
    POR             reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIVIDIDO        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MOD             reduce using rule 91 (expresion -> PARA expresion PARC .)
    POT             reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIFF            reduce using rule 91 (expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 91 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 91 (expresion -> PARA expresion PARC .)
    DOSPTS          reduce using rule 91 (expresion -> PARA expresion PARC .)
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

  ! MENOS           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PRINT           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PRINTLN         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! ID              [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! GLOBAL          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOCAL           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! IF              [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! WHILE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FOR             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! BREAK           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CONTINUE        [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FUNCTION        [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! RETURN          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PUSH            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! POP             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! NOT             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PARA            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! ENTERO          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! DECIMAL         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CADENA          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TRUE            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FALSE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CORA            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOG10           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOG             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! SENO            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! COS             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TAN             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! SQRT            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOWERCASE       [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! UPPERCASE       [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TRUNC           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FLOAT           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FSTRING         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TYPEOF          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PARSE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LENGTH          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 223
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 193

    (39) sent_for -> FOR ID IN expresion . instrucciones END
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    MAS             shift and go to state 59
    MENOS           shift and go to state 145
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 224
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 194

    (32) parametros -> ID .
    (33) parametros -> ID . DOSPTS DOSPTS tipo

    PARC            reduce using rule 32 (parametros -> ID .)
    COMA            reduce using rule 32 (parametros -> ID .)
    DOSPTS          shift and go to state 225


state 195

    (28) sent_function -> FUNCTION ID PARA parametros . PARC instrucciones END
    (30) parametros -> parametros . COMA ID
    (31) parametros -> parametros . COMA ID DOSPTS DOSPTS tipo

    PARC            shift and go to state 226
    COMA            shift and go to state 227


state 196

    (29) sent_function -> FUNCTION ID PARA PARC . instrucciones END
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    instrucciones                  shift and go to state 228
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18
    expresion                      shift and go to state 19

state 197

    (23) sent_push -> PUSH NOT PARA expresion . COMA expresion PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    COMA            shift and go to state 229
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 198

    (22) sent_pop -> POP NOT PARA expresion . PARC
    (115) expresion -> POP NOT PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 230
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 199

    (70) lista_expr -> lista_expr COMA expresion .
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    CORC            reduce using rule 70 (lista_expr -> lista_expr COMA expresion .)
    COMA            reduce using rule 70 (lista_expr -> lista_expr COMA expresion .)
    PARC            reduce using rule 70 (lista_expr -> lista_expr COMA expresion .)
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 200

    (101) expresion -> LOG10 PARA expresion PARC .

    MAS             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    MENOS           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    POR             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    DIVIDIDO        reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    MOD             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    POT             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    MENORIGUAL      reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    MENORQUE        reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    MAYORQUE        reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    DIFF            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    AND             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    OR              reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    DOSPTS          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    PYC             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    PRINT           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    PRINTLN         reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    ID              reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    GLOBAL          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    LOCAL           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    IF              reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    WHILE           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    FOR             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    BREAK           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    CONTINUE        reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    FUNCTION        reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    RETURN          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    PUSH            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    POP             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    NOT             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    PARA            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    ENTERO          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    DECIMAL         reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    CADENA          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    TRUE            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    FALSE           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    CORA            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    LOG10           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    LOG             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    SENO            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    COS             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    TAN             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    SQRT            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    LOWERCASE       reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    UPPERCASE       reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    TRUNC           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    FLOAT           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    FSTRING         reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    TYPEOF          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    PARSE           reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    LENGTH          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    $end            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    PARC            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    END             reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    ELSE            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    ELSEIF          reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    CORC            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)
    COMA            reduce using rule 101 (expresion -> LOG10 PARA expresion PARC .)


state 201

    (102) expresion -> LOG PARA expresion COMA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 231
    sent_llamada                   shift and go to state 77

state 202

    (103) expresion -> SENO PARA expresion PARC .

    MAS             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    MENOS           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    POR             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    DIVIDIDO        reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    MOD             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    POT             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    MENORIGUAL      reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    MENORQUE        reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    MAYORQUE        reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    DIFF            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    AND             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    OR              reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    DOSPTS          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    PYC             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    PRINT           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    PRINTLN         reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    ID              reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    GLOBAL          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    LOCAL           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    IF              reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    WHILE           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    FOR             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    BREAK           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    CONTINUE        reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    FUNCTION        reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    RETURN          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    PUSH            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    POP             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    NOT             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    PARA            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    ENTERO          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    DECIMAL         reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    CADENA          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    TRUE            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    FALSE           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    CORA            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    LOG10           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    LOG             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    SENO            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    COS             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    TAN             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    SQRT            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    LOWERCASE       reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    UPPERCASE       reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    TRUNC           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    FLOAT           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    FSTRING         reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    TYPEOF          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    PARSE           reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    LENGTH          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    $end            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    PARC            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    END             reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    ELSE            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    ELSEIF          reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    CORC            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)
    COMA            reduce using rule 103 (expresion -> SENO PARA expresion PARC .)


state 203

    (104) expresion -> COS PARA expresion PARC .

    MAS             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    MENOS           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    POR             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    DIVIDIDO        reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    MOD             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    POT             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    MENORIGUAL      reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    MENORQUE        reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    MAYORQUE        reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    DIFF            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    AND             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    OR              reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    DOSPTS          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    PYC             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    PRINT           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    PRINTLN         reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    ID              reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    GLOBAL          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    LOCAL           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    IF              reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    WHILE           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    FOR             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    BREAK           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    CONTINUE        reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    FUNCTION        reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    RETURN          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    PUSH            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    POP             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    NOT             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    PARA            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    ENTERO          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    DECIMAL         reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    CADENA          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    TRUE            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    FALSE           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    CORA            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    LOG10           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    LOG             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    SENO            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    COS             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    TAN             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    SQRT            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    LOWERCASE       reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    UPPERCASE       reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    TRUNC           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    FLOAT           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    FSTRING         reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    TYPEOF          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    PARSE           reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    LENGTH          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    $end            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    PARC            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    END             reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    ELSE            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    ELSEIF          reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    CORC            reduce using rule 104 (expresion -> COS PARA expresion PARC .)
    COMA            reduce using rule 104 (expresion -> COS PARA expresion PARC .)


state 204

    (105) expresion -> TAN PARA expresion PARC .

    MAS             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    MENOS           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    POR             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    DIVIDIDO        reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    MOD             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    POT             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    MENORIGUAL      reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    MENORQUE        reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    MAYORQUE        reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    DIFF            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    AND             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    OR              reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    DOSPTS          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    PYC             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    PRINT           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    PRINTLN         reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    ID              reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    GLOBAL          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    LOCAL           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    IF              reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    WHILE           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    FOR             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    BREAK           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    CONTINUE        reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    FUNCTION        reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    RETURN          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    PUSH            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    POP             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    NOT             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    PARA            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    ENTERO          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    DECIMAL         reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    CADENA          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    TRUE            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    FALSE           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    CORA            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    LOG10           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    LOG             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    SENO            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    COS             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    TAN             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    SQRT            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    LOWERCASE       reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    UPPERCASE       reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    TRUNC           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    FLOAT           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    FSTRING         reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    TYPEOF          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    PARSE           reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    LENGTH          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    $end            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    PARC            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    END             reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    ELSE            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    ELSEIF          reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    CORC            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)
    COMA            reduce using rule 105 (expresion -> TAN PARA expresion PARC .)


state 205

    (106) expresion -> SQRT PARA expresion PARC .

    MAS             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    MENOS           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    POR             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    DIVIDIDO        reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    MOD             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    POT             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    MENORIGUAL      reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    MENORQUE        reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    MAYORQUE        reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    DIFF            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    AND             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    OR              reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    DOSPTS          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    PYC             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    PRINT           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    PRINTLN         reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    ID              reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    GLOBAL          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    LOCAL           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    IF              reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    WHILE           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    FOR             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    BREAK           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    CONTINUE        reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    FUNCTION        reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    RETURN          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    PUSH            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    POP             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    NOT             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    PARA            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    ENTERO          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    DECIMAL         reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    CADENA          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    TRUE            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    FALSE           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    CORA            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    LOG10           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    LOG             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    SENO            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    COS             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    TAN             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    SQRT            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    LOWERCASE       reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    UPPERCASE       reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    TRUNC           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    FLOAT           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    FSTRING         reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    TYPEOF          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    PARSE           reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    LENGTH          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    $end            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    PARC            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    END             reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    ELSE            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    ELSEIF          reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    CORC            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)
    COMA            reduce using rule 106 (expresion -> SQRT PARA expresion PARC .)


state 206

    (107) expresion -> LOWERCASE PARA expresion PARC .

    MAS             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    MENOS           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    POR             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    DIVIDIDO        reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    MOD             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    POT             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    MENORIGUAL      reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    MENORQUE        reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    MAYORQUE        reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    DIFF            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    AND             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    OR              reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    DOSPTS          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    PYC             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    PRINT           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    PRINTLN         reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    ID              reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    GLOBAL          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    LOCAL           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    IF              reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    WHILE           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    FOR             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    BREAK           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    CONTINUE        reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    FUNCTION        reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    RETURN          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    PUSH            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    POP             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    NOT             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    PARA            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    ENTERO          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    DECIMAL         reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    CADENA          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    TRUE            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    FALSE           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    CORA            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    LOG10           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    LOG             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    SENO            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    COS             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    TAN             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    SQRT            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    LOWERCASE       reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    UPPERCASE       reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    TRUNC           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    FLOAT           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    FSTRING         reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    TYPEOF          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    PARSE           reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    LENGTH          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    $end            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    PARC            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    END             reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    ELSE            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    ELSEIF          reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    CORC            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)
    COMA            reduce using rule 107 (expresion -> LOWERCASE PARA expresion PARC .)


state 207

    (108) expresion -> UPPERCASE PARA expresion PARC .

    MAS             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    MENOS           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    POR             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    DIVIDIDO        reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    MOD             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    POT             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    MENORIGUAL      reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    MENORQUE        reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    MAYORQUE        reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    DIFF            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    AND             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    OR              reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    DOSPTS          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    PYC             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    PRINT           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    PRINTLN         reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    ID              reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    GLOBAL          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    LOCAL           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    IF              reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    WHILE           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    FOR             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    BREAK           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    CONTINUE        reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    FUNCTION        reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    RETURN          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    PUSH            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    POP             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    NOT             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    PARA            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    ENTERO          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    DECIMAL         reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    CADENA          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    TRUE            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    FALSE           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    CORA            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    LOG10           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    LOG             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    SENO            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    COS             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    TAN             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    SQRT            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    LOWERCASE       reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    UPPERCASE       reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    TRUNC           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    FLOAT           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    FSTRING         reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    TYPEOF          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    PARSE           reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    LENGTH          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    $end            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    PARC            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    END             reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    ELSE            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    ELSEIF          reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    CORC            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)
    COMA            reduce using rule 108 (expresion -> UPPERCASE PARA expresion PARC .)


state 208

    (109) expresion -> TRUNC PARA expresion PARC .

    MAS             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    MENOS           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    POR             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    DIVIDIDO        reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    MOD             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    POT             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    MENORIGUAL      reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    MENORQUE        reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    MAYORQUE        reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    DIFF            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    AND             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    OR              reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    DOSPTS          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    PYC             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    PRINT           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    PRINTLN         reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    ID              reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    GLOBAL          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    LOCAL           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    IF              reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    WHILE           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    FOR             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    BREAK           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    CONTINUE        reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    FUNCTION        reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    RETURN          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    PUSH            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    POP             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    NOT             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    PARA            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    ENTERO          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    DECIMAL         reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    CADENA          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    TRUE            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    FALSE           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    CORA            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    LOG10           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    LOG             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    SENO            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    COS             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    TAN             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    SQRT            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    LOWERCASE       reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    UPPERCASE       reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    TRUNC           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    FLOAT           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    FSTRING         reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    TYPEOF          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    PARSE           reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    LENGTH          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    $end            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    PARC            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    END             reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    ELSE            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    ELSEIF          reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    CORC            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)
    COMA            reduce using rule 109 (expresion -> TRUNC PARA expresion PARC .)


state 209

    (110) expresion -> FLOAT PARA expresion PARC .

    MAS             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    MENOS           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    POR             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    DIVIDIDO        reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    MOD             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    POT             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    MENORIGUAL      reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    MENORQUE        reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    MAYORQUE        reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    DIFF            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    AND             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    OR              reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    DOSPTS          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    PYC             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    PRINT           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    PRINTLN         reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    ID              reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    GLOBAL          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    LOCAL           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    IF              reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    WHILE           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    FOR             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    BREAK           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    CONTINUE        reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    FUNCTION        reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    RETURN          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    PUSH            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    POP             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    NOT             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    PARA            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    ENTERO          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    DECIMAL         reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    CADENA          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    TRUE            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    FALSE           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    CORA            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    LOG10           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    LOG             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    SENO            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    COS             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    TAN             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    SQRT            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    LOWERCASE       reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    UPPERCASE       reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    TRUNC           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    FLOAT           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    FSTRING         reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    TYPEOF          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    PARSE           reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    LENGTH          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    $end            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    PARC            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    END             reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    ELSE            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    ELSEIF          reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    CORC            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)
    COMA            reduce using rule 110 (expresion -> FLOAT PARA expresion PARC .)


state 210

    (111) expresion -> FSTRING PARA expresion PARC .

    MAS             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    MENOS           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    POR             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    DIVIDIDO        reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    MOD             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    POT             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    MENORIGUAL      reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    MENORQUE        reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    MAYORQUE        reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    DIFF            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    AND             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    OR              reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    DOSPTS          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    PYC             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    PRINT           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    PRINTLN         reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    ID              reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    GLOBAL          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    LOCAL           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    IF              reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    WHILE           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    FOR             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    BREAK           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    CONTINUE        reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    FUNCTION        reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    RETURN          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    PUSH            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    POP             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    NOT             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    PARA            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    ENTERO          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    DECIMAL         reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    CADENA          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    TRUE            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    FALSE           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    CORA            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    LOG10           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    LOG             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    SENO            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    COS             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    TAN             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    SQRT            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    LOWERCASE       reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    UPPERCASE       reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    TRUNC           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    FLOAT           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    FSTRING         reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    TYPEOF          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    PARSE           reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    LENGTH          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    $end            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    PARC            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    END             reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    ELSE            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    ELSEIF          reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    CORC            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)
    COMA            reduce using rule 111 (expresion -> FSTRING PARA expresion PARC .)


state 211

    (112) expresion -> TYPEOF PARA expresion PARC .

    MAS             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    MENOS           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    POR             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    DIVIDIDO        reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    MOD             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    POT             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    MENORIGUAL      reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    MENORQUE        reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    MAYORQUE        reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    DIFF            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    AND             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    OR              reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    DOSPTS          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    PYC             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    PRINT           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    PRINTLN         reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    ID              reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    GLOBAL          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    LOCAL           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    IF              reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    WHILE           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    FOR             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    BREAK           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    CONTINUE        reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    FUNCTION        reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    RETURN          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    PUSH            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    POP             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    NOT             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    PARA            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    ENTERO          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    DECIMAL         reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    CADENA          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    TRUE            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    FALSE           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    CORA            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    LOG10           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    LOG             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    SENO            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    COS             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    TAN             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    SQRT            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    LOWERCASE       reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    UPPERCASE       reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    TRUNC           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    FLOAT           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    FSTRING         reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    TYPEOF          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    PARSE           reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    LENGTH          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    $end            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    PARC            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    END             reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    ELSE            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    ELSEIF          reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    CORC            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)
    COMA            reduce using rule 112 (expresion -> TYPEOF PARA expresion PARC .)


state 212

    (113) expresion -> PARSE PARA tipo COMA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 232
    sent_llamada                   shift and go to state 77

state 213

    (114) expresion -> LENGTH PARA expresion PARC .

    MAS             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    MENOS           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    POR             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    DIVIDIDO        reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    MOD             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    POT             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    MENORIGUAL      reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    MENORQUE        reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    MAYORQUE        reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    DIFF            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    AND             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    OR              reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    DOSPTS          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    PYC             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    PRINT           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    PRINTLN         reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    ID              reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    GLOBAL          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    LOCAL           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    IF              reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    WHILE           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    FOR             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    BREAK           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    CONTINUE        reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    FUNCTION        reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    RETURN          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    PUSH            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    POP             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    NOT             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    PARA            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    ENTERO          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    DECIMAL         reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    CADENA          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    TRUE            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    FALSE           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    CORA            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    LOG10           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    LOG             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    SENO            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    COS             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    TAN             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    SQRT            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    LOWERCASE       reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    UPPERCASE       reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    TRUNC           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    FLOAT           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    FSTRING         reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    TYPEOF          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    PARSE           reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    LENGTH          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    $end            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    PARC            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    END             reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    ELSE            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    ELSEIF          reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    CORC            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)
    COMA            reduce using rule 114 (expresion -> LENGTH PARA expresion PARC .)


state 214

    (115) expresion -> POP NOT PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 233
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 215

    (54) asignacion -> ID IGUAL expresion DOSPTS DOSPTS . tipo
    (60) tipo -> . INT64
    (61) tipo -> . FLOAT64
    (62) tipo -> . STRING
    (63) tipo -> . NOTHING
    (64) tipo -> . BOOL
    (65) tipo -> . CHAR

    INT64           shift and go to state 168
    FLOAT64         shift and go to state 169
    STRING          shift and go to state 170
    NOTHING         shift and go to state 171
    BOOL            shift and go to state 172
    CHAR            shift and go to state 173

    tipo                           shift and go to state 234

state 216

    (79) list_vector -> list_vector CORA expresion CORC .

    IGUAL           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    CORA            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    MAS             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    MENOS           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    POR             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    DIVIDIDO        reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    MOD             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    POT             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    MENORIGUAL      reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    MAYORIGUAL      reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    MENORQUE        reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    MAYORQUE        reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    DIFF            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    IGUALIGUAL      reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    AND             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    OR              reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    DOSPTS          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    PYC             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    PRINT           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    PRINTLN         reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    ID              reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    GLOBAL          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    LOCAL           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    IF              reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    WHILE           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    FOR             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    BREAK           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    CONTINUE        reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    FUNCTION        reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    RETURN          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    PUSH            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    POP             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    NOT             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    PARA            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    ENTERO          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    DECIMAL         reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    CADENA          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    TRUE            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    FALSE           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    LOG10           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    LOG             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    SENO            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    COS             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    TAN             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    SQRT            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    LOWERCASE       reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    UPPERCASE       reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    TRUNC           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    FLOAT           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    FSTRING         reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    TYPEOF          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    PARSE           reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    LENGTH          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    $end            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    END             reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    ELSE            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    ELSEIF          reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    PARC            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    CORC            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)
    COMA            reduce using rule 79 (list_vector -> list_vector CORA expresion CORC .)


state 217

    (55) asignacion -> GLOBAL ID IGUAL expresion DOSPTS . DOSPTS tipo
    (98) expresion -> expresion DOSPTS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    DOSPTS          shift and go to state 235
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 128
    sent_llamada                   shift and go to state 77

state 218

    (56) asignacion -> LOCAL ID IGUAL expresion DOSPTS . DOSPTS tipo
    (98) expresion -> expresion DOSPTS . expresion
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    DOSPTS          shift and go to state 236
    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 128
    sent_llamada                   shift and go to state 77

state 219

    (44) sent_if -> IF expresion instrucciones ELSE instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 237
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 220

    (48) else_if -> ELSEIF expresion . instrucciones END
    (50) else_if -> ELSEIF expresion . instrucciones else_if
    (52) else_if -> ELSEIF expresion . instrucciones ELSE instrucciones END
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    MAS             shift and go to state 59
    MENOS           shift and go to state 145
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 238
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 221

    (49) else_if -> ELSEIF PARA . expresion PARC instrucciones END
    (51) else_if -> ELSEIF PARA . expresion PARC instrucciones else_if
    (53) else_if -> ELSEIF PARA . expresion PARC instrucciones ELSE instrucciones END
    (91) expresion -> PARA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 239
    sent_llamada                   shift and go to state 77

state 222

    (43) sent_if -> IF PARA expresion PARC instrucciones . END
    (45) sent_if -> IF PARA expresion PARC instrucciones . ELSE instrucciones END
    (47) sent_if -> IF PARA expresion PARC instrucciones . else_if
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (48) else_if -> . ELSEIF expresion instrucciones END
    (49) else_if -> . ELSEIF PARA expresion PARC instrucciones END
    (50) else_if -> . ELSEIF expresion instrucciones else_if
    (51) else_if -> . ELSEIF PARA expresion PARC instrucciones else_if
    (52) else_if -> . ELSEIF expresion instrucciones ELSE instrucciones END
    (53) else_if -> . ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 240
    ELSE            shift and go to state 241
    ELSEIF          shift and go to state 188
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    else_if                        shift and go to state 242
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 223

    (41) sent_while -> WHILE PARA expresion PARC instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 243
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 224

    (39) sent_for -> FOR ID IN expresion instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 244
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 225

    (33) parametros -> ID DOSPTS . DOSPTS tipo

    DOSPTS          shift and go to state 245


state 226

    (28) sent_function -> FUNCTION ID PARA parametros PARC . instrucciones END
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    instrucciones                  shift and go to state 246
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18
    expresion                      shift and go to state 19

state 227

    (30) parametros -> parametros COMA . ID
    (31) parametros -> parametros COMA . ID DOSPTS DOSPTS tipo

    ID              shift and go to state 247


state 228

    (29) sent_function -> FUNCTION ID PARA PARC instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 248
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18
    expresion                      shift and go to state 19

state 229

    (23) sent_push -> PUSH NOT PARA expresion COMA . expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC

    ID              shift and go to state 76
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56
    POP             shift and go to state 78

    expresion                      shift and go to state 249
    sent_llamada                   shift and go to state 77

state 230

    (22) sent_pop -> POP NOT PARA expresion PARC .
    (115) expresion -> POP NOT PARA expresion PARC .

  ! reduce/reduce conflict for MENOS resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for PYC resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for PRINT resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for ID resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for GLOBAL resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for LOCAL resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for IF resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for WHILE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for FOR resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for BREAK resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for PUSH resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for POP resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for NOT resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for PARA resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for ENTERO resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for CADENA resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for TRUE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for FALSE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for CORA resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for LOG10 resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for LOG resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for SENO resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for COS resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for TAN resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for SQRT resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for LOWERCASE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for UPPERCASE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for TRUNC resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for FSTRING resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for TYPEOF resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for PARSE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for LENGTH resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for $end resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for END resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for ELSE resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    PYC             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    PRINT           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    PRINTLN         reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    ID              reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    GLOBAL          reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    LOCAL           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    IF              reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    WHILE           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    FOR             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    BREAK           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    CONTINUE        reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    FUNCTION        reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    RETURN          reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    PUSH            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    POP             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    MENOS           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    NOT             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    PARA            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    ENTERO          reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    DECIMAL         reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    CADENA          reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    TRUE            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    FALSE           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    CORA            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    LOG10           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    LOG             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    SENO            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    COS             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    TAN             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    SQRT            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    LOWERCASE       reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    UPPERCASE       reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    TRUNC           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    FLOAT           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    FSTRING         reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    TYPEOF          reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    PARSE           reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    LENGTH          reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    $end            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    END             reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    ELSE            reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    ELSEIF          reduce using rule 22 (sent_pop -> POP NOT PARA expresion PARC .)
    MAS             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    POR             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    DIVIDIDO        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MOD             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    POT             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MENORIGUAL      reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MENORQUE        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MAYORQUE        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    DIFF            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    AND             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    OR              reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    DOSPTS          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)

  ! MENOS           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! PYC             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! PRINT           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! PRINTLN         [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! ID              [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! GLOBAL          [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! LOCAL           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! IF              [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! WHILE           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! FOR             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! BREAK           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! CONTINUE        [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! FUNCTION        [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! RETURN          [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! PUSH            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! POP             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! NOT             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! PARA            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! ENTERO          [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! DECIMAL         [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! CADENA          [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! TRUE            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! FALSE           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! CORA            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! LOG10           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! LOG             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! SENO            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! COS             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! TAN             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! SQRT            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! LOWERCASE       [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! UPPERCASE       [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! TRUNC           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! FLOAT           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! FSTRING         [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! TYPEOF          [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! PARSE           [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! LENGTH          [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! $end            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! END             [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! ELSE            [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]
  ! ELSEIF          [ reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .) ]


state 231

    (102) expresion -> LOG PARA expresion COMA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 250
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 232

    (113) expresion -> PARSE PARA tipo COMA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 251
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 233

    (115) expresion -> POP NOT PARA expresion PARC .

    PARC            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MAS             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MENOS           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    POR             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    DIVIDIDO        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MOD             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    POT             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MENORIGUAL      reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MENORQUE        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    MAYORQUE        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    DIFF            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    AND             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    OR              reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    DOSPTS          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    PRINT           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    PRINTLN         reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    ID              reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    GLOBAL          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    LOCAL           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    IF              reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    WHILE           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    FOR             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    BREAK           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    CONTINUE        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    FUNCTION        reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    RETURN          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    PUSH            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    POP             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    NOT             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    PARA            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    ENTERO          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    DECIMAL         reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    CADENA          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    TRUE            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    FALSE           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    CORA            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    LOG10           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    LOG             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    SENO            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    COS             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    TAN             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    SQRT            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    LOWERCASE       reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    UPPERCASE       reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    TRUNC           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    FLOAT           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    FSTRING         reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    TYPEOF          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    PARSE           reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    LENGTH          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    PYC             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    $end            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    END             reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    ELSE            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    ELSEIF          reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    CORC            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)
    COMA            reduce using rule 115 (expresion -> POP NOT PARA expresion PARC .)


state 234

    (54) asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .

    PYC             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PRINT           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PRINTLN         reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ID              reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    GLOBAL          reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOCAL           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    IF              reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    WHILE           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FOR             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    BREAK           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CONTINUE        reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FUNCTION        reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    RETURN          reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PUSH            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    POP             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    MENOS           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    NOT             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PARA            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ENTERO          reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    DECIMAL         reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CADENA          reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TRUE            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FALSE           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CORA            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOG10           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOG             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    SENO            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    COS             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TAN             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    SQRT            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOWERCASE       reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    UPPERCASE       reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TRUNC           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FLOAT           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FSTRING         reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TYPEOF          reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PARSE           reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LENGTH          reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    $end            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    END             reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ELSE            reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ELSEIF          reduce using rule 54 (asignacion -> ID IGUAL expresion DOSPTS DOSPTS tipo .)


state 235

    (55) asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS . tipo
    (60) tipo -> . INT64
    (61) tipo -> . FLOAT64
    (62) tipo -> . STRING
    (63) tipo -> . NOTHING
    (64) tipo -> . BOOL
    (65) tipo -> . CHAR

    INT64           shift and go to state 168
    FLOAT64         shift and go to state 169
    STRING          shift and go to state 170
    NOTHING         shift and go to state 171
    BOOL            shift and go to state 172
    CHAR            shift and go to state 173

    tipo                           shift and go to state 252

state 236

    (56) asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS . tipo
    (60) tipo -> . INT64
    (61) tipo -> . FLOAT64
    (62) tipo -> . STRING
    (63) tipo -> . NOTHING
    (64) tipo -> . BOOL
    (65) tipo -> . CHAR

    INT64           shift and go to state 168
    FLOAT64         shift and go to state 169
    STRING          shift and go to state 170
    NOTHING         shift and go to state 171
    BOOL            shift and go to state 172
    CHAR            shift and go to state 173

    tipo                           shift and go to state 253

state 237

    (44) sent_if -> IF expresion instrucciones ELSE instrucciones END .

    PYC             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    PRINT           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    PRINTLN         reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    ID              reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    GLOBAL          reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    LOCAL           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    IF              reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    WHILE           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    FOR             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    BREAK           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    CONTINUE        reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    FUNCTION        reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    RETURN          reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    PUSH            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    POP             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    MENOS           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    NOT             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    PARA            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    ENTERO          reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    DECIMAL         reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    CADENA          reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    TRUE            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    FALSE           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    CORA            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    LOG10           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    LOG             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    SENO            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    COS             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    TAN             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    SQRT            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    LOWERCASE       reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    UPPERCASE       reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    TRUNC           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    FLOAT           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    FSTRING         reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    TYPEOF          reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    PARSE           reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    LENGTH          reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    $end            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    END             reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    ELSE            reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)
    ELSEIF          reduce using rule 44 (sent_if -> IF expresion instrucciones ELSE instrucciones END .)


state 238

    (48) else_if -> ELSEIF expresion instrucciones . END
    (50) else_if -> ELSEIF expresion instrucciones . else_if
    (52) else_if -> ELSEIF expresion instrucciones . ELSE instrucciones END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (48) else_if -> . ELSEIF expresion instrucciones END
    (49) else_if -> . ELSEIF PARA expresion PARC instrucciones END
    (50) else_if -> . ELSEIF expresion instrucciones else_if
    (51) else_if -> . ELSEIF PARA expresion PARC instrucciones else_if
    (52) else_if -> . ELSEIF expresion instrucciones ELSE instrucciones END
    (53) else_if -> . ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 254
    ELSE            shift and go to state 256
    ELSEIF          shift and go to state 188
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    else_if                        shift and go to state 255
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 239

    (49) else_if -> ELSEIF PARA expresion . PARC instrucciones END
    (51) else_if -> ELSEIF PARA expresion . PARC instrucciones else_if
    (53) else_if -> ELSEIF PARA expresion . PARC instrucciones ELSE instrucciones END
    (91) expresion -> PARA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 257
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 240

    (43) sent_if -> IF PARA expresion PARC instrucciones END .

    PYC             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    PRINT           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    PRINTLN         reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    ID              reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    GLOBAL          reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    LOCAL           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    IF              reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    WHILE           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    FOR             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    BREAK           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    CONTINUE        reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    FUNCTION        reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    RETURN          reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    PUSH            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    POP             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    MENOS           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    NOT             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    PARA            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    ENTERO          reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    DECIMAL         reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    CADENA          reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    TRUE            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    FALSE           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    CORA            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    LOG10           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    LOG             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    SENO            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    COS             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    TAN             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    SQRT            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    LOWERCASE       reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    UPPERCASE       reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    TRUNC           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    FLOAT           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    FSTRING         reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    TYPEOF          reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    PARSE           reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    LENGTH          reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    $end            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    END             reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    ELSE            reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)
    ELSEIF          reduce using rule 43 (sent_if -> IF PARA expresion PARC instrucciones END .)


state 241

    (45) sent_if -> IF PARA expresion PARC instrucciones ELSE . instrucciones END
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 258
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 242

    (47) sent_if -> IF PARA expresion PARC instrucciones else_if .

    PYC             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    PRINT           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    PRINTLN         reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    ID              reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    GLOBAL          reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    LOCAL           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    IF              reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    WHILE           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    FOR             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    BREAK           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    CONTINUE        reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    FUNCTION        reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    RETURN          reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    PUSH            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    POP             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    MENOS           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    NOT             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    PARA            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    ENTERO          reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    DECIMAL         reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    CADENA          reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    TRUE            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    FALSE           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    CORA            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    LOG10           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    LOG             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    SENO            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    COS             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    TAN             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    SQRT            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    LOWERCASE       reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    UPPERCASE       reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    TRUNC           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    FLOAT           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    FSTRING         reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    TYPEOF          reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    PARSE           reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    LENGTH          reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    $end            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    END             reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    ELSE            reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)
    ELSEIF          reduce using rule 47 (sent_if -> IF PARA expresion PARC instrucciones else_if .)


state 243

    (41) sent_while -> WHILE PARA expresion PARC instrucciones END .

    PYC             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    PRINT           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    PRINTLN         reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    ID              reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    GLOBAL          reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    LOCAL           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    IF              reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    WHILE           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    FOR             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    BREAK           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    CONTINUE        reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    FUNCTION        reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    RETURN          reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    PUSH            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    POP             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    MENOS           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    NOT             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    PARA            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    ENTERO          reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    DECIMAL         reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    CADENA          reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    TRUE            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    FALSE           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    CORA            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    LOG10           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    LOG             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    SENO            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    COS             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    TAN             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    SQRT            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    LOWERCASE       reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    UPPERCASE       reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    TRUNC           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    FLOAT           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    FSTRING         reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    TYPEOF          reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    PARSE           reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    LENGTH          reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    $end            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    END             reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    ELSE            reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)
    ELSEIF          reduce using rule 41 (sent_while -> WHILE PARA expresion PARC instrucciones END .)


state 244

    (39) sent_for -> FOR ID IN expresion instrucciones END .

    PYC             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    PRINT           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    PRINTLN         reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    ID              reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    GLOBAL          reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    LOCAL           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    IF              reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    WHILE           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    FOR             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    BREAK           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    CONTINUE        reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    FUNCTION        reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    RETURN          reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    PUSH            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    POP             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    MENOS           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    NOT             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    PARA            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    ENTERO          reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    DECIMAL         reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    CADENA          reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    TRUE            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    FALSE           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    CORA            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    LOG10           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    LOG             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    SENO            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    COS             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    TAN             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    SQRT            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    LOWERCASE       reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    UPPERCASE       reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    TRUNC           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    FLOAT           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    FSTRING         reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    TYPEOF          reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    PARSE           reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    LENGTH          reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    $end            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    END             reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    ELSE            reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)
    ELSEIF          reduce using rule 39 (sent_for -> FOR ID IN expresion instrucciones END .)


state 245

    (33) parametros -> ID DOSPTS DOSPTS . tipo
    (60) tipo -> . INT64
    (61) tipo -> . FLOAT64
    (62) tipo -> . STRING
    (63) tipo -> . NOTHING
    (64) tipo -> . BOOL
    (65) tipo -> . CHAR

    INT64           shift and go to state 168
    FLOAT64         shift and go to state 169
    STRING          shift and go to state 170
    NOTHING         shift and go to state 171
    BOOL            shift and go to state 172
    CHAR            shift and go to state 173

    tipo                           shift and go to state 259

state 246

    (28) sent_function -> FUNCTION ID PARA parametros PARC instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 260
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18
    expresion                      shift and go to state 19

state 247

    (30) parametros -> parametros COMA ID .
    (31) parametros -> parametros COMA ID . DOSPTS DOSPTS tipo

    PARC            reduce using rule 30 (parametros -> parametros COMA ID .)
    COMA            reduce using rule 30 (parametros -> parametros COMA ID .)
    DOSPTS          shift and go to state 261


state 248

    (29) sent_function -> FUNCTION ID PARA PARC instrucciones END .

    PYC             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    PRINT           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    PRINTLN         reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    ID              reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    GLOBAL          reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    LOCAL           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    IF              reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    WHILE           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    FOR             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    BREAK           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    CONTINUE        reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    FUNCTION        reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    RETURN          reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    PUSH            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    POP             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    MENOS           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    NOT             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    PARA            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    ENTERO          reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    DECIMAL         reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    CADENA          reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    TRUE            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    FALSE           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    CORA            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    LOG10           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    LOG             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    SENO            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    COS             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    TAN             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    SQRT            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    LOWERCASE       reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    UPPERCASE       reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    TRUNC           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    FLOAT           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    FSTRING         reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    TYPEOF          reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    PARSE           reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    LENGTH          reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    $end            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    END             reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    ELSE            reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)
    ELSEIF          reduce using rule 29 (sent_function -> FUNCTION ID PARA PARC instrucciones END .)


state 249

    (23) sent_push -> PUSH NOT PARA expresion COMA expresion . PARC
    (72) expresion -> expresion . MAS expresion
    (73) expresion -> expresion . MENOS expresion
    (74) expresion -> expresion . POR expresion
    (75) expresion -> expresion . DIVIDIDO expresion
    (76) expresion -> expresion . MOD expresion
    (77) expresion -> expresion . POT expresion
    (82) expresion -> expresion . MENORIGUAL expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORQUE expresion
    (85) expresion -> expresion . MAYORQUE expresion
    (86) expresion -> expresion . DIFF expresion
    (87) expresion -> expresion . IGUALIGUAL expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (98) expresion -> expresion . DOSPTS expresion

    PARC            shift and go to state 262
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    POR             shift and go to state 61
    DIVIDIDO        shift and go to state 62
    MOD             shift and go to state 63
    POT             shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORQUE        shift and go to state 67
    MAYORQUE        shift and go to state 68
    DIFF            shift and go to state 69
    IGUALIGUAL      shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72
    DOSPTS          shift and go to state 73


state 250

    (102) expresion -> LOG PARA expresion COMA expresion PARC .

    MAS             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    MENOS           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    POR             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    DIVIDIDO        reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    MOD             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    POT             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    MENORIGUAL      reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    MAYORIGUAL      reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    MENORQUE        reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    MAYORQUE        reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    DIFF            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    IGUALIGUAL      reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    AND             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    OR              reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    DOSPTS          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    PYC             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    PRINT           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    PRINTLN         reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    ID              reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    GLOBAL          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    LOCAL           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    IF              reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    WHILE           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    FOR             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    BREAK           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    CONTINUE        reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    FUNCTION        reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    RETURN          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    PUSH            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    POP             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    NOT             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    PARA            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    ENTERO          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    DECIMAL         reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    CADENA          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    TRUE            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    FALSE           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    CORA            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    LOG10           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    LOG             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    SENO            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    COS             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    TAN             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    SQRT            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    LOWERCASE       reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    UPPERCASE       reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    TRUNC           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    FLOAT           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    FSTRING         reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    TYPEOF          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    PARSE           reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    LENGTH          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    $end            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    PARC            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    END             reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    ELSE            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    ELSEIF          reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    CORC            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)
    COMA            reduce using rule 102 (expresion -> LOG PARA expresion COMA expresion PARC .)


state 251

    (113) expresion -> PARSE PARA tipo COMA expresion PARC .

    MAS             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    MENOS           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    POR             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    DIVIDIDO        reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    MOD             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    POT             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    MENORIGUAL      reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    MAYORIGUAL      reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    MENORQUE        reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    MAYORQUE        reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    DIFF            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    IGUALIGUAL      reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    AND             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    OR              reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    DOSPTS          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    PYC             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    PRINT           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    PRINTLN         reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    ID              reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    GLOBAL          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    LOCAL           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    IF              reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    WHILE           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    FOR             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    BREAK           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    CONTINUE        reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    FUNCTION        reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    RETURN          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    PUSH            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    POP             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    NOT             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    PARA            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    ENTERO          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    DECIMAL         reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    CADENA          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    TRUE            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    FALSE           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    CORA            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    LOG10           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    LOG             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    SENO            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    COS             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    TAN             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    SQRT            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    LOWERCASE       reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    UPPERCASE       reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    TRUNC           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    FLOAT           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    FSTRING         reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    TYPEOF          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    PARSE           reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    LENGTH          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    $end            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    PARC            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    END             reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    ELSE            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    ELSEIF          reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    CORC            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)
    COMA            reduce using rule 113 (expresion -> PARSE PARA tipo COMA expresion PARC .)


state 252

    (55) asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .

    PYC             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PRINT           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PRINTLN         reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ID              reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    GLOBAL          reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOCAL           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    IF              reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    WHILE           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FOR             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    BREAK           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CONTINUE        reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FUNCTION        reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    RETURN          reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PUSH            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    POP             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    MENOS           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    NOT             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PARA            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ENTERO          reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    DECIMAL         reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CADENA          reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TRUE            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FALSE           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CORA            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOG10           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOG             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    SENO            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    COS             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TAN             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    SQRT            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOWERCASE       reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    UPPERCASE       reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TRUNC           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FLOAT           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FSTRING         reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TYPEOF          reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PARSE           reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LENGTH          reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    $end            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    END             reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ELSE            reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ELSEIF          reduce using rule 55 (asignacion -> GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo .)


state 253

    (56) asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .

    PYC             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PRINT           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PRINTLN         reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ID              reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    GLOBAL          reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOCAL           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    IF              reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    WHILE           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FOR             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    BREAK           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CONTINUE        reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FUNCTION        reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    RETURN          reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PUSH            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    POP             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    MENOS           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    NOT             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PARA            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ENTERO          reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    DECIMAL         reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CADENA          reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TRUE            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FALSE           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    CORA            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOG10           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOG             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    SENO            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    COS             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TAN             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    SQRT            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LOWERCASE       reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    UPPERCASE       reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TRUNC           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FLOAT           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    FSTRING         reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    TYPEOF          reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    PARSE           reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    LENGTH          reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    $end            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    END             reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ELSE            reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)
    ELSEIF          reduce using rule 56 (asignacion -> LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo .)


state 254

    (48) else_if -> ELSEIF expresion instrucciones END .

    PYC             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    PRINT           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    PRINTLN         reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    ID              reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    GLOBAL          reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    LOCAL           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    IF              reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    WHILE           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    FOR             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    BREAK           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    CONTINUE        reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    FUNCTION        reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    RETURN          reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    PUSH            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    POP             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    MENOS           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    NOT             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    PARA            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    ENTERO          reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    DECIMAL         reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    CADENA          reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    TRUE            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    FALSE           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    CORA            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    LOG10           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    LOG             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    SENO            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    COS             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    TAN             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    SQRT            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    LOWERCASE       reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    UPPERCASE       reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    TRUNC           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    FLOAT           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    FSTRING         reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    TYPEOF          reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    PARSE           reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    LENGTH          reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    $end            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    END             reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    ELSE            reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)
    ELSEIF          reduce using rule 48 (else_if -> ELSEIF expresion instrucciones END .)


state 255

    (50) else_if -> ELSEIF expresion instrucciones else_if .

    PYC             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    PRINT           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    PRINTLN         reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    ID              reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    GLOBAL          reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    LOCAL           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    IF              reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    WHILE           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    FOR             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    BREAK           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    CONTINUE        reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    FUNCTION        reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    RETURN          reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    PUSH            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    POP             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    MENOS           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    NOT             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    PARA            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    ENTERO          reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    DECIMAL         reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    CADENA          reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    TRUE            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    FALSE           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    CORA            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    LOG10           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    LOG             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    SENO            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    COS             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    TAN             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    SQRT            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    LOWERCASE       reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    UPPERCASE       reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    TRUNC           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    FLOAT           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    FSTRING         reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    TYPEOF          reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    PARSE           reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    LENGTH          reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    $end            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    END             reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    ELSE            reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)
    ELSEIF          reduce using rule 50 (else_if -> ELSEIF expresion instrucciones else_if .)


state 256

    (52) else_if -> ELSEIF expresion instrucciones ELSE . instrucciones END
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 263
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 257

    (49) else_if -> ELSEIF PARA expresion PARC . instrucciones END
    (51) else_if -> ELSEIF PARA expresion PARC . instrucciones else_if
    (53) else_if -> ELSEIF PARA expresion PARC . instrucciones ELSE instrucciones END
    (91) expresion -> PARA expresion PARC .
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for LOCAL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARA resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for CORA resolved as shift
  ! shift/reduce conflict for LOG10 resolved as shift
  ! shift/reduce conflict for LOG resolved as shift
  ! shift/reduce conflict for SENO resolved as shift
  ! shift/reduce conflict for COS resolved as shift
  ! shift/reduce conflict for TAN resolved as shift
  ! shift/reduce conflict for SQRT resolved as shift
  ! shift/reduce conflict for LOWERCASE resolved as shift
  ! shift/reduce conflict for UPPERCASE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for FSTRING resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
    MAS             reduce using rule 91 (expresion -> PARA expresion PARC .)
    POR             reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIVIDIDO        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MOD             reduce using rule 91 (expresion -> PARA expresion PARC .)
    POT             reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    MENORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    MAYORQUE        reduce using rule 91 (expresion -> PARA expresion PARC .)
    DIFF            reduce using rule 91 (expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 91 (expresion -> PARA expresion PARC .)
    AND             reduce using rule 91 (expresion -> PARA expresion PARC .)
    OR              reduce using rule 91 (expresion -> PARA expresion PARC .)
    DOSPTS          reduce using rule 91 (expresion -> PARA expresion PARC .)
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

  ! MENOS           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PRINT           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PRINTLN         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! ID              [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! GLOBAL          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOCAL           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! IF              [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! WHILE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FOR             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! BREAK           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CONTINUE        [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FUNCTION        [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! RETURN          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PUSH            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! POP             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! NOT             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PARA            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! ENTERO          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! DECIMAL         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CADENA          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TRUE            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FALSE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! CORA            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOG10           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOG             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! SENO            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! COS             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TAN             [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! SQRT            [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LOWERCASE       [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! UPPERCASE       [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TRUNC           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FLOAT           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! FSTRING         [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! TYPEOF          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! PARSE           [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]
  ! LENGTH          [ reduce using rule 91 (expresion -> PARA expresion PARC .) ]

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 264
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 258

    (45) sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 265
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 259

    (33) parametros -> ID DOSPTS DOSPTS tipo .

    PARC            reduce using rule 33 (parametros -> ID DOSPTS DOSPTS tipo .)
    COMA            reduce using rule 33 (parametros -> ID DOSPTS DOSPTS tipo .)


state 260

    (28) sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .

    PYC             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    PRINT           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    PRINTLN         reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    ID              reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    GLOBAL          reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    LOCAL           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    IF              reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    WHILE           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    FOR             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    BREAK           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    CONTINUE        reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    FUNCTION        reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    RETURN          reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    PUSH            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    POP             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    MENOS           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    NOT             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    PARA            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    ENTERO          reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    DECIMAL         reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    CADENA          reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    TRUE            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    FALSE           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    CORA            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    LOG10           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    LOG             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    SENO            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    COS             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    TAN             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    SQRT            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    LOWERCASE       reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    UPPERCASE       reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    TRUNC           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    FLOAT           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    FSTRING         reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    TYPEOF          reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    PARSE           reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    LENGTH          reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    $end            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    END             reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    ELSE            reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)
    ELSEIF          reduce using rule 28 (sent_function -> FUNCTION ID PARA parametros PARC instrucciones END .)


state 261

    (31) parametros -> parametros COMA ID DOSPTS . DOSPTS tipo

    DOSPTS          shift and go to state 266


state 262

    (23) sent_push -> PUSH NOT PARA expresion COMA expresion PARC .

    PYC             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    PRINT           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    PRINTLN         reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    ID              reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    GLOBAL          reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    LOCAL           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    IF              reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    WHILE           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    FOR             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    BREAK           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    CONTINUE        reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    FUNCTION        reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    RETURN          reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    PUSH            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    POP             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    MENOS           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    NOT             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    PARA            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    ENTERO          reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    DECIMAL         reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    CADENA          reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    TRUE            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    FALSE           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    CORA            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    LOG10           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    LOG             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    SENO            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    COS             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    TAN             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    SQRT            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    LOWERCASE       reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    UPPERCASE       reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    TRUNC           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    FLOAT           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    FSTRING         reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    TYPEOF          reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    PARSE           reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    LENGTH          reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    $end            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    END             reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    ELSE            reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)
    ELSEIF          reduce using rule 23 (sent_push -> PUSH NOT PARA expresion COMA expresion PARC .)


state 263

    (52) else_if -> ELSEIF expresion instrucciones ELSE instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 267
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 264

    (49) else_if -> ELSEIF PARA expresion PARC instrucciones . END
    (51) else_if -> ELSEIF PARA expresion PARC instrucciones . else_if
    (53) else_if -> ELSEIF PARA expresion PARC instrucciones . ELSE instrucciones END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (48) else_if -> . ELSEIF expresion instrucciones END
    (49) else_if -> . ELSEIF PARA expresion PARC instrucciones END
    (50) else_if -> . ELSEIF expresion instrucciones else_if
    (51) else_if -> . ELSEIF PARA expresion PARC instrucciones else_if
    (52) else_if -> . ELSEIF expresion instrucciones ELSE instrucciones END
    (53) else_if -> . ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 268
    ELSE            shift and go to state 270
    ELSEIF          shift and go to state 188
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    else_if                        shift and go to state 269
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 265

    (45) sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .

    PYC             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PRINT           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PRINTLN         reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ID              reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    GLOBAL          reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOCAL           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    IF              reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    WHILE           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FOR             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    BREAK           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    CONTINUE        reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FUNCTION        reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    RETURN          reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PUSH            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    POP             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    MENOS           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    NOT             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PARA            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ENTERO          reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    DECIMAL         reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    CADENA          reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TRUE            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FALSE           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    CORA            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOG10           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOG             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    SENO            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    COS             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TAN             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    SQRT            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOWERCASE       reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    UPPERCASE       reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TRUNC           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FLOAT           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FSTRING         reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TYPEOF          reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PARSE           reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LENGTH          reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    $end            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    END             reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ELSE            reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ELSEIF          reduce using rule 45 (sent_if -> IF PARA expresion PARC instrucciones ELSE instrucciones END .)


state 266

    (31) parametros -> parametros COMA ID DOSPTS DOSPTS . tipo
    (60) tipo -> . INT64
    (61) tipo -> . FLOAT64
    (62) tipo -> . STRING
    (63) tipo -> . NOTHING
    (64) tipo -> . BOOL
    (65) tipo -> . CHAR

    INT64           shift and go to state 168
    FLOAT64         shift and go to state 169
    STRING          shift and go to state 170
    NOTHING         shift and go to state 171
    BOOL            shift and go to state 172
    CHAR            shift and go to state 173

    tipo                           shift and go to state 271

state 267

    (52) else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .

    PYC             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    PRINT           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    PRINTLN         reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    ID              reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    GLOBAL          reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    LOCAL           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    IF              reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    WHILE           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    FOR             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    BREAK           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    CONTINUE        reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    FUNCTION        reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    RETURN          reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    PUSH            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    POP             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    MENOS           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    NOT             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    PARA            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    ENTERO          reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    DECIMAL         reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    CADENA          reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    TRUE            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    FALSE           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    CORA            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    LOG10           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    LOG             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    SENO            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    COS             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    TAN             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    SQRT            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    LOWERCASE       reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    UPPERCASE       reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    TRUNC           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    FLOAT           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    FSTRING         reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    TYPEOF          reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    PARSE           reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    LENGTH          reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    $end            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    END             reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    ELSE            reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)
    ELSEIF          reduce using rule 52 (else_if -> ELSEIF expresion instrucciones ELSE instrucciones END .)


state 268

    (49) else_if -> ELSEIF PARA expresion PARC instrucciones END .

    PYC             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    PRINT           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    PRINTLN         reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    ID              reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    GLOBAL          reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    LOCAL           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    IF              reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    WHILE           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    FOR             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    BREAK           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    CONTINUE        reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    FUNCTION        reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    RETURN          reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    PUSH            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    POP             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    MENOS           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    NOT             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    PARA            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    ENTERO          reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    DECIMAL         reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    CADENA          reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    TRUE            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    FALSE           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    CORA            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    LOG10           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    LOG             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    SENO            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    COS             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    TAN             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    SQRT            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    LOWERCASE       reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    UPPERCASE       reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    TRUNC           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    FLOAT           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    FSTRING         reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    TYPEOF          reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    PARSE           reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    LENGTH          reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    $end            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    END             reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    ELSE            reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)
    ELSEIF          reduce using rule 49 (else_if -> ELSEIF PARA expresion PARC instrucciones END .)


state 269

    (51) else_if -> ELSEIF PARA expresion PARC instrucciones else_if .

    PYC             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    PRINT           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    PRINTLN         reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    ID              reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    GLOBAL          reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    LOCAL           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    IF              reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    WHILE           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    FOR             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    BREAK           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    CONTINUE        reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    FUNCTION        reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    RETURN          reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    PUSH            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    POP             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    MENOS           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    NOT             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    PARA            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    ENTERO          reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    DECIMAL         reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    CADENA          reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    TRUE            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    FALSE           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    CORA            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    LOG10           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    LOG             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    SENO            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    COS             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    TAN             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    SQRT            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    LOWERCASE       reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    UPPERCASE       reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    TRUNC           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    FLOAT           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    FSTRING         reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    TYPEOF          reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    PARSE           reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    LENGTH          reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    $end            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    END             reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    ELSE            reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)
    ELSEIF          reduce using rule 51 (else_if -> ELSEIF PARA expresion PARC instrucciones else_if .)


state 270

    (53) else_if -> ELSEIF PARA expresion PARC instrucciones ELSE . instrucciones END
    (2) instrucciones -> . instrucciones instruccion PYC
    (3) instrucciones -> . instrucciones instruccion
    (4) instrucciones -> . instruccion PYC
    (5) instrucciones -> . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instrucciones                  shift and go to state 272
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 271

    (31) parametros -> parametros COMA ID DOSPTS DOSPTS tipo .

    PARC            reduce using rule 31 (parametros -> parametros COMA ID DOSPTS DOSPTS tipo .)
    COMA            reduce using rule 31 (parametros -> parametros COMA ID DOSPTS DOSPTS tipo .)


state 272

    (53) else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones . END
    (2) instrucciones -> instrucciones . instruccion PYC
    (3) instrucciones -> instrucciones . instruccion
    (6) instruccion -> . print
    (7) instruccion -> . println
    (8) instruccion -> . asignacion
    (9) instruccion -> . declaracion
    (10) instruccion -> . sent_if
    (11) instruccion -> . sent_while
    (12) instruccion -> . sent_for
    (13) instruccion -> . sent_break
    (14) instruccion -> . sent_continue
    (15) instruccion -> . asignacion_vect
    (16) instruccion -> . sent_function
    (17) instruccion -> . sent_llamada
    (18) instruccion -> . sent_return
    (19) instruccion -> . sent_push
    (20) instruccion -> . sent_pop
    (21) instruccion -> . expresion
    (66) print -> . PRINT PARA lista_expr PARC
    (67) println -> . PRINT PARA PARC
    (68) println -> . PRINTLN PARA PARC
    (69) println -> . PRINTLN PARA lista_expr PARC
    (54) asignacion -> . ID IGUAL expresion DOSPTS DOSPTS tipo
    (55) asignacion -> . GLOBAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (56) asignacion -> . LOCAL ID IGUAL expresion DOSPTS DOSPTS tipo
    (57) asignacion -> . ID IGUAL expresion
    (58) asignacion -> . GLOBAL ID IGUAL expresion
    (59) asignacion -> . LOCAL ID IGUAL expresion
    (34) declaracion -> . GLOBAL ID
    (35) declaracion -> . LOCAL ID
    (42) sent_if -> . IF expresion instrucciones END
    (43) sent_if -> . IF PARA expresion PARC instrucciones END
    (44) sent_if -> . IF expresion instrucciones ELSE instrucciones END
    (45) sent_if -> . IF PARA expresion PARC instrucciones ELSE instrucciones END
    (46) sent_if -> . IF expresion instrucciones else_if
    (47) sent_if -> . IF PARA expresion PARC instrucciones else_if
    (40) sent_while -> . WHILE expresion instrucciones END
    (41) sent_while -> . WHILE PARA expresion PARC instrucciones END
    (39) sent_for -> . FOR ID IN expresion instrucciones END
    (37) sent_break -> . BREAK
    (38) sent_continue -> . CONTINUE
    (36) asignacion_vect -> . ID list_vector IGUAL expresion
    (28) sent_function -> . FUNCTION ID PARA parametros PARC instrucciones END
    (29) sent_function -> . FUNCTION ID PARA PARC instrucciones END
    (26) sent_llamada -> . ID PARA PARC
    (27) sent_llamada -> . ID PARA lista_expr PARC
    (24) sent_return -> . RETURN
    (25) sent_return -> . RETURN expresion
    (23) sent_push -> . PUSH NOT PARA expresion COMA expresion PARC
    (22) sent_pop -> . POP NOT PARA expresion PARC
    (72) expresion -> . expresion MAS expresion
    (73) expresion -> . expresion MENOS expresion
    (74) expresion -> . expresion POR expresion
    (75) expresion -> . expresion DIVIDIDO expresion
    (76) expresion -> . expresion MOD expresion
    (77) expresion -> . expresion POT expresion
    (78) expresion -> . ID list_vector
    (81) expresion -> . MENOS expresion
    (82) expresion -> . expresion MENORIGUAL expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORQUE expresion
    (85) expresion -> . expresion MAYORQUE expresion
    (86) expresion -> . expresion DIFF expresion
    (87) expresion -> . expresion IGUALIGUAL expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . NOT expresion
    (91) expresion -> . PARA expresion PARC
    (92) expresion -> . ENTERO
    (93) expresion -> . DECIMAL
    (94) expresion -> . CADENA
    (95) expresion -> . TRUE
    (96) expresion -> . FALSE
    (97) expresion -> . CORA lista_expr CORC
    (98) expresion -> . expresion DOSPTS expresion
    (99) expresion -> . sent_llamada
    (100) expresion -> . ID
    (101) expresion -> . LOG10 PARA expresion PARC
    (102) expresion -> . LOG PARA expresion COMA expresion PARC
    (103) expresion -> . SENO PARA expresion PARC
    (104) expresion -> . COS PARA expresion PARC
    (105) expresion -> . TAN PARA expresion PARC
    (106) expresion -> . SQRT PARA expresion PARC
    (107) expresion -> . LOWERCASE PARA expresion PARC
    (108) expresion -> . UPPERCASE PARA expresion PARC
    (109) expresion -> . TRUNC PARA expresion PARC
    (110) expresion -> . FLOAT PARA expresion PARC
    (111) expresion -> . FSTRING PARA expresion PARC
    (112) expresion -> . TYPEOF PARA expresion PARC
    (113) expresion -> . PARSE PARA tipo COMA expresion PARC
    (114) expresion -> . LENGTH PARA expresion PARC
    (115) expresion -> . POP NOT PARA expresion PARC

    END             shift and go to state 273
    PRINT           shift and go to state 20
    PRINTLN         shift and go to state 22
    ID              shift and go to state 23
    GLOBAL          shift and go to state 24
    LOCAL           shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    FUNCTION        shift and go to state 31
    RETURN          shift and go to state 32
    PUSH            shift and go to state 33
    POP             shift and go to state 35
    MENOS           shift and go to state 36
    NOT             shift and go to state 34
    PARA            shift and go to state 21
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CORA            shift and go to state 42
    LOG10           shift and go to state 43
    LOG             shift and go to state 44
    SENO            shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    LOWERCASE       shift and go to state 49
    UPPERCASE       shift and go to state 50
    TRUNC           shift and go to state 51
    FLOAT           shift and go to state 52
    FSTRING         shift and go to state 53
    TYPEOF          shift and go to state 54
    PARSE           shift and go to state 55
    LENGTH          shift and go to state 56

    expresion                      shift and go to state 19
    instruccion                    shift and go to state 57
    print                          shift and go to state 4
    println                        shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion                    shift and go to state 7
    sent_if                        shift and go to state 8
    sent_while                     shift and go to state 9
    sent_for                       shift and go to state 10
    sent_break                     shift and go to state 11
    sent_continue                  shift and go to state 12
    asignacion_vect                shift and go to state 13
    sent_function                  shift and go to state 14
    sent_llamada                   shift and go to state 15
    sent_return                    shift and go to state 16
    sent_push                      shift and go to state 17
    sent_pop                       shift and go to state 18

state 273

    (53) else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .

    PYC             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PRINT           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PRINTLN         reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ID              reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    GLOBAL          reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOCAL           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    IF              reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    WHILE           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FOR             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    BREAK           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    CONTINUE        reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FUNCTION        reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    RETURN          reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PUSH            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    POP             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    MENOS           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    NOT             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PARA            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ENTERO          reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    DECIMAL         reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    CADENA          reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TRUE            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FALSE           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    CORA            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOG10           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOG             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    SENO            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    COS             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TAN             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    SQRT            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LOWERCASE       reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    UPPERCASE       reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TRUNC           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FLOAT           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    FSTRING         reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    TYPEOF          reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    PARSE           reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    LENGTH          reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    $end            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    END             reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ELSE            reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)
    ELSEIF          reduce using rule 53 (else_if -> ELSEIF PARA expresion PARC instrucciones ELSE instrucciones END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MENOS in state 19 resolved as shift
WARNING: shift/reduce conflict for PARA in state 23 resolved as shift
WARNING: shift/reduce conflict for CORA in state 23 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 32 resolved as shift
WARNING: shift/reduce conflict for NOT in state 32 resolved as shift
WARNING: shift/reduce conflict for PARA in state 32 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 32 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 32 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 32 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 32 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 32 resolved as shift
WARNING: shift/reduce conflict for CORA in state 32 resolved as shift
WARNING: shift/reduce conflict for LOG10 in state 32 resolved as shift
WARNING: shift/reduce conflict for LOG in state 32 resolved as shift
WARNING: shift/reduce conflict for SENO in state 32 resolved as shift
WARNING: shift/reduce conflict for COS in state 32 resolved as shift
WARNING: shift/reduce conflict for TAN in state 32 resolved as shift
WARNING: shift/reduce conflict for SQRT in state 32 resolved as shift
WARNING: shift/reduce conflict for LOWERCASE in state 32 resolved as shift
WARNING: shift/reduce conflict for UPPERCASE in state 32 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 32 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 32 resolved as shift
WARNING: shift/reduce conflict for FSTRING in state 32 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 32 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 32 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 32 resolved as shift
WARNING: shift/reduce conflict for POP in state 32 resolved as shift
WARNING: shift/reduce conflict for PARA in state 76 resolved as shift
WARNING: shift/reduce conflict for CORA in state 76 resolved as shift
WARNING: shift/reduce conflict for CORA in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 92 resolved as shift
WARNING: shift/reduce conflict for MAS in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 128 resolved as shift
WARNING: shift/reduce conflict for POR in state 128 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 128 resolved as shift
WARNING: shift/reduce conflict for MOD in state 128 resolved as shift
WARNING: shift/reduce conflict for POT in state 128 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 128 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 128 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 128 resolved as shift
WARNING: shift/reduce conflict for AND in state 128 resolved as shift
WARNING: shift/reduce conflict for OR in state 128 resolved as shift
WARNING: shift/reduce conflict for DOSPTS in state 128 resolved as shift
WARNING: shift/reduce conflict for CORA in state 132 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 136 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 179 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 183 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 184 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 190 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 190 resolved as shift
WARNING: shift/reduce conflict for LOCAL in state 190 resolved as shift
WARNING: shift/reduce conflict for IF in state 190 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 190 resolved as shift
WARNING: shift/reduce conflict for FOR in state 190 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 190 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 190 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 190 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 190 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 190 resolved as shift
WARNING: shift/reduce conflict for POP in state 190 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 190 resolved as shift
WARNING: shift/reduce conflict for NOT in state 190 resolved as shift
WARNING: shift/reduce conflict for PARA in state 190 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 190 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 190 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 190 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 190 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 190 resolved as shift
WARNING: shift/reduce conflict for CORA in state 190 resolved as shift
WARNING: shift/reduce conflict for LOG10 in state 190 resolved as shift
WARNING: shift/reduce conflict for LOG in state 190 resolved as shift
WARNING: shift/reduce conflict for SENO in state 190 resolved as shift
WARNING: shift/reduce conflict for COS in state 190 resolved as shift
WARNING: shift/reduce conflict for TAN in state 190 resolved as shift
WARNING: shift/reduce conflict for SQRT in state 190 resolved as shift
WARNING: shift/reduce conflict for LOWERCASE in state 190 resolved as shift
WARNING: shift/reduce conflict for UPPERCASE in state 190 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 190 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 190 resolved as shift
WARNING: shift/reduce conflict for FSTRING in state 190 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 190 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 190 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 190 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 192 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 192 resolved as shift
WARNING: shift/reduce conflict for LOCAL in state 192 resolved as shift
WARNING: shift/reduce conflict for IF in state 192 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 192 resolved as shift
WARNING: shift/reduce conflict for FOR in state 192 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 192 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 192 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 192 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 192 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 192 resolved as shift
WARNING: shift/reduce conflict for POP in state 192 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 192 resolved as shift
WARNING: shift/reduce conflict for NOT in state 192 resolved as shift
WARNING: shift/reduce conflict for PARA in state 192 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 192 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 192 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 192 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 192 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 192 resolved as shift
WARNING: shift/reduce conflict for CORA in state 192 resolved as shift
WARNING: shift/reduce conflict for LOG10 in state 192 resolved as shift
WARNING: shift/reduce conflict for LOG in state 192 resolved as shift
WARNING: shift/reduce conflict for SENO in state 192 resolved as shift
WARNING: shift/reduce conflict for COS in state 192 resolved as shift
WARNING: shift/reduce conflict for TAN in state 192 resolved as shift
WARNING: shift/reduce conflict for SQRT in state 192 resolved as shift
WARNING: shift/reduce conflict for LOWERCASE in state 192 resolved as shift
WARNING: shift/reduce conflict for UPPERCASE in state 192 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 192 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 192 resolved as shift
WARNING: shift/reduce conflict for FSTRING in state 192 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 192 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 192 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 192 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 257 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 257 resolved as shift
WARNING: shift/reduce conflict for ID in state 257 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 257 resolved as shift
WARNING: shift/reduce conflict for LOCAL in state 257 resolved as shift
WARNING: shift/reduce conflict for IF in state 257 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 257 resolved as shift
WARNING: shift/reduce conflict for FOR in state 257 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 257 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 257 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 257 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 257 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 257 resolved as shift
WARNING: shift/reduce conflict for POP in state 257 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 257 resolved as shift
WARNING: shift/reduce conflict for NOT in state 257 resolved as shift
WARNING: shift/reduce conflict for PARA in state 257 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 257 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 257 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 257 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 257 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 257 resolved as shift
WARNING: shift/reduce conflict for CORA in state 257 resolved as shift
WARNING: shift/reduce conflict for LOG10 in state 257 resolved as shift
WARNING: shift/reduce conflict for LOG in state 257 resolved as shift
WARNING: shift/reduce conflict for SENO in state 257 resolved as shift
WARNING: shift/reduce conflict for COS in state 257 resolved as shift
WARNING: shift/reduce conflict for TAN in state 257 resolved as shift
WARNING: shift/reduce conflict for SQRT in state 257 resolved as shift
WARNING: shift/reduce conflict for LOWERCASE in state 257 resolved as shift
WARNING: shift/reduce conflict for UPPERCASE in state 257 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 257 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 257 resolved as shift
WARNING: shift/reduce conflict for FSTRING in state 257 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 257 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 257 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 257 resolved as shift
WARNING: reduce/reduce conflict in state 15 resolved using rule (instruccion -> sent_llamada)
WARNING: rejected rule (expresion -> sent_llamada) in state 15
WARNING: reduce/reduce conflict in state 189 resolved using rule (expresion -> expresion MENOS expresion)
WARNING: rejected rule (expresion -> MENOS expresion) in state 189
WARNING: reduce/reduce conflict in state 230 resolved using rule (sent_pop -> POP NOT PARA expresion PARC)
WARNING: rejected rule (expresion -> POP NOT PARA expresion PARC) in state 230
